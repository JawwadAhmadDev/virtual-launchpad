{
	"id": "b214be023168a1d4a0077cdaff736b28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"LaunchpadFactory/LaunchpadFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./Clones.sol\";\r\nimport \"../structs/LaunchpadStructs.sol\";\r\nimport \"../interfaces/ILaunchpad.sol\";\r\nimport \"../interfaces/IVirtualERC20.sol\";\r\n\r\ncontract LaunchpadFactory is Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address payable;\r\n    uint256 public constant ZOOM = 10000;\r\n\r\n    uint256 public flatFee; // fee that will be calculated on each launchpad creation\r\n    uint256 public penaltyFeePercent = 1000; // 10% // penalty that will be calculated on each emergency withdraw or cancellation the launchpad.\r\n    // address public signer;\r\n    address public superAccount;\r\n    address public virtualLock;\r\n    address payable public fundAddress; // address that will calculate all types of funds.\r\n    address public implementation; // implementation of the launchpad. This will be used to clone the launchpad\r\n\r\n    ILaunchpad[] public allLaunchpads; // array that will store all launchpads created yet.\r\n    mapping (address => ILaunchpad[]) private allLaunchpadsOf; // mapping to store all launchpads created by the user.\r\n\r\n    event NewLaunchpad(address indexed launchpad);\r\n\r\n    constructor(\r\n        // address _signer,\r\n        address _superAccount,\r\n        address _virtualLock,\r\n        address payable _fundAddress,\r\n        address _implementation\r\n    ) {\r\n        // require(_signer != address(0) && _signer != address(this), \"signer\");\r\n        require(\r\n            _virtualLock != address(0) && _virtualLock != address(this),\r\n            \"LauchpadFactory: virtualLock\"\r\n        );\r\n        require(\r\n            _superAccount != address(0) && _superAccount != address(this),\r\n            \"LauchpadFactory: superAccount\"\r\n        );\r\n        require(\r\n            _fundAddress != address(0) && _fundAddress != address(this),\r\n            \"LauchpadFactory: fundAddress\"\r\n        );\r\n        // signer = _signer;\r\n        superAccount = _superAccount;\r\n        fundAddress = _fundAddress;\r\n        virtualLock = _virtualLock;\r\n        implementation = _implementation;\r\n    }\r\n\r\n    // function setSigner(address _signer) public onlyOwner {\r\n    //     signer = _signer;\r\n    // }\r\n\r\n\r\n    function setSuperAccount(address _superAccount) public onlyOwner {\r\n        superAccount = _superAccount;\r\n    }\r\n\r\n    function setVirtualLock(address _virtualLock) public onlyOwner {\r\n        virtualLock = _virtualLock;\r\n    }\r\n\r\n    function setFundAddress(address payable _fundAddress) public onlyOwner {\r\n        fundAddress = _fundAddress;\r\n    }\r\n\r\n    function setFlatFee(uint256 _flatFee) public onlyOwner {\r\n        flatFee = _flatFee;\r\n    }\r\n\r\n    function setPenalyFeePercent(uint256 _penaltyFeePercent) public onlyOwner {\r\n        penaltyFeePercent = (_penaltyFeePercent) * 100; // due to ZOOM constant\r\n    }\r\n\r\n    function setImplementations(address _implementation) public onlyOwner {\r\n        implementation = _implementation;\r\n    }\r\n\r\n    // if deployer send BNBs more than decided fee, then excessive fee will be returned back to the deployer.\r\n    // function refundExcessiveFee() internal {\r\n    //     uint256 refund = msg.value - (flatFee);\r\n    //     if (refund > 0) {\r\n    //         payable(msg.sender).sendValue(refund);\r\n    //     }\r\n    // }\r\n\r\n    // this function is used to calcluate how many tokens deployer should have to approve to Deploy Launchpad to create a new launchpad.\r\n    function calculateTokens(\r\n        LaunchpadStructs.CalculateTokenInput memory input\r\n    ) public view returns (uint256, uint256) {\r\n        uint256 feeTokenDecimals = 18;\r\n        if (input.feeToken != address(0)) {\r\n            feeTokenDecimals = IVirtualERC20(input.feeToken).decimals();\r\n        }\r\n\r\n        uint256 totalPresaleTokens = (input.presaleRate.mul((input.hardCap))).div(10 ** feeTokenDecimals);\r\n\r\n        uint256 totalFeeTokens = (totalPresaleTokens.mul(input.raisedTokenFeePercent)).div(ZOOM);\r\n\r\n        uint256 totalRaisedFee = (input.hardCap.mul(input.raisedFeePercent)).div(ZOOM);\r\n        uint256 netCap = input.hardCap.sub(totalRaisedFee);\r\n        uint256 totalFeeTokensToAddLP = (netCap.mul(input.listingPercent)).div(ZOOM);\r\n\r\n        uint256 totalLiquidityTokens = (totalFeeTokensToAddLP.mul(input.listingPrice)).div(10 ** feeTokenDecimals);\r\n\r\n        uint256 result = totalPresaleTokens.add(totalFeeTokens).add(totalLiquidityTokens);\r\n        return (result, totalLiquidityTokens);\r\n    }\r\n\r\n    // main function that will make clones on each time a deployer will want to create a new launchpad.\r\n    function deployLaunchpad(\r\n        LaunchpadStructs.LaunchpadInfo memory info,\r\n        LaunchpadStructs.ClaimInfo memory claimInfo,\r\n        // LaunchpadStructs.TeamVestingInfo memory teamVestingInfo,\r\n        LaunchpadStructs.DexInfo memory dexInfo,\r\n        LaunchpadStructs.FeeSystem memory feeInfo,\r\n        LaunchpadStructs.SocialLinks memory socialLinks\r\n    ) external payable {\r\n        require(\r\n            // signer != address(0) &&\r\n                superAccount != address(0) &&\r\n                fundAddress != address(0),\r\n            \"LauchpadFactory: Can not create launchpad now!\"\r\n        );\r\n        require(msg.value >= flatFee, \"LauchpadFactory: Not enough fee!\");\r\n\r\n        // refund excessive fee paid by the user\r\n        // if(msg.value > flatFee){\r\n        //     refundExcessiveFee();\r\n        // }\r\n\r\n        LaunchpadStructs.SettingAccount memory settingAccount = LaunchpadStructs\r\n            .SettingAccount(\r\n                _msgSender(),\r\n                // signer,\r\n                superAccount,\r\n                payable(fundAddress),\r\n                virtualLock\r\n            );\r\n\r\n        IVirtualERC20 icoToken = IVirtualERC20(info.icoToken);\r\n        uint256 feeTokenDecimals = 18;\r\n        if (info.feeToken != address(0)) {\r\n            feeTokenDecimals = IVirtualERC20(info.feeToken).decimals();\r\n        }\r\n\r\n        LaunchpadStructs.CalculateTokenInput memory input = LaunchpadStructs\r\n            .CalculateTokenInput(\r\n                info.feeToken,\r\n                info.presaleRate,\r\n                info.hardCap,\r\n                feeInfo.raisedTokenFeePercent,\r\n                feeInfo.raisedFeePercent,\r\n                dexInfo.listingPercent,\r\n                dexInfo.listingPrice\r\n            );\r\n\r\n        uint256 totalTokens;\r\n        uint256 maxLP;\r\n\r\n        (totalTokens, maxLP) = calculateTokens(input);\r\n\r\n        // clone implementation\r\n        address launchpad = Clones.clone(implementation);\r\n        // initialize new cloned implementation\r\n        ILaunchpad(launchpad).initialize(\r\n            info,\r\n            claimInfo,\r\n            // teamVestingInfo,\r\n            dexInfo,\r\n            feeInfo,\r\n            settingAccount,\r\n            socialLinks,\r\n            maxLP,\r\n            penaltyFeePercent\r\n        );\r\n        // LaunchpadV2 launchpad = new LaunchpadV2(info, claimInfo, teamVestingInfo, dexInfo, feeInfo, settingAccount, maxLP);\r\n\r\n        if (msg.value > 0) {\r\n            payable(fundAddress).transfer(msg.value);\r\n        }\r\n\r\n        if (totalTokens > 0) {\r\n            IERC20 icoTokenErc20 = IERC20(info.icoToken);\r\n\r\n            require(\r\n                icoTokenErc20.balanceOf(_msgSender()) >= totalTokens,\r\n                \"LauchpadFactory: Insufficient Balance\"\r\n            );\r\n            require(\r\n                icoTokenErc20.allowance(_msgSender(), address(this)) >=\r\n                    totalTokens,\r\n                \"LauchpadFactory: Insufficient Allowance\"\r\n            );\r\n\r\n            require(\r\n                icoToken.transferFrom(\r\n                    _msgSender(),\r\n                    address(launchpad),\r\n                    totalTokens\r\n                ),\r\n                \"LauchpadFactory: transfer failed\"\r\n            );\r\n        }\r\n\r\n        allLaunchpads.push(ILaunchpad(launchpad)); \r\n        allLaunchpadsOf[msg.sender].push(ILaunchpad(launchpad));\r\n\r\n\r\n        emit NewLaunchpad(address(launchpad));\r\n    }\r\n\r\n    // total launchpads created yet on the platform\r\n    function totalLaunchpads() external view returns (ILaunchpad[] memory launchpads){\r\n        return allLaunchpads;\r\n    }\r\n\r\n    // total launchpads by user. This will be used for myContribution section\r\n    function totalLaunchpadsByUser(address _user) external view returns (ILaunchpad[] memory launchpadsByUser){\r\n        return allLaunchpadsOf[_user];\r\n    }\r\n\r\n}\r\n"
			},
			"interfaces/IVirtualERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\npragma solidity ^0.8.2;\r\n\r\ninterface IVirtualERC20 is IERC20 {\r\n   function decimals() external view returns (uint8);\r\n}"
			},
			"interfaces/ILaunchpad.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"../structs/LaunchpadStructs.sol\";\r\n\r\ninterface ILaunchpad {\r\n    function initialize(\r\n        LaunchpadStructs.LaunchpadInfo memory info,\r\n        LaunchpadStructs.ClaimInfo memory userClaimInfo,\r\n        // LaunchpadStructs.TeamVestingInfo memory teamVestingInfo,\r\n        LaunchpadStructs.DexInfo memory dexInfo,\r\n        LaunchpadStructs.FeeSystem memory feeInfo,\r\n        LaunchpadStructs.SettingAccount memory settingAccount,\r\n        LaunchpadStructs.SocialLinks memory socialLinks,\r\n        uint256 _maxLP,\r\n        uint256 _penaltyFeePercent\r\n    ) external;\r\n\r\n    function getLaunchpadInfo()\r\n        external\r\n        view\r\n        returns (LaunchpadStructs.LaunchpadReturnInfo memory);\r\n\r\n    function getOwnerZoneInfo(\r\n        address _user\r\n    ) external view returns (LaunchpadStructs.OwnerZoneInfo memory);\r\n\r\n    function getJoinedUsers()\r\n    external\r\n    view\r\n    returns (address[] memory);\r\n}\r\n"
			},
			"structs/LaunchpadStructs.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nlibrary LaunchpadStructs {\r\n    struct LaunchpadInfo {\r\n        address icoToken; // token address for which presale is created\r\n        address feeToken; // which token will be used for fee. i.e. BUSD, USDT or USDC\r\n        uint256 softCap; // min amount this project wants to collect\r\n        uint256 hardCap; // max amount this project wants to collect\r\n        uint256 presaleRate; // how much ico tokens equal to 1 feeToken\r\n        uint256 minInvest; // minimum limit of a user investment\r\n        uint256 maxInvest; // maximum limit of a user against all the investments\r\n        uint256 startTime; // from which time launchpad will start \r\n        uint256 endTime; //  at which time launchpad will end\r\n        uint256 whitelistPool; //0 public, 1 whitelist, 2 public anti bot \r\n                    // Anti-Bot System: With this option you can control who can contribute to the pool. \r\n                    // Only Users who hold a minimum amount of token you suggest would be able to contribute\r\n        uint256 poolType; //0 burn, 1 refund\r\n    }\r\n\r\n    struct ClaimInfo {\r\n        // uint256 cliffVesting; //First gap release after listing (minutes)\r\n        // uint256 lockAfterCliffVesting; //second gap release after cliff (minutes)\r\n        uint256 firstReleasePercent; // percent of tokens to be released first time.\r\n        uint256 vestingPeriodEachCycle; // time of each cycle after first release\r\n        uint256 tokenReleaseEachCycle; // percentage of tokens to be released on completion of each cycle.\r\n    }\r\n\r\n\r\n    struct DexInfo {\r\n        bool manualListing; // true -> manualListing(after end of launchpad owner can claim all the collected amount and can manually list on any dex)\r\n                            // false -> autoListing (after end of launchpad liquidity will be added automatically at the time of finalizing the launchpad.)\r\n        address routerAddress; // router address of DEX in case of auto listing\r\n        address factoryAddress; // factory address in case of auto listing\r\n        uint256 listingPrice; // how much tokens will be added for liquidity against one feeToken in case of auto listing\r\n        uint256 listingPercent;// 1=> 10000 (how much percentage of raised feeTokens will be added for liquidity in case of auto listing)\r\n        uint256 lpLockTime; // how much time liquidity will be locked. time will be taken in the form of days.\r\n    }\r\n\r\n\r\n    struct LaunchpadReturnInfo {\r\n        uint256 softCap; \r\n        uint256 hardCap;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        uint256 state; // state of Launchpad. whether it is actived / finalized / cancelled (1 / 2 / 3 respectively)\r\n        uint256 raisedAmount; // total amount raised yet.\r\n        uint256 balance; // how much tokens are in the account of launchpad smart contract\r\n        address feeToken; \r\n        uint256 listingTime; // time on which user can claim tokens or time on which liquidity is added.\r\n        uint256 whitelistPool; // status of pool. whether it is public / whitelisted / public anti bot (0 public, 1 whitelist, 2 public anti bot)\r\n        // address holdingToken; // this will be used in case of anti bot mechanism\r\n        // uint256 holdingTokenAmount; // this address will also be used in anti-bot mechanism.\r\n                                // for further detail of anti-bot mechanism see the comments of launchpadInfo structure.\r\n        \r\n        // social links\r\n        string logoURL;\r\n        string description;\r\n        string websiteURL;\r\n        string facebookURL;\r\n        string twitterURL;\r\n        string githubURL;\r\n        string telegramURL;\r\n        string instagramURL;\r\n        string discordURL;\r\n        string redditURL;\r\n\r\n        address icoToken;\r\n        uint256 firstReleasePercent;\r\n        uint256 listingPercent;\r\n        uint256 listingPrice;\r\n        uint256 lpLockTime;\r\n        uint256 maxInvest;\r\n        uint256 minInvest;\r\n        uint256 maxLiquidity;\r\n        uint256 presaleRate;\r\n        uint256 totalSoldTokens;\r\n        bool manualListing;\r\n    }\r\n\r\n    struct OwnerZoneInfo { // this structure is designed to show owner's informations\r\n        bool isOwner; // caller is owner or not\r\n        uint256 whitelistPool; // whether pool is public / whitelisted / anti-bot (0 / 1 / 2 respectively)\r\n        bool canFinalize; // owner can finalized the launchpad or not at this stage.\r\n        bool canCancel; // owner can cancel the launchpad at this stage or not.\r\n                        // NOTE: for further details see getOwnerZoneInfo() function implemented in Launchpad contract\r\n    }\r\n\r\n    struct FeeSystem {\r\n        // initFee is commented out because init fee functionality is implemented in deployeLaunchpad by named flatFee.\r\n        // uint256 initFee; // initial fee to create a launchpad. this fee will be transferred to the owner's account at each launchpad creation.\r\n        uint256 raisedFeePercent; // how much percent of collected BNB will be transferred to to the fee collector A/C at the time of finalizing launchpad.\r\n        uint256 raisedTokenFeePercent; // how much percent of collected feeToken will be transferred to the fee collector address at the time of finalizing launchpad.\r\n        // uint256 penaltyFee; // how much fee will be dedected on emergency withdrawl in case of both scenarios i.e. BNB / feeToken\r\n    }\r\n\r\n    struct SettingAccount {\r\n        address deployer;\r\n        // address signer; // this is used for permit. But we don't want to use this. That is why it is commented out\r\n        address superAccount; // address that will be set by the launchpad owner and it will have power on all the launchpads.\r\n        address payable fundAddress; // address which will receive all kind of collected BNB or tokens.\r\n        address virtualLock; // contract address implementing lock mechanism\r\n    }\r\n\r\n    // struct TeamVestingInfo {\r\n    //     uint256 teamTotalVestingTokens; // how much tokens are being invested in presale\r\n    //     uint256 teamCliffVesting; //First token release after listing (minutes)\r\n    //     uint256 teamFirstReleasePercent; // how much percentage of tokens will be released first time.\r\n    //     uint256 teamVestingPeriodEachCycle; // tokens release time limit for each cycle after first time.\r\n    //     uint256 teamTokenReleaseEachCycle; // percentage of tokens to be released in each cycle.\r\n    // }\r\n\r\n    struct CalculateTokenInput {\r\n        address feeToken; // against which token presale is created. i.e. against BNB or BUSD or any other ERC20 token.\r\n        uint256 presaleRate; // how much icotokens will be equal to 1 fee Token. i.e. 1 BNB = 100 BL Tokens\r\n        uint256 hardCap; // maximum how much BNB or Fee tokens we want from presale.\r\n        uint256 raisedTokenFeePercent; // in case of feetoken is BUSD or any other ERC20token, how much fee will be deducted from raised BUSD or other ERC20Token \r\n        uint256 raisedFeePercent; // in case of feeToken is BNB, how much percent will be deducted from raised BNBs and will be transfered to the system. \r\n        uint256 listingPercent; // in case of autolisting, how much liquidity of raised BNB or Fee tokens will be added.\r\n        uint256 listingPrice; // how much ico tokens will be equal to 1 fee token at the time of liqudity. \r\n                              // in other words, how much liquidity of icoTokens will be added against 1 feeToken. i.e. 1 BNB = 50 Bl Tokens\r\n    }\r\n\r\n\r\n    struct SocialLinks {\r\n        string logoURL;\r\n        string description;\r\n        string websiteURL;\r\n        string facebookURL;\r\n        string twitterURL;\r\n        string githubURL;\r\n        string telegramURL;\r\n        string instagramURL;\r\n        string discordURL;\r\n        string redditURL;\r\n    }\r\n}\r\n\r\n\r\n\r\n"
			},
			"LaunchpadFactory/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\r\n * deploying minimal proxy contracts, also known as \"clones\".\r\n *\r\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\r\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\r\n *\r\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\r\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\r\n * deterministic method.\r\n *\r\n * _Available since v3.4._\r\n */\r\nlibrary Clones {\r\n    /**\r\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\r\n     *\r\n     * This function uses the create opcode, which should never revert.\r\n     */\r\n    function clone(address implementation) internal returns (address instance) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\r\n            // of the `implementation` address with the bytecode before the address.\r\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\r\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\r\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\r\n            instance := create(0, 0x09, 0x37)\r\n        }\r\n        require(instance != address(0), \"ERC1167: create failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\r\n     *\r\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\r\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\r\n     * the clones cannot be deployed twice at the same address.\r\n     */\r\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\r\n            // of the `implementation` address with the bytecode before the address.\r\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\r\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\r\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\r\n            instance := create2(0, 0x09, 0x37, salt)\r\n        }\r\n        require(instance != address(0), \"ERC1167: create2 failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\r\n     */\r\n    function predictDeterministicAddress(\r\n        address implementation,\r\n        bytes32 salt,\r\n        address deployer\r\n    ) internal pure returns (address predicted) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            mstore(add(ptr, 0x38), deployer)\r\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\r\n            mstore(add(ptr, 0x14), implementation)\r\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\r\n            mstore(add(ptr, 0x58), salt)\r\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\r\n            predicted := keccak256(add(ptr, 0x43), 0x55)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\r\n     */\r\n    function predictDeterministicAddress(\r\n        address implementation,\r\n        bytes32 salt\r\n    ) internal view returns (address predicted) {\r\n        return predictDeterministicAddress(implementation, salt, address(this));\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xDA DUP4 SWAP13 PUSH18 0xDE4998B97BB5D687B69290308A06D6755FF9 0xD7 0xD 0x1E PUSH11 0x9A3A0190DC64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xDA DUP4 SWAP13 PUSH18 0xDE4998B97BB5D687B69290308A06D6755FF9 0xD7 0xD 0x1E PUSH11 0x9A3A0190DC64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"LaunchpadFactory/Clones.sol",
								"LaunchpadFactory/LaunchpadFactory.sol",
								"interfaces/ILaunchpad.sol",
								"interfaces/IVirtualERC20.sol",
								"structs/LaunchpadStructs.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH17 0x356EA41F630B0C74EDA7F60962B0243D82 MOD SLOAD 0xED MSTORE 0xD0 SWAP11 AND 0xB1 BASEFEE LOG0 0xF7 0xF9 PUSH22 0x64736F6C634300081200330000000000000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH17 0x356EA41F630B0C74EDA7F60962B0243D82 MOD SLOAD 0xED MSTORE 0xD0 SWAP11 AND 0xB1 BASEFEE LOG0 0xF7 0xF9 PUSH22 0x64736F6C634300081200330000000000000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"LaunchpadFactory/Clones.sol",
								"LaunchpadFactory/LaunchpadFactory.sol",
								"interfaces/ILaunchpad.sol",
								"interfaces/IVirtualERC20.sol",
								"structs/LaunchpadStructs.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"LaunchpadFactory/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LaunchpadFactory/Clones.sol\":773:4117  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"LaunchpadFactory/Clones.sol\":773:4117  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f59d5152fbadc86093d854ca9c39bd11770d069dc7766cd3b80a93568f1d635264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f59d5152fbadc86093d854ca9c39bd11770d069dc7766cd3b80a93568f1d635264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SWAP14 MLOAD MSTORE 0xFB 0xAD 0xC8 PUSH1 0x93 0xD8 SLOAD 0xCA SWAP13 CODECOPY 0xBD GT PUSH24 0xD069DC7766CD3B80A93568F1D635264736F6C6343000812 STOP CALLER ",
							"sourceMap": "773:3344:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;773:3344:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f59d5152fbadc86093d854ca9c39bd11770d069dc7766cd3b80a93568f1d635264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SWAP14 MLOAD MSTORE 0xFB 0xAD 0xC8 PUSH1 0x93 0xD8 SLOAD 0xCA SWAP13 CODECOPY 0xBD GT PUSH24 0xD069DC7766CD3B80A93568F1D635264736F6C6343000812 STOP CALLER ",
							"sourceMap": "773:3344:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f59d5152fbadc86093d854ca9c39bd11770d069dc7766cd3b80a93568f1d635264736f6c63430008120033",
									".code": [
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"LaunchpadFactory/Clones.sol",
								"LaunchpadFactory/LaunchpadFactory.sol",
								"interfaces/ILaunchpad.sol",
								"interfaces/IVirtualERC20.sol",
								"structs/LaunchpadStructs.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LaunchpadFactory/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"LaunchpadFactory/Clones.sol\":{\"keccak256\":\"0x2362d7dd406da7ffbd665a99fd4a9c033d5d0e0113429f28848a54ff603d1878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://963cfd950920cc1703d1190b0f0bcd6d5bbce666773e13f1d5955cc356bd9ba8\",\"dweb:/ipfs/QmT6pkaQqEYcvDwHvJakuwNTtBRnaJJFhGW85Mn6238EUh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"LaunchpadFactory/LaunchpadFactory.sol": {
				"LaunchpadFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_superAccount",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_virtualLock",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_fundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "launchpad",
									"type": "address"
								}
							],
							"name": "NewLaunchpad",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ZOOM",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allLaunchpads",
							"outputs": [
								{
									"internalType": "contract ILaunchpad",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "presaleRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "hardCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "raisedTokenFeePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "raisedFeePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "listingPercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "listingPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.CalculateTokenInput",
									"name": "input",
									"type": "tuple"
								}
							],
							"name": "calculateTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "icoToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "softCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "hardCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "presaleRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minInvest",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxInvest",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "whitelistPool",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "poolType",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.LaunchpadInfo",
									"name": "info",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "firstReleasePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "vestingPeriodEachCycle",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenReleaseEachCycle",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.ClaimInfo",
									"name": "claimInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "manualListing",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "routerAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "factoryAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "listingPrice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "listingPercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lpLockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.DexInfo",
									"name": "dexInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "raisedFeePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "raisedTokenFeePercent",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.FeeSystem",
									"name": "feeInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "logoURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "websiteURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "facebookURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "twitterURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "githubURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "telegramURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "instagramURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "discordURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "redditURL",
											"type": "string"
										}
									],
									"internalType": "struct LaunchpadStructs.SocialLinks",
									"name": "socialLinks",
									"type": "tuple"
								}
							],
							"name": "deployLaunchpad",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flatFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundAddress",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltyFeePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flatFee",
									"type": "uint256"
								}
							],
							"name": "setFlatFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_fundAddress",
									"type": "address"
								}
							],
							"name": "setFundAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "setImplementations",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_penaltyFeePercent",
									"type": "uint256"
								}
							],
							"name": "setPenalyFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_superAccount",
									"type": "address"
								}
							],
							"name": "setSuperAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_virtualLock",
									"type": "address"
								}
							],
							"name": "setVirtualLock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "superAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLaunchpads",
							"outputs": [
								{
									"internalType": "contract ILaunchpad[]",
									"name": "launchpads",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "totalLaunchpadsByUser",
							"outputs": [
								{
									"internalType": "contract ILaunchpad[]",
									"name": "launchpadsByUser",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "virtualLock",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LaunchpadFactory/LaunchpadFactory.sol\":437:8637  contract LaunchpadFactory is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":721:725  1000 */\n  0x03e8\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":686:725  uint256 public penaltyFeePercent = 1000 */\n  0x02\n  sstore\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1406:2313  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1705:1731  _virtualLock != address(0) */\n  dup4\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1705:1764  _virtualLock != address(0) && _virtualLock != address(this) */\n  tag_12\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1735:1764  _virtualLock != address(this) */\n  dup4\n  and\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1759:1763  this */\n  address\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1735:1764  _virtualLock != address(this) */\n  eq\n  iszero\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1705:1764  _virtualLock != address(0) && _virtualLock != address(this) */\ntag_12:\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1683:1820  require(... */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1019:1021   */\n  0x20\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1683:1820  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1001:1022   */\n  mstore\n    /* \"#utility.yul\":1058:1060   */\n  0x1c\n    /* \"#utility.yul\":1038:1056   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1031:1061   */\n  mstore\n    /* \"#utility.yul\":1097:1127   */\n  0x4c61756368706164466163746f72793a207669727475616c4c6f636b00000000\n    /* \"#utility.yul\":1077:1095   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1070:1128   */\n  mstore\n    /* \"#utility.yul\":1145:1163   */\n  0x64\n  add\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1683:1820  require(... */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1853:1880  _superAccount != address(0) */\n  dup5\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1853:1914  _superAccount != address(0) && _superAccount != address(this) */\n  tag_16\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1884:1914  _superAccount != address(this) */\n  dup5\n  and\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1909:1913  this */\n  address\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1884:1914  _superAccount != address(this) */\n  eq\n  iszero\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1853:1914  _superAccount != address(0) && _superAccount != address(this) */\ntag_16:\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1831:1971  require(... */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1376:1378   */\n  0x20\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1831:1971  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1358:1379   */\n  mstore\n    /* \"#utility.yul\":1415:1417   */\n  0x1d\n    /* \"#utility.yul\":1395:1413   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1388:1418   */\n  mstore\n    /* \"#utility.yul\":1454:1485   */\n  0x4c61756368706164466163746f72793a2073757065724163636f756e74000000\n    /* \"#utility.yul\":1434:1452   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1427:1486   */\n  mstore\n    /* \"#utility.yul\":1503:1521   */\n  0x64\n  add\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1831:1971  require(... */\n  tag_14\n    /* \"#utility.yul\":1174:1527   */\n  jump\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1831:1971  require(... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2004:2030  _fundAddress != address(0) */\n  dup3\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2004:2063  _fundAddress != address(0) && _fundAddress != address(this) */\n  tag_20\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2034:2063  _fundAddress != address(this) */\n  dup3\n  and\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2058:2062  this */\n  address\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2034:2063  _fundAddress != address(this) */\n  eq\n  iszero\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2004:2063  _fundAddress != address(0) && _fundAddress != address(this) */\ntag_20:\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1982:2119  require(... */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1734:1736   */\n  0x20\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1982:2119  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1716:1737   */\n  mstore\n    /* \"#utility.yul\":1773:1775   */\n  0x1c\n    /* \"#utility.yul\":1753:1771   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1746:1776   */\n  mstore\n    /* \"#utility.yul\":1812:1842   */\n  0x4c61756368706164466163746f72793a2066756e644164647265737300000000\n    /* \"#utility.yul\":1792:1810   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1785:1843   */\n  mstore\n    /* \"#utility.yul\":1860:1878   */\n  0x64\n  add\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1982:2119  require(... */\n  tag_14\n    /* \"#utility.yul\":1532:1884   */\n  jump\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":1982:2119  require(... */\ntag_21:\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2160:2172  superAccount */\n  0x03\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2160:2188  superAccount = _superAccount */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2199:2210  fundAddress */\n  0x05\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2199:2225  fundAddress = _fundAddress */\n  dup1\n  sload\n  dup3\n  and\n  swap4\n  dup7\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2236:2247  virtualLock */\n  0x04\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2236:2262  virtualLock = _virtualLock */\n  dup1\n  sload\n  dup4\n  and\n  swap4\n  dup6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2273:2287  implementation */\n  0x06\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":2273:2305  implementation = _implementation */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap2\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":437:8637  contract LaunchpadFactory is Ownable {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:145   */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_30:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:812   */\ntag_3:\n    /* \"#utility.yul\":255:261   */\n  0x00\n    /* \"#utility.yul\":263:269   */\n  dup1\n    /* \"#utility.yul\":271:277   */\n  0x00\n    /* \"#utility.yul\":279:285   */\n  dup1\n    /* \"#utility.yul\":332:335   */\n  0x80\n    /* \"#utility.yul\":320:329   */\n  dup6\n    /* \"#utility.yul\":311:318   */\n  dup8\n    /* \"#utility.yul\":307:330   */\n  sub\n    /* \"#utility.yul\":303:336   */\n  slt\n    /* \"#utility.yul\":300:353   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":346:347   */\n  dup1\n    /* \"#utility.yul\":339:351   */\n  revert\n    /* \"#utility.yul\":300:353   */\ntag_32:\n    /* \"#utility.yul\":381:390   */\n  dup5\n    /* \"#utility.yul\":375:391   */\n  mload\n    /* \"#utility.yul\":400:431   */\n  tag_33\n    /* \"#utility.yul\":425:430   */\n  dup2\n    /* \"#utility.yul\":400:431   */\n  tag_27\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":500:502   */\n  0x20\n    /* \"#utility.yul\":485:503   */\n  dup7\n  add\n    /* \"#utility.yul\":479:504   */\n  mload\n    /* \"#utility.yul\":450:455   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":513:546   */\n  tag_34\n    /* \"#utility.yul\":479:504   */\n  dup2\n    /* \"#utility.yul\":513:546   */\n  tag_27\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":617:619   */\n  0x40\n    /* \"#utility.yul\":602:620   */\n  dup7\n  add\n    /* \"#utility.yul\":596:621   */\n  mload\n    /* \"#utility.yul\":565:572   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":630:663   */\n  tag_35\n    /* \"#utility.yul\":596:621   */\n  dup2\n    /* \"#utility.yul\":630:663   */\n  tag_27\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":734:736   */\n  0x60\n    /* \"#utility.yul\":719:737   */\n  dup7\n  add\n    /* \"#utility.yul\":713:738   */\n  mload\n    /* \"#utility.yul\":682:689   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":747:780   */\n  tag_36\n    /* \"#utility.yul\":713:738   */\n  dup2\n    /* \"#utility.yul\":747:780   */\n  tag_27\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":150:812   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1532:1884   */\ntag_28:\n    /* \"LaunchpadFactory/LaunchpadFactory.sol\":437:8637  contract LaunchpadFactory is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":437:8637  contract LaunchpadFactory is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85dc3004\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa96df743\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa96df743\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb6b7913e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc06ca1dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd9eb5947\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe82bef29\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x85dc3004\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x892f78fa\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8a9b66cc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9352dace\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x5a416a36\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x5a416a36\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x640f82f3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6de944dc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x23fa495a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x49a1f14b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51ae878f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x53aca078\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x58e5bc88\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2788:2880  function setFlatFee(uint256 _flatFee) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4782:8210  function deployLaunchpad(... */\n    tag_3:\n      tag_27\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2888:3051  function setPenalyFeePercent(uint256 _penaltyFeePercent) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_27\n      tag_37\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":1137:1170  ILaunchpad[] public allLaunchpads */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7920:7952   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7902:7953   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7890:7892   */\n      0x20\n        /* \"#utility.yul\":7875:7893   */\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":1137:1170  ILaunchpad[] public allLaunchpads */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":554:590  uint256 public constant ZOOM = 10000 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":585:590  10000 */\n      0x2710\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":554:590  uint256 public constant ZOOM = 10000 */\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":8110:8135   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8098:8100   */\n      0x20\n        /* \"#utility.yul\":8083:8101   */\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":554:590  uint256 public constant ZOOM = 10000 */\n      tag_43\n        /* \"#utility.yul\":7964:8141   */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2548:2656  function setVirtualLock(address _virtualLock) public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_27\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":1022:1051  address public implementation */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      sload(0x06)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":897:923  address public virtualLock */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      sload(0x04)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8478:8632  function totalLaunchpadsByUser(address _user) external view returns (ILaunchpad[] memory launchpadsByUser){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_27\n      tag_72\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2664:2780  function setFundAddress(address payable _fundAddress) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2428:2540  function setSuperAccount(address _superAccount) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":686:725  uint256 public penaltyFeePercent = 1000 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_46\n      sload(0x02)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3059:3180  function setImplementations(address _implementation) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_27\n      tag_92\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3649:4669  function calculateTokens(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10757:10782   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":10813:10815   */\n      0x20\n        /* \"#utility.yul\":10798:10816   */\n      dup4\n      add\n        /* \"#utility.yul\":10791:10825   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10730:10748   */\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3649:4669  function calculateTokens(... */\n      tag_43\n        /* \"#utility.yul\":10583:10831   */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":863:890  address public superAccount */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      sload(0x03)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8271:8391  function totalLaunchpads() external view returns (ILaunchpad[] memory launchpads){... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_65\n      tag_107\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":599:621  uint256 public flatFee */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_46\n      sload(0x01)\n      dup2\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":930:964  address payable public fundAddress */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      sload(0x05)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_27\n      tag_120\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2788:2880  function setFlatFee(uint256 _flatFee) public onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2854:2861  flatFee */\n      0x01\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2854:2872  flatFee = _flatFee */\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2788:2880  function setFlatFee(uint256 _flatFee) public onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4782:8210  function deployLaunchpad(... */\n    tag_34:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5244:5256  superAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5244:5270  superAccount != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5244:5316  superAccount != address(0) &&... */\n      tag_127\n      jumpi\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5291:5302  fundAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5291:5316  fundAddress != address(0) */\n      iszero\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5244:5316  superAccount != address(0) &&... */\n    tag_127:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5178:5390  require(... */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11262:11264   */\n      0x20\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5178:5390  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11244:11265   */\n      mstore\n        /* \"#utility.yul\":11301:11303   */\n      0x2e\n        /* \"#utility.yul\":11281:11299   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11274:11304   */\n      mstore\n        /* \"#utility.yul\":11340:11374   */\n      0x4c61756368706164466163746f72793a2043616e206e6f742063726561746520\n        /* \"#utility.yul\":11320:11338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11313:11375   */\n      mstore\n      shl(0x90, 0x6c61756e6368706164206e6f7721)\n        /* \"#utility.yul\":11391:11409   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11384:11428   */\n      mstore\n        /* \"#utility.yul\":11445:11464   */\n      0x84\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5178:5390  require(... */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5422:5429  flatFee */\n      sload(0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5409:5418  msg.value */\n      callvalue\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5409:5429  msg.value >= flatFee */\n      lt\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5401:5466  require(msg.value >= flatFee, \"LauchpadFactory: Not enough fee!\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11677:11679   */\n      0x20\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5401:5466  require(msg.value >= flatFee, \"LauchpadFactory: Not enough fee!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11659:11680   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11696:11714   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11689:11719   */\n      mstore\n        /* \"#utility.yul\":11755:11789   */\n      0x4c61756368706164466163746f72793a204e6f7420656e6f7567682066656521\n        /* \"#utility.yul\":11735:11753   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11728:11790   */\n      mstore\n        /* \"#utility.yul\":11807:11825   */\n      0x64\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5401:5466  require(msg.value >= flatFee, \"LauchpadFactory: Not enough fee!\") */\n      tag_129\n        /* \"#utility.yul\":11475:11831   */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5401:5466  require(msg.value >= flatFee, \"LauchpadFactory: Not enough fee!\") */\n    tag_131:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5620:5673  LaunchpadStructs.SettingAccount memory settingAccount */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5676:5895  LaunchpadStructs... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5740:5752  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5740:5752  _msgSender() */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5676:5895  LaunchpadStructs... */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5799:5811  superAccount */\n      sload(0x03)\n      dup2\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5676:5895  LaunchpadStructs... */\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5838:5849  fundAddress */\n      sload(0x05)\n      dup3\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5676:5895  LaunchpadStructs... */\n      0x40\n      dup5\n      add\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5869:5880  virtualLock */\n      sload(0x04)\n      dup3\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5676:5895  LaunchpadStructs... */\n      0x60\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5947:5960  info.icoToken */\n      dup9\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6016:6029  info.feeToken */\n      swap2\n      dup10\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5620:5895  LaunchpadStructs.SettingAccount memory settingAccount = LaunchpadStructs... */\n      swap3\n      swap4\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5947:5960  info.icoToken */\n      swap1\n      swap2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5999:6001  18 */\n      0x12\n      swap2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6016:6043  info.feeToken != address(0) */\n      and\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6012:6130  if (info.feeToken != address(0)) {... */\n      tag_136\n      jumpi\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6093:6097  info */\n      dup8\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6093:6106  info.feeToken */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6079:6116  IVirtualERC20(info.feeToken).decimals */\n      and\n      0x313ce567\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6079:6118  IVirtualERC20(info.feeToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6060:6118  feeTokenDecimals = IVirtualERC20(info.feeToken).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6012:6130  if (info.feeToken != address(0)) {... */\n    tag_136:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6263:6276  info.feeToken */\n      0x20\n      dup1\n      dup12\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      and\n      dup3\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6295:6311  info.presaleRate */\n      0x80\n      dup1\n      dup13\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      dup3\n      dup5\n      add\n      mstore\n      0x60\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6330:6342  info.hardCap */\n      dup1\n      dup14\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      swap5\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6361:6390  feeInfo.raisedTokenFeePercent */\n      swap1\n      dup9\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      dup4\n      dup4\n      add\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6409:6433  feeInfo.raisedFeePercent */\n      dup8\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      dup2\n      dup4\n      add\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6452:6474  dexInfo.listingPercent */\n      dup9\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6493:6513  dexInfo.listingPrice */\n      swap1\n      dup8\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6142:6191  LaunchpadStructs.CalculateTokenInput memory input */\n      0x00\n      dup1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6620:6642  calculateTokens(input) */\n      tag_141\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6194:6528  LaunchpadStructs... */\n      dup4\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6620:6635  calculateTokens */\n      tag_98\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6620:6642  calculateTokens(input) */\n      jump\t// in\n    tag_141:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6721:6735  implementation */\n      sload(0x06)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6597:6642  (totalTokens, maxLP) = calculateTokens(input) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6688:6705  address launchpad */\n      0x00\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6708:6736  Clones.clone(implementation) */\n      tag_142\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6721:6735  implementation */\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6708:6720  Clones.clone */\n      tag_143\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6708:6736  Clones.clone(implementation) */\n      jump\t// in\n    tag_142:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6688:6736  address launchpad = Clones.clone(implementation) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6807:6816  launchpad */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6796:6828  ILaunchpad(launchpad).initialize */\n      and\n      0x57801e6f\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6843:6847  info */\n      dup14\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6862:6871  claimInfo */\n      dup14\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6919:6926  dexInfo */\n      dup14\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6941:6948  feeInfo */\n      dup14\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6963:6977  settingAccount */\n      dup13\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6992:7003  socialLinks */\n      dup15\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7018:7023  maxLP */\n      dup10\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7038:7055  penaltyFeePercent */\n      sload(0x02)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":6796:7066  ILaunchpad(launchpad).initialize(... */\n      mload(0x40)\n      dup10\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7223:7224  0 */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7211:7220  msg.value */\n      callvalue\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7211:7224  msg.value > 0 */\n      gt\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7207:7293  if (msg.value > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7249:7260  fundAddress */\n      sload(0x05)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7241:7281  payable(fundAddress).transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7249:7260  fundAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7271:7280  msg.value */\n      callvalue\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7241:7281  payable(fundAddress).transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7249:7260  fundAddress */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7241:7281  payable(fundAddress).transfer(msg.value) */\n      dup2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7249:7260  fundAddress */\n      dup2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7241:7281  payable(fundAddress).transfer(msg.value) */\n      dup2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7271:7280  msg.value */\n      dup6\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7249:7260  fundAddress */\n      dup9\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7241:7281  payable(fundAddress).transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7207:7293  if (msg.value > 0) {... */\n    tag_149:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7309:7324  totalTokens > 0 */\n      dup3\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7305:8030  if (totalTokens > 0) {... */\n      tag_152\n      jumpi\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7371:7384  info.icoToken */\n      dup12\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7469:7480  totalTokens */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7428:7451  icoTokenErc20.balanceOf */\n      dup3\n      and\n      0x70a08231\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7428:7465  icoTokenErc20.balanceOf(_msgSender()) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7920:7952   */\n      swap1\n      swap2\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7428:7465  icoTokenErc20.balanceOf(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7902:7953   */\n      mstore\n        /* \"#utility.yul\":7875:7893   */\n      0x24\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7428:7465  icoTokenErc20.balanceOf(_msgSender()) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7428:7480  icoTokenErc20.balanceOf(_msgSender()) >= totalTokens */\n      lt\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7402:7553  require(... */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17836:17838   */\n      0x20\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7402:7553  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17818:17839   */\n      mstore\n        /* \"#utility.yul\":17875:17877   */\n      0x25\n        /* \"#utility.yul\":17855:17873   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17848:17878   */\n      mstore\n        /* \"#utility.yul\":17914:17948   */\n      0x4c61756368706164466163746f72793a20496e73756666696369656e74204261\n        /* \"#utility.yul\":17894:17912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17887:17949   */\n      mstore\n      shl(0xd8, 0x6c616e6365)\n        /* \"#utility.yul\":17965:17983   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17958:17993   */\n      mstore\n        /* \"#utility.yul\":18010:18029   */\n      0x84\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7402:7553  require(... */\n      tag_129\n        /* \"#utility.yul\":17634:18035   */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7402:7553  require(... */\n    tag_159:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7671:7682  totalTokens */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7594:7617  icoTokenErc20.allowance */\n      dup3\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7594:7646  icoTokenErc20.allowance(_msgSender(), address(this)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18270:18285   */\n      swap1\n      swap2\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7594:7646  icoTokenErc20.allowance(_msgSender(), address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18252:18286   */\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7640:7644  this */\n      address\n        /* \"#utility.yul\":18302:18320   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18295:18338   */\n      mstore\n        /* \"#utility.yul\":18187:18205   */\n      0x44\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7594:7646  icoTokenErc20.allowance(_msgSender(), address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_167:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7594:7682  icoTokenErc20.allowance(_msgSender(), address(this)) >=... */\n      lt\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7568:7757  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18551:18553   */\n      0x20\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7568:7757  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18533:18554   */\n      mstore\n        /* \"#utility.yul\":18590:18592   */\n      0x27\n        /* \"#utility.yul\":18570:18588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18563:18593   */\n      mstore\n        /* \"#utility.yul\":18629:18663   */\n      0x4c61756368706164466163746f72793a20496e73756666696369656e7420416c\n        /* \"#utility.yul\":18609:18627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18602:18664   */\n      mstore\n      shl(0xc8, 0x6c6f77616e6365)\n        /* \"#utility.yul\":18680:18698   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18673:18710   */\n      mstore\n        /* \"#utility.yul\":18727:18746   */\n      0x84\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7568:7757  require(... */\n      tag_129\n        /* \"#utility.yul\":18349:18752   */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7568:7757  require(... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7800:7821  icoToken.transferFrom */\n      dup8\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7800:7950  icoToken.transferFrom(... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19015:19030   */\n      swap2\n      dup3\n      and\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7800:7950  icoToken.transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18997:19031   */\n      mstore\n        /* \"#utility.yul\":19067:19082   */\n      swap1\n      dup6\n      and\n        /* \"#utility.yul\":19047:19065   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19040:19083   */\n      mstore\n        /* \"#utility.yul\":19099:19117   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":19092:19126   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":18932:18950   */\n      0x64\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7800:7950  icoToken.transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7774:8018  require(... */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19589:19591   */\n      0x20\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7774:8018  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19571:19592   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":19608:19626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19601:19631   */\n      mstore\n        /* \"#utility.yul\":19667:19701   */\n      0x4c61756368706164466163746f72793a207472616e73666572206661696c6564\n        /* \"#utility.yul\":19647:19665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19640:19702   */\n      mstore\n        /* \"#utility.yul\":19719:19737   */\n      0x64\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7774:8018  require(... */\n      tag_129\n        /* \"#utility.yul\":19387:19743   */\n      jump\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7774:8018  require(... */\n    tag_178:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7326:8030  {... */\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":7305:8030  if (totalTokens > 0) {... */\n    tag_152:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8042:8055  allLaunchpads */\n      0x07\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8042:8083  allLaunchpads.push(ILaunchpad(launchpad)) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      swap1\n      swap3\n      sstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8111:8121  msg.sender */\n      caller\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8095:8122  allLaunchpadsOf[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8095:8110  allLaunchpadsOf */\n      0x08\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8042:8083  allLaunchpads.push(ILaunchpad(launchpad)) */\n      0x20\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8095:8122  allLaunchpadsOf[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8095:8150  allLaunchpadsOf[msg.sender].push(ILaunchpad(launchpad)) */\n      dup1\n      sload\n      swap7\n      dup8\n      add\n      dup2\n      sstore\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup4\n      or\n      swap1\n      swap2\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8170:8202  NewLaunchpad(address(launchpad)) */\n      swap2\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8042:8083  allLaunchpads.push(ILaunchpad(launchpad)) */\n      swap1\n      swap2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8170:8202  NewLaunchpad(address(launchpad)) */\n      0xda2d0d8f4060e08dd20f6fb6ad959f9920958220cc60733db44068db43a02601\n      swap2\n      log2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":5167:8210  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4782:8210  function deployLaunchpad(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2888:3051  function setPenalyFeePercent(uint256 _penaltyFeePercent) public onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2993:3019  (_penaltyFeePercent) * 100 */\n      tag_186\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2994:3012  _penaltyFeePercent */\n      dup2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3016:3019  100 */\n      0x64\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2993:3019  (_penaltyFeePercent) * 100 */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2973:2990  penaltyFeePercent */\n      0x02\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2973:3019  penaltyFeePercent = (_penaltyFeePercent) * 100 */\n      sstore\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2888:3051  function setPenalyFeePercent(uint256 _penaltyFeePercent) public onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":1137:1170  ILaunchpad[] public allLaunchpads */\n    tag_42:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2548:2656  function setVirtualLock(address _virtualLock) public onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2622:2633  virtualLock */\n      0x04\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2622:2648  virtualLock = _virtualLock */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2548:2656  function setVirtualLock(address _virtualLock) public onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8478:8632  function totalLaunchpadsByUser(address _user) external view returns (ILaunchpad[] memory launchpadsByUser){... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8602:8624  allLaunchpadsOf[_user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8602:8617  allLaunchpadsOf */\n      0x08\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8602:8624  allLaunchpadsOf[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8595:8624  return allLaunchpadsOf[_user] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8547:8583  ILaunchpad[] memory launchpadsByUser */\n      0x60\n      swap4\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8595:8624  return allLaunchpadsOf[_user] */\n      swap3\n      dup4\n      add\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8602:8624  allLaunchpadsOf[_user] */\n      dup3\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8595:8624  return allLaunchpadsOf[_user] */\n      dup3\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_195:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_195\n      jumpi\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8478:8632  function totalLaunchpadsByUser(address _user) external view returns (ILaunchpad[] memory launchpadsByUser){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2664:2780  function setFundAddress(address payable _fundAddress) public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2746:2757  fundAddress */\n      0x05\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2746:2772  fundAddress = _fundAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2664:2780  function setFundAddress(address payable _fundAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2428:2540  function setSuperAccount(address _superAccount) public onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2504:2516  superAccount */\n      0x03\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2504:2532  superAccount = _superAccount */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":2428:2540  function setSuperAccount(address _superAccount) public onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3059:3180  function setImplementations(address _implementation) public onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3140:3154  implementation */\n      0x06\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3140:3172  implementation = _implementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3059:3180  function setImplementations(address _implementation) public onlyOwner {... */\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3649:4669  function calculateTokens(... */\n    tag_98:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3835:3849  input.feeToken */\n      dup1\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3762:3769  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3818:3820  18 */\n      0x12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3835:3863  input.feeToken != address(0) */\n      and\n      iszero\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3831:3951  if (input.feeToken != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3913:3918  input */\n      dup4\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3913:3927  input.feeToken */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3899:3937  IVirtualERC20(input.feeToken).decimals */\n      and\n      0x313ce567\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3899:3939  IVirtualERC20(input.feeToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_215:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3880:3939  feeTokenDecimals = IVirtualERC20(input.feeToken).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3831:3951  if (input.feeToken != address(0)) {... */\n    tag_212:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3963:3989  uint256 totalPresaleTokens */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3992:4060  (input.presaleRate.mul((input.hardCap))).div(10 ** feeTokenDecimals) */\n      tag_216\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4037:4059  10 ** feeTokenDecimals */\n      tag_217\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4043:4059  feeTokenDecimals */\n      dup4\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4037:4039  10 */\n      0x0a\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4037:4059  10 ** feeTokenDecimals */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4016:4029  input.hardCap */\n      0x40\n      dup8\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3993:4010  input.presaleRate */\n      0x20\n      dup9\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3993:4031  input.presaleRate.mul((input.hardCap)) */\n      tag_219\n      swap2\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3993:4014  input.presaleRate.mul */\n      tag_220\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3993:4031  input.presaleRate.mul((input.hardCap)) */\n      jump\t// in\n    tag_219:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3992:4036  (input.presaleRate.mul((input.hardCap))).div */\n      swap1\n      tag_221\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3992:4060  (input.presaleRate.mul((input.hardCap))).div(10 ** feeTokenDecimals) */\n      jump\t// in\n    tag_216:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3963:4060  uint256 totalPresaleTokens = (input.presaleRate.mul((input.hardCap))).div(10 ** feeTokenDecimals) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4073:4095  uint256 totalFeeTokens */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4098:4161  (totalPresaleTokens.mul(input.raisedTokenFeePercent)).div(ZOOM) */\n      tag_222\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":585:590  10000 */\n      0x2710\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4099:4150  totalPresaleTokens.mul(input.raisedTokenFeePercent) */\n      tag_219\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4122:4127  input */\n      dup9\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4122:4149  input.raisedTokenFeePercent */\n      0x60\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4099:4117  totalPresaleTokens */\n      dup6\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4099:4121  totalPresaleTokens.mul */\n      tag_220\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4099:4150  totalPresaleTokens.mul(input.raisedTokenFeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4098:4161  (totalPresaleTokens.mul(input.raisedTokenFeePercent)).div(ZOOM) */\n    tag_222:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4073:4161  uint256 totalFeeTokens = (totalPresaleTokens.mul(input.raisedTokenFeePercent)).div(ZOOM) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4174:4196  uint256 totalRaisedFee */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4199:4252  (input.hardCap.mul(input.raisedFeePercent)).div(ZOOM) */\n      tag_224\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":585:590  10000 */\n      0x2710\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4200:4241  input.hardCap.mul(input.raisedFeePercent) */\n      tag_219\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4218:4223  input */\n      dup10\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4218:4240  input.raisedFeePercent */\n      0x80\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4200:4205  input */\n      dup11\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4200:4213  input.hardCap */\n      0x40\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4200:4217  input.hardCap.mul */\n      tag_220\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4200:4241  input.hardCap.mul(input.raisedFeePercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4199:4252  (input.hardCap.mul(input.raisedFeePercent)).div(ZOOM) */\n    tag_224:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4174:4252  uint256 totalRaisedFee = (input.hardCap.mul(input.raisedFeePercent)).div(ZOOM) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4263:4277  uint256 netCap */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4280:4313  input.hardCap.sub(totalRaisedFee) */\n      tag_226\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4298:4312  totalRaisedFee */\n      dup3\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4280:4285  input */\n      dup10\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4280:4293  input.hardCap */\n      0x40\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4280:4297  input.hardCap.sub */\n      tag_227\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4280:4313  input.hardCap.sub(totalRaisedFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4263:4313  uint256 netCap = input.hardCap.sub(totalRaisedFee) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4324:4353  uint256 totalFeeTokensToAddLP */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4356:4400  (netCap.mul(input.listingPercent)).div(ZOOM) */\n      tag_228\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":585:590  10000 */\n      0x2710\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4357:4389  netCap.mul(input.listingPercent) */\n      tag_219\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4368:4373  input */\n      dup12\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4368:4388  input.listingPercent */\n      0xa0\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4357:4363  netCap */\n      dup6\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4357:4367  netCap.mul */\n      tag_220\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4357:4389  netCap.mul(input.listingPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4356:4400  (netCap.mul(input.listingPercent)).div(ZOOM) */\n    tag_228:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4324:4400  uint256 totalFeeTokensToAddLP = (netCap.mul(input.listingPercent)).div(ZOOM) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4413:4441  uint256 totalLiquidityTokens */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4444:4519  (totalFeeTokensToAddLP.mul(input.listingPrice)).div(10 ** feeTokenDecimals) */\n      tag_230\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4496:4518  10 ** feeTokenDecimals */\n      tag_231\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4502:4518  feeTokenDecimals */\n      dup9\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4496:4498  10 */\n      0x0a\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4496:4518  10 ** feeTokenDecimals */\n      tag_218\n      jump\t// in\n    tag_231:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4471:4489  input.listingPrice */\n      0xc0\n      dup13\n      add\n      mload\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4445:4490  totalFeeTokensToAddLP.mul(input.listingPrice) */\n      tag_219\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4445:4466  totalFeeTokensToAddLP */\n      dup6\n      swap1\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4445:4470  totalFeeTokensToAddLP.mul */\n      tag_220\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4445:4490  totalFeeTokensToAddLP.mul(input.listingPrice) */\n      jump\t// in\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4444:4519  (totalFeeTokensToAddLP.mul(input.listingPrice)).div(10 ** feeTokenDecimals) */\n    tag_230:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4413:4519  uint256 totalLiquidityTokens = (totalFeeTokensToAddLP.mul(input.listingPrice)).div(10 ** feeTokenDecimals) */\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4532:4546  uint256 result */\n      0x00\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4613  totalPresaleTokens.add(totalFeeTokens).add(totalLiquidityTokens) */\n      tag_233\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4413:4519  uint256 totalLiquidityTokens = (totalFeeTokensToAddLP.mul(input.listingPrice)).div(10 ** feeTokenDecimals) */\n      dup3\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4587  totalPresaleTokens.add(totalFeeTokens) */\n      tag_234\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4567  totalPresaleTokens */\n      dup10\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4572:4586  totalFeeTokens */\n      dup10\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4571  totalPresaleTokens.add */\n      tag_235\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4587  totalPresaleTokens.add(totalFeeTokens) */\n      jump\t// in\n    tag_234:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4591  totalPresaleTokens.add(totalFeeTokens).add */\n      swap1\n      tag_235\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4549:4613  totalPresaleTokens.add(totalFeeTokens).add(totalLiquidityTokens) */\n      jump\t// in\n    tag_233:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4532:4613  uint256 result = totalPresaleTokens.add(totalFeeTokens).add(totalLiquidityTokens) */\n      swap12\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":4640:4660  totalLiquidityTokens */\n      swap2\n      swap11\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":3649:4669  function calculateTokens(... */\n      swap1\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8271:8391  function totalLaunchpads() external view returns (ILaunchpad[] memory launchpads){... */\n    tag_107:\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8321:8351  ILaunchpad[] memory launchpads */\n      0x60\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8370:8383  allLaunchpads */\n      0x07\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8363:8383  return allLaunchpads */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_238:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_238\n      jumpi\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"LaunchpadFactory/LaunchpadFactory.sol\":8271:8391  function totalLaunchpads() external view returns (ILaunchpad[] memory launchpads){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21629:21631   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21611:21632   */\n      mstore\n        /* \"#utility.yul\":21668:21670   */\n      0x26\n        /* \"#utility.yul\":21648:21666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21641:21671   */\n      mstore\n        /* \"#utility.yul\":21707:21741   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":21687:21705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21680:21742   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":21758:21776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21751:21787   */\n      mstore\n        /* \"#utility.yul\":21804:21823   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_129\n        /* \"#utility.yul\":21427:21829   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22036:22038   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22018:22039   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":22055:22073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22048:22078   */\n      mstore\n        /* \"#utility.yul\":22114:22148   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":22094:22112   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22087:22149   */\n      mstore\n        /* \"#utility.yul\":22166:22184   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n        /* \"#utility.yul\":21834:22190   */\n      jump\n        /* \"LaunchpadFactory/Clones.sol\":997:1767  function clone(address implementation) internal returns (address instance) {... */\n    tag_143:\n        /* \"LaunchpadFactory/Clones.sol\":1054:1070  address instance */\n      0x00\n        /* \"LaunchpadFactory/Clones.sol\":1391:1439  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"LaunchpadFactory/Clones.sol\":1373:1387  implementation */\n      dup3\n        /* \"LaunchpadFactory/Clones.sol\":1367:1371  0x60 */\n      0x60\n        /* \"LaunchpadFactory/Clones.sol\":1363:1388  shl(0x60, implementation) */\n      shl\n        /* \"LaunchpadFactory/Clones.sol\":1357:1361  0xe8 */\n      0xe8\n        /* \"LaunchpadFactory/Clones.sol\":1353:1389  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"LaunchpadFactory/Clones.sol\":1350:1440  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"LaunchpadFactory/Clones.sol\":1344:1348  0x00 */\n      0x00\n        /* \"LaunchpadFactory/Clones.sol\":1337:1441  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"LaunchpadFactory/Clones.sol\":1600:1632  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"LaunchpadFactory/Clones.sol\":1583:1597  implementation */\n      dup3\n        /* \"LaunchpadFactory/Clones.sol\":1577:1581  0x78 */\n      0x78\n        /* \"LaunchpadFactory/Clones.sol\":1573:1598  shl(0x78, implementation) */\n      shl\n        /* \"LaunchpadFactory/Clones.sol\":1570:1633  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"LaunchpadFactory/Clones.sol\":1564:1568  0x20 */\n      0x20\n        /* \"LaunchpadFactory/Clones.sol\":1557:1634  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"LaunchpadFactory/Clones.sol\":1676:1680  0x37 */\n      0x37\n        /* \"LaunchpadFactory/Clones.sol\":1670:1674  0x09 */\n      0x09\n        /* \"LaunchpadFactory/Clones.sol\":1667:1668  0 */\n      0x00\n        /* \"LaunchpadFactory/Clones.sol\":1660:1681  create(0, 0x09, 0x37) */\n      create\n        /* \"LaunchpadFactory/Clones.sol\":1648:1681  instance := create(0, 0x09, 0x37) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LaunchpadFactory/Clones.sol\":1710:1732  instance != address(0) */\n      dup2\n      and\n        /* \"LaunchpadFactory/Clones.sol\":1702:1759  require(instance != address(0), \"ERC1167: create failed\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22397:22399   */\n      0x20\n        /* \"LaunchpadFactory/Clones.sol\":1702:1759  require(instance != address(0), \"ERC1167: create failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22379:22400   */\n      mstore\n        /* \"#utility.yul\":22436:22438   */\n      0x16\n        /* \"#utility.yul\":22416:22434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22409:22439   */\n      mstore\n      shl(0x52, 0x115490cc4c4d8dce8818dc99585d194819985a5b1959)\n        /* \"#utility.yul\":22455:22473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22448:22500   */\n      mstore\n        /* \"#utility.yul\":22517:22535   */\n      0x64\n      add\n        /* \"LaunchpadFactory/Clones.sol\":1702:1759  require(instance != address(0), \"ERC1167: create failed\") */\n      tag_129\n        /* \"#utility.yul\":22195:22541   */\n      jump\n        /* \"LaunchpadFactory/Clones.sol\":1702:1759  require(instance != address(0), \"ERC1167: create failed\") */\n    tag_254:\n        /* \"LaunchpadFactory/Clones.sol\":997:1767  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_187\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_258:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_262\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_265\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_29:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_292:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:326   */\n    tag_269:\n        /* \"#utility.yul\":260:270   */\n      0x4e487b71\n        /* \"#utility.yul\":255:258   */\n      0xe0\n        /* \"#utility.yul\":251:271   */\n      shl\n        /* \"#utility.yul\":248:249   */\n      0x00\n        /* \"#utility.yul\":241:272   */\n      mstore\n        /* \"#utility.yul\":291:295   */\n      0x41\n        /* \"#utility.yul\":288:289   */\n      0x04\n        /* \"#utility.yul\":281:296   */\n      mstore\n        /* \"#utility.yul\":315:319   */\n      0x24\n        /* \"#utility.yul\":312:313   */\n      0x00\n        /* \"#utility.yul\":305:320   */\n      revert\n        /* \"#utility.yul\":331:586   */\n    tag_270:\n        /* \"#utility.yul\":403:405   */\n      0x40\n        /* \"#utility.yul\":397:406   */\n      mload\n        /* \"#utility.yul\":445:451   */\n      0x0140\n        /* \"#utility.yul\":433:452   */\n      dup2\n      add\n        /* \"#utility.yul\":482:500   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":467:501   */\n      dup2\n      gt\n        /* \"#utility.yul\":503:525   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":464:526   */\n      or\n        /* \"#utility.yul\":461:549   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":529:547   */\n      tag_296\n      tag_269\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":565:567   */\n      0x40\n        /* \"#utility.yul\":558:580   */\n      mstore\n        /* \"#utility.yul\":331:586   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":591:841   */\n    tag_271:\n        /* \"#utility.yul\":658:660   */\n      0x40\n        /* \"#utility.yul\":652:661   */\n      mload\n        /* \"#utility.yul\":700:706   */\n      0x0160\n        /* \"#utility.yul\":688:707   */\n      dup2\n      add\n        /* \"#utility.yul\":737:755   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":722:756   */\n      dup2\n      gt\n        /* \"#utility.yul\":758:780   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":719:781   */\n      or\n        /* \"#utility.yul\":716:804   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":784:802   */\n      tag_296\n      tag_269\n      jump\t// in\n        /* \"#utility.yul\":846:977   */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":921:952   */\n      dup2\n      and\n        /* \"#utility.yul\":911:953   */\n      dup2\n      eq\n        /* \"#utility.yul\":901:971   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":967:968   */\n      0x00\n        /* \"#utility.yul\":964:965   */\n      dup1\n        /* \"#utility.yul\":957:969   */\n      revert\n        /* \"#utility.yul\":982:1116   */\n    tag_273:\n        /* \"#utility.yul\":1050:1070   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1079:1110   */\n      tag_254\n        /* \"#utility.yul\":1050:1070   */\n      dup2\n        /* \"#utility.yul\":1079:1110   */\n      tag_272\n      jump\t// in\n        /* \"#utility.yul\":1121:1661   */\n    tag_274:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1225:1229   */\n      0x60\n        /* \"#utility.yul\":1213:1222   */\n      dup3\n        /* \"#utility.yul\":1208:1211   */\n      dup5\n        /* \"#utility.yul\":1204:1223   */\n      sub\n        /* \"#utility.yul\":1200:1230   */\n      slt\n        /* \"#utility.yul\":1197:1247   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":1243:1244   */\n      0x00\n        /* \"#utility.yul\":1240:1241   */\n      dup1\n        /* \"#utility.yul\":1233:1245   */\n      revert\n        /* \"#utility.yul\":1197:1247   */\n    tag_305:\n        /* \"#utility.yul\":1276:1278   */\n      0x40\n        /* \"#utility.yul\":1270:1279   */\n      mload\n        /* \"#utility.yul\":1318:1322   */\n      0x60\n        /* \"#utility.yul\":1310:1316   */\n      dup2\n        /* \"#utility.yul\":1306:1323   */\n      add\n        /* \"#utility.yul\":1389:1395   */\n      dup2\n        /* \"#utility.yul\":1377:1387   */\n      dup2\n        /* \"#utility.yul\":1374:1396   */\n      lt\n        /* \"#utility.yul\":1353:1371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1341:1351   */\n      dup3\n        /* \"#utility.yul\":1338:1372   */\n      gt\n        /* \"#utility.yul\":1335:1397   */\n      or\n        /* \"#utility.yul\":1332:1420   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":1400:1418   */\n      tag_307\n      tag_269\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1440:1450   */\n      dup1\n        /* \"#utility.yul\":1436:1438   */\n      0x40\n        /* \"#utility.yul\":1429:1451   */\n      mstore\n      pop\n        /* \"#utility.yul\":1469:1475   */\n      dup1\n        /* \"#utility.yul\":1460:1475   */\n      swap2\n      pop\n        /* \"#utility.yul\":1512:1521   */\n      dup3\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n        /* \"#utility.yul\":1491:1497   */\n      dup2\n        /* \"#utility.yul\":1484:1523   */\n      mstore\n        /* \"#utility.yul\":1584:1586   */\n      0x20\n        /* \"#utility.yul\":1573:1582   */\n      dup4\n        /* \"#utility.yul\":1569:1587   */\n      add\n        /* \"#utility.yul\":1556:1588   */\n      calldataload\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1543:1549   */\n      dup3\n        /* \"#utility.yul\":1539:1554   */\n      add\n        /* \"#utility.yul\":1532:1589   */\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x40\n        /* \"#utility.yul\":1639:1648   */\n      dup4\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"#utility.yul\":1622:1654   */\n      calldataload\n        /* \"#utility.yul\":1617:1619   */\n      0x40\n        /* \"#utility.yul\":1609:1615   */\n      dup3\n        /* \"#utility.yul\":1605:1620   */\n      add\n        /* \"#utility.yul\":1598:1655   */\n      mstore\n      pop\n        /* \"#utility.yul\":1121:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1666:1784   */\n    tag_275:\n        /* \"#utility.yul\":1752:1757   */\n      dup1\n        /* \"#utility.yul\":1745:1758   */\n      iszero\n        /* \"#utility.yul\":1738:1759   */\n      iszero\n        /* \"#utility.yul\":1731:1736   */\n      dup2\n        /* \"#utility.yul\":1728:1760   */\n      eq\n        /* \"#utility.yul\":1718:1778   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":1774:1775   */\n      0x00\n        /* \"#utility.yul\":1771:1772   */\n      dup1\n        /* \"#utility.yul\":1764:1776   */\n      revert\n        /* \"#utility.yul\":1789:2745   */\n    tag_276:\n        /* \"#utility.yul\":1843:1848   */\n      0x00\n        /* \"#utility.yul\":1891:1895   */\n      0xc0\n        /* \"#utility.yul\":1879:1888   */\n      dup3\n        /* \"#utility.yul\":1874:1877   */\n      dup5\n        /* \"#utility.yul\":1870:1889   */\n      sub\n        /* \"#utility.yul\":1866:1896   */\n      slt\n        /* \"#utility.yul\":1863:1913   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1906:1907   */\n      dup1\n        /* \"#utility.yul\":1899:1911   */\n      revert\n        /* \"#utility.yul\":1863:1913   */\n    tag_311:\n        /* \"#utility.yul\":1942:1944   */\n      0x40\n        /* \"#utility.yul\":1936:1945   */\n      mload\n        /* \"#utility.yul\":1984:1988   */\n      0xc0\n        /* \"#utility.yul\":1976:1982   */\n      dup2\n        /* \"#utility.yul\":1972:1989   */\n      add\n        /* \"#utility.yul\":2055:2061   */\n      dup2\n        /* \"#utility.yul\":2043:2053   */\n      dup2\n        /* \"#utility.yul\":2040:2062   */\n      lt\n        /* \"#utility.yul\":2019:2037   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2007:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2038   */\n      gt\n        /* \"#utility.yul\":2001:2063   */\n      or\n        /* \"#utility.yul\":1998:2086   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2066:2084   */\n      tag_313\n      tag_269\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2102:2104   */\n      0x40\n        /* \"#utility.yul\":2095:2117   */\n      mstore\n        /* \"#utility.yul\":2135:2141   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":2165:2188   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":2197:2227   */\n      tag_314\n        /* \"#utility.yul\":2165:2188   */\n      dup2\n        /* \"#utility.yul\":2197:2227   */\n      tag_275\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2236:2259   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2311:2313   */\n      0x20\n        /* \"#utility.yul\":2296:2314   */\n      dup4\n      add\n        /* \"#utility.yul\":2283:2315   */\n      calldataload\n        /* \"#utility.yul\":2324:2357   */\n      tag_315\n        /* \"#utility.yul\":2283:2315   */\n      dup2\n        /* \"#utility.yul\":2324:2357   */\n      tag_272\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2385:2387   */\n      0x20\n        /* \"#utility.yul\":2373:2388   */\n      dup3\n      add\n        /* \"#utility.yul\":2366:2398   */\n      mstore\n        /* \"#utility.yul\":2450:2452   */\n      0x40\n        /* \"#utility.yul\":2435:2453   */\n      dup4\n      add\n        /* \"#utility.yul\":2422:2454   */\n      calldataload\n        /* \"#utility.yul\":2463:2496   */\n      tag_316\n        /* \"#utility.yul\":2422:2454   */\n      dup2\n        /* \"#utility.yul\":2463:2496   */\n      tag_272\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2529:2536   */\n      dup1\n        /* \"#utility.yul\":2524:2526   */\n      0x40\n        /* \"#utility.yul\":2516:2522   */\n      dup4\n        /* \"#utility.yul\":2512:2527   */\n      add\n        /* \"#utility.yul\":2505:2537   */\n      mstore\n      pop\n        /* \"#utility.yul\":2598:2600   */\n      0x60\n        /* \"#utility.yul\":2587:2596   */\n      dup4\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2570:2602   */\n      calldataload\n        /* \"#utility.yul\":2565:2567   */\n      0x60\n        /* \"#utility.yul\":2557:2563   */\n      dup3\n        /* \"#utility.yul\":2553:2568   */\n      add\n        /* \"#utility.yul\":2546:2603   */\n      mstore\n        /* \"#utility.yul\":2665:2668   */\n      0x80\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2650:2669   */\n      add\n        /* \"#utility.yul\":2637:2670   */\n      calldataload\n        /* \"#utility.yul\":2631:2634   */\n      0x80\n        /* \"#utility.yul\":2623:2629   */\n      dup3\n        /* \"#utility.yul\":2619:2635   */\n      add\n        /* \"#utility.yul\":2612:2671   */\n      mstore\n        /* \"#utility.yul\":2733:2736   */\n      0xa0\n        /* \"#utility.yul\":2722:2731   */\n      dup4\n        /* \"#utility.yul\":2718:2737   */\n      add\n        /* \"#utility.yul\":2705:2738   */\n      calldataload\n        /* \"#utility.yul\":2699:2702   */\n      0xa0\n        /* \"#utility.yul\":2691:2697   */\n      dup3\n        /* \"#utility.yul\":2687:2703   */\n      add\n        /* \"#utility.yul\":2680:2739   */\n      mstore\n      pop\n        /* \"#utility.yul\":1789:2745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2750:3228   */\n    tag_277:\n        /* \"#utility.yul\":2806:2811   */\n      0x00\n        /* \"#utility.yul\":2854:2858   */\n      0x40\n        /* \"#utility.yul\":2842:2851   */\n      dup3\n        /* \"#utility.yul\":2837:2840   */\n      dup5\n        /* \"#utility.yul\":2833:2852   */\n      sub\n        /* \"#utility.yul\":2829:2859   */\n      slt\n        /* \"#utility.yul\":2826:2876   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2869:2870   */\n      dup1\n        /* \"#utility.yul\":2862:2874   */\n      revert\n        /* \"#utility.yul\":2826:2876   */\n    tag_318:\n        /* \"#utility.yul\":2905:2909   */\n      0x40\n        /* \"#utility.yul\":2899:2910   */\n      mload\n        /* \"#utility.yul\":2949:2953   */\n      0x40\n        /* \"#utility.yul\":2941:2947   */\n      dup2\n        /* \"#utility.yul\":2937:2954   */\n      add\n        /* \"#utility.yul\":3020:3026   */\n      dup2\n        /* \"#utility.yul\":3008:3018   */\n      dup2\n        /* \"#utility.yul\":3005:3027   */\n      lt\n        /* \"#utility.yul\":2984:3002   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2972:2982   */\n      dup3\n        /* \"#utility.yul\":2969:3003   */\n      gt\n        /* \"#utility.yul\":2966:3028   */\n      or\n        /* \"#utility.yul\":2963:3051   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3031:3049   */\n      tag_320\n      tag_269\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3067:3071   */\n      0x40\n        /* \"#utility.yul\":3060:3084   */\n      mstore\n        /* \"#utility.yul\":3132:3155   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":3117:3156   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3202:3220   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":3189:3221   */\n      calldataload\n        /* \"#utility.yul\":3172:3187   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":3165:3222   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":3102:3108   */\n      swap2\n        /* \"#utility.yul\":2750:3228   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3952   */\n    tag_278:\n        /* \"#utility.yul\":3276:3281   */\n      0x00\n        /* \"#utility.yul\":3329:3332   */\n      dup3\n        /* \"#utility.yul\":3322:3326   */\n      0x1f\n        /* \"#utility.yul\":3314:3320   */\n      dup4\n        /* \"#utility.yul\":3310:3327   */\n      add\n        /* \"#utility.yul\":3306:3333   */\n      slt\n        /* \"#utility.yul\":3296:3351   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3344:3345   */\n      dup1\n        /* \"#utility.yul\":3337:3349   */\n      revert\n        /* \"#utility.yul\":3296:3351   */\n    tag_322:\n        /* \"#utility.yul\":3383:3389   */\n      dup2\n        /* \"#utility.yul\":3370:3390   */\n      calldataload\n        /* \"#utility.yul\":3409:3427   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3446:3448   */\n      dup1\n        /* \"#utility.yul\":3442:3444   */\n      dup3\n        /* \"#utility.yul\":3439:3449   */\n      gt\n        /* \"#utility.yul\":3436:3472   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3452:3470   */\n      tag_324\n      tag_269\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3527:3529   */\n      0x40\n        /* \"#utility.yul\":3521:3530   */\n      mload\n        /* \"#utility.yul\":3495:3497   */\n      0x1f\n        /* \"#utility.yul\":3581:3594   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3577:3599   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3601:3603   */\n      0x3f\n        /* \"#utility.yul\":3573:3604   */\n      add\n        /* \"#utility.yul\":3569:3609   */\n      and\n        /* \"#utility.yul\":3557:3610   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3625:3643   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3645:3667   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3622:3668   */\n      or\n        /* \"#utility.yul\":3619:3691   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3671:3689   */\n      tag_326\n      tag_269\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3711:3721   */\n      dup2\n        /* \"#utility.yul\":3707:3709   */\n      0x40\n        /* \"#utility.yul\":3700:3722   */\n      mstore\n        /* \"#utility.yul\":3746:3748   */\n      dup4\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3731:3749   */\n      mstore\n        /* \"#utility.yul\":3792:3795   */\n      dup7\n        /* \"#utility.yul\":3785:3789   */\n      0x20\n        /* \"#utility.yul\":3780:3782   */\n      dup6\n        /* \"#utility.yul\":3772:3778   */\n      dup9\n        /* \"#utility.yul\":3768:3783   */\n      add\n        /* \"#utility.yul\":3764:3790   */\n      add\n        /* \"#utility.yul\":3761:3796   */\n      gt\n        /* \"#utility.yul\":3758:3813   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3809:3810   */\n      0x00\n        /* \"#utility.yul\":3806:3807   */\n      dup1\n        /* \"#utility.yul\":3799:3811   */\n      revert\n        /* \"#utility.yul\":3758:3813   */\n    tag_327:\n        /* \"#utility.yul\":3873:3875   */\n      dup4\n        /* \"#utility.yul\":3866:3870   */\n      0x20\n        /* \"#utility.yul\":3858:3864   */\n      dup8\n        /* \"#utility.yul\":3854:3871   */\n      add\n        /* \"#utility.yul\":3847:3851   */\n      0x20\n        /* \"#utility.yul\":3839:3845   */\n      dup4\n        /* \"#utility.yul\":3835:3852   */\n      add\n        /* \"#utility.yul\":3822:3876   */\n      calldatacopy\n        /* \"#utility.yul\":3920:3921   */\n      0x00\n        /* \"#utility.yul\":3913:3917   */\n      0x20\n        /* \"#utility.yul\":3908:3910   */\n      dup6\n        /* \"#utility.yul\":3900:3906   */\n      dup4\n        /* \"#utility.yul\":3896:3911   */\n      add\n        /* \"#utility.yul\":3892:3918   */\n      add\n        /* \"#utility.yul\":3885:3922   */\n      mstore\n        /* \"#utility.yul\":3940:3946   */\n      dup1\n        /* \"#utility.yul\":3931:3946   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3233:3952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:6028   */\n    tag_279:\n        /* \"#utility.yul\":4015:4020   */\n      0x00\n        /* \"#utility.yul\":4063:4069   */\n      0x0140\n        /* \"#utility.yul\":4051:4060   */\n      dup3\n        /* \"#utility.yul\":4046:4049   */\n      dup5\n        /* \"#utility.yul\":4042:4061   */\n      sub\n        /* \"#utility.yul\":4038:4070   */\n      slt\n        /* \"#utility.yul\":4035:4087   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4083:4084   */\n      0x00\n        /* \"#utility.yul\":4080:4081   */\n      dup1\n        /* \"#utility.yul\":4073:4085   */\n      revert\n        /* \"#utility.yul\":4035:4087   */\n    tag_329:\n        /* \"#utility.yul\":4105:4127   */\n      tag_330\n      tag_270\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4096:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":4163:4172   */\n      dup2\n        /* \"#utility.yul\":4150:4173   */\n      calldataload\n        /* \"#utility.yul\":4192:4210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4233:4235   */\n      dup1\n        /* \"#utility.yul\":4225:4231   */\n      dup3\n        /* \"#utility.yul\":4222:4236   */\n      gt\n        /* \"#utility.yul\":4219:4253   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4219:4253   */\n    tag_331:\n        /* \"#utility.yul\":4276:4322   */\n      tag_332\n        /* \"#utility.yul\":4318:4321   */\n      dup6\n        /* \"#utility.yul\":4309:4315   */\n      dup4\n        /* \"#utility.yul\":4298:4307   */\n      dup7\n        /* \"#utility.yul\":4294:4316   */\n      add\n        /* \"#utility.yul\":4276:4322   */\n      tag_278\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4269:4274   */\n      dup4\n        /* \"#utility.yul\":4262:4323   */\n      mstore\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"#utility.yul\":4365:4374   */\n      dup5\n        /* \"#utility.yul\":4361:4379   */\n      add\n        /* \"#utility.yul\":4348:4380   */\n      calldataload\n        /* \"#utility.yul\":4332:4380   */\n      swap2\n      pop\n        /* \"#utility.yul\":4405:4407   */\n      dup1\n        /* \"#utility.yul\":4395:4403   */\n      dup3\n        /* \"#utility.yul\":4392:4408   */\n      gt\n        /* \"#utility.yul\":4389:4425   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":4421:4422   */\n      0x00\n        /* \"#utility.yul\":4418:4419   */\n      dup1\n        /* \"#utility.yul\":4411:4423   */\n      revert\n        /* \"#utility.yul\":4389:4425   */\n    tag_333:\n        /* \"#utility.yul\":4457:4505   */\n      tag_334\n        /* \"#utility.yul\":4501:4504   */\n      dup6\n        /* \"#utility.yul\":4490:4498   */\n      dup4\n        /* \"#utility.yul\":4479:4488   */\n      dup7\n        /* \"#utility.yul\":4475:4499   */\n      add\n        /* \"#utility.yul\":4457:4505   */\n      tag_278\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4452:4454   */\n      0x20\n        /* \"#utility.yul\":4445:4450   */\n      dup5\n        /* \"#utility.yul\":4441:4455   */\n      add\n        /* \"#utility.yul\":4434:4506   */\n      mstore\n        /* \"#utility.yul\":4559:4561   */\n      0x40\n        /* \"#utility.yul\":4548:4557   */\n      dup5\n        /* \"#utility.yul\":4544:4562   */\n      add\n        /* \"#utility.yul\":4531:4563   */\n      calldataload\n        /* \"#utility.yul\":4515:4563   */\n      swap2\n      pop\n        /* \"#utility.yul\":4588:4590   */\n      dup1\n        /* \"#utility.yul\":4578:4586   */\n      dup3\n        /* \"#utility.yul\":4575:4591   */\n      gt\n        /* \"#utility.yul\":4572:4608   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4604:4605   */\n      0x00\n        /* \"#utility.yul\":4601:4602   */\n      dup1\n        /* \"#utility.yul\":4594:4606   */\n      revert\n        /* \"#utility.yul\":4572:4608   */\n    tag_335:\n        /* \"#utility.yul\":4640:4688   */\n      tag_336\n        /* \"#utility.yul\":4684:4687   */\n      dup6\n        /* \"#utility.yul\":4673:4681   */\n      dup4\n        /* \"#utility.yul\":4662:4671   */\n      dup7\n        /* \"#utility.yul\":4658:4682   */\n      add\n        /* \"#utility.yul\":4640:4688   */\n      tag_278\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4628:4633   */\n      dup5\n        /* \"#utility.yul\":4624:4638   */\n      add\n        /* \"#utility.yul\":4617:4689   */\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x60\n        /* \"#utility.yul\":4731:4740   */\n      dup5\n        /* \"#utility.yul\":4727:4745   */\n      add\n        /* \"#utility.yul\":4714:4746   */\n      calldataload\n        /* \"#utility.yul\":4698:4746   */\n      swap2\n      pop\n        /* \"#utility.yul\":4771:4773   */\n      dup1\n        /* \"#utility.yul\":4761:4769   */\n      dup3\n        /* \"#utility.yul\":4758:4774   */\n      gt\n        /* \"#utility.yul\":4755:4791   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":4787:4788   */\n      0x00\n        /* \"#utility.yul\":4784:4785   */\n      dup1\n        /* \"#utility.yul\":4777:4789   */\n      revert\n        /* \"#utility.yul\":4755:4791   */\n    tag_337:\n        /* \"#utility.yul\":4823:4871   */\n      tag_338\n        /* \"#utility.yul\":4867:4870   */\n      dup6\n        /* \"#utility.yul\":4856:4864   */\n      dup4\n        /* \"#utility.yul\":4845:4854   */\n      dup7\n        /* \"#utility.yul\":4841:4865   */\n      add\n        /* \"#utility.yul\":4823:4871   */\n      tag_278\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4818:4820   */\n      0x60\n        /* \"#utility.yul\":4811:4816   */\n      dup5\n        /* \"#utility.yul\":4807:4821   */\n      add\n        /* \"#utility.yul\":4800:4872   */\n      mstore\n        /* \"#utility.yul\":4925:4928   */\n      0x80\n        /* \"#utility.yul\":4914:4923   */\n      dup5\n        /* \"#utility.yul\":4910:4929   */\n      add\n        /* \"#utility.yul\":4897:4930   */\n      calldataload\n        /* \"#utility.yul\":4881:4930   */\n      swap2\n      pop\n        /* \"#utility.yul\":4955:4957   */\n      dup1\n        /* \"#utility.yul\":4945:4953   */\n      dup3\n        /* \"#utility.yul\":4942:4958   */\n      gt\n        /* \"#utility.yul\":4939:4975   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4971:4972   */\n      0x00\n        /* \"#utility.yul\":4968:4969   */\n      dup1\n        /* \"#utility.yul\":4961:4973   */\n      revert\n        /* \"#utility.yul\":4939:4975   */\n    tag_339:\n        /* \"#utility.yul\":5008:5056   */\n      tag_340\n        /* \"#utility.yul\":5052:5055   */\n      dup6\n        /* \"#utility.yul\":5041:5049   */\n      dup4\n        /* \"#utility.yul\":5030:5039   */\n      dup7\n        /* \"#utility.yul\":5026:5050   */\n      add\n        /* \"#utility.yul\":5008:5056   */\n      tag_278\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5002:5005   */\n      0x80\n        /* \"#utility.yul\":4995:5000   */\n      dup5\n        /* \"#utility.yul\":4991:5006   */\n      add\n        /* \"#utility.yul\":4984:5057   */\n      mstore\n        /* \"#utility.yul\":5110:5113   */\n      0xa0\n        /* \"#utility.yul\":5099:5108   */\n      dup5\n        /* \"#utility.yul\":5095:5114   */\n      add\n        /* \"#utility.yul\":5082:5115   */\n      calldataload\n        /* \"#utility.yul\":5066:5115   */\n      swap2\n      pop\n        /* \"#utility.yul\":5140:5142   */\n      dup1\n        /* \"#utility.yul\":5130:5138   */\n      dup3\n        /* \"#utility.yul\":5127:5143   */\n      gt\n        /* \"#utility.yul\":5124:5160   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":5156:5157   */\n      0x00\n        /* \"#utility.yul\":5153:5154   */\n      dup1\n        /* \"#utility.yul\":5146:5158   */\n      revert\n        /* \"#utility.yul\":5124:5160   */\n    tag_341:\n        /* \"#utility.yul\":5193:5241   */\n      tag_342\n        /* \"#utility.yul\":5237:5240   */\n      dup6\n        /* \"#utility.yul\":5226:5234   */\n      dup4\n        /* \"#utility.yul\":5215:5224   */\n      dup7\n        /* \"#utility.yul\":5211:5235   */\n      add\n        /* \"#utility.yul\":5193:5241   */\n      tag_278\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5187:5190   */\n      0xa0\n        /* \"#utility.yul\":5180:5185   */\n      dup5\n        /* \"#utility.yul\":5176:5191   */\n      add\n        /* \"#utility.yul\":5169:5242   */\n      mstore\n        /* \"#utility.yul\":5295:5298   */\n      0xc0\n        /* \"#utility.yul\":5284:5293   */\n      dup5\n        /* \"#utility.yul\":5280:5299   */\n      add\n        /* \"#utility.yul\":5267:5300   */\n      calldataload\n        /* \"#utility.yul\":5251:5300   */\n      swap2\n      pop\n        /* \"#utility.yul\":5325:5327   */\n      dup1\n        /* \"#utility.yul\":5315:5323   */\n      dup3\n        /* \"#utility.yul\":5312:5328   */\n      gt\n        /* \"#utility.yul\":5309:5345   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5341:5342   */\n      0x00\n        /* \"#utility.yul\":5338:5339   */\n      dup1\n        /* \"#utility.yul\":5331:5343   */\n      revert\n        /* \"#utility.yul\":5309:5345   */\n    tag_343:\n        /* \"#utility.yul\":5378:5426   */\n      tag_344\n        /* \"#utility.yul\":5422:5425   */\n      dup6\n        /* \"#utility.yul\":5411:5419   */\n      dup4\n        /* \"#utility.yul\":5400:5409   */\n      dup7\n        /* \"#utility.yul\":5396:5420   */\n      add\n        /* \"#utility.yul\":5378:5426   */\n      tag_278\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5372:5375   */\n      0xc0\n        /* \"#utility.yul\":5365:5370   */\n      dup5\n        /* \"#utility.yul\":5361:5376   */\n      add\n        /* \"#utility.yul\":5354:5427   */\n      mstore\n        /* \"#utility.yul\":5480:5483   */\n      0xe0\n        /* \"#utility.yul\":5469:5478   */\n      dup5\n        /* \"#utility.yul\":5465:5484   */\n      add\n        /* \"#utility.yul\":5452:5485   */\n      calldataload\n        /* \"#utility.yul\":5436:5485   */\n      swap2\n      pop\n        /* \"#utility.yul\":5510:5512   */\n      dup1\n        /* \"#utility.yul\":5500:5508   */\n      dup3\n        /* \"#utility.yul\":5497:5513   */\n      gt\n        /* \"#utility.yul\":5494:5530   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5523:5524   */\n      dup1\n        /* \"#utility.yul\":5516:5528   */\n      revert\n        /* \"#utility.yul\":5494:5530   */\n    tag_345:\n        /* \"#utility.yul\":5563:5611   */\n      tag_346\n        /* \"#utility.yul\":5607:5610   */\n      dup6\n        /* \"#utility.yul\":5596:5604   */\n      dup4\n        /* \"#utility.yul\":5585:5594   */\n      dup7\n        /* \"#utility.yul\":5581:5605   */\n      add\n        /* \"#utility.yul\":5563:5611   */\n      tag_278\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5557:5560   */\n      0xe0\n        /* \"#utility.yul\":5550:5555   */\n      dup5\n        /* \"#utility.yul\":5546:5561   */\n      add\n        /* \"#utility.yul\":5539:5612   */\n      mstore\n        /* \"#utility.yul\":5631:5634   */\n      0x0100\n        /* \"#utility.yul\":5621:5634   */\n      swap2\n      pop\n        /* \"#utility.yul\":5687:5689   */\n      dup2\n        /* \"#utility.yul\":5676:5685   */\n      dup5\n        /* \"#utility.yul\":5672:5690   */\n      add\n        /* \"#utility.yul\":5659:5691   */\n      calldataload\n        /* \"#utility.yul\":5716:5718   */\n      dup2\n        /* \"#utility.yul\":5706:5714   */\n      dup2\n        /* \"#utility.yul\":5703:5719   */\n      gt\n        /* \"#utility.yul\":5700:5736   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5732:5733   */\n      0x00\n        /* \"#utility.yul\":5729:5730   */\n      dup1\n        /* \"#utility.yul\":5722:5734   */\n      revert\n        /* \"#utility.yul\":5700:5736   */\n    tag_347:\n        /* \"#utility.yul\":5768:5816   */\n      tag_348\n        /* \"#utility.yul\":5812:5815   */\n      dup7\n        /* \"#utility.yul\":5801:5809   */\n      dup3\n        /* \"#utility.yul\":5790:5799   */\n      dup8\n        /* \"#utility.yul\":5786:5810   */\n      add\n        /* \"#utility.yul\":5768:5816   */\n      tag_278\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5763:5765   */\n      dup4\n        /* \"#utility.yul\":5756:5761   */\n      dup6\n        /* \"#utility.yul\":5752:5766   */\n      add\n        /* \"#utility.yul\":5745:5817   */\n      mstore\n      pop\n        /* \"#utility.yul\":5836:5839   */\n      0x0120\n        /* \"#utility.yul\":5826:5839   */\n      swap2\n      pop\n        /* \"#utility.yul\":5892:5894   */\n      dup2\n        /* \"#utility.yul\":5881:5890   */\n      dup5\n        /* \"#utility.yul\":5877:5895   */\n      add\n        /* \"#utility.yul\":5864:5896   */\n      calldataload\n        /* \"#utility.yul\":5921:5923   */\n      dup2\n        /* \"#utility.yul\":5911:5919   */\n      dup2\n        /* \"#utility.yul\":5908:5924   */\n      gt\n        /* \"#utility.yul\":5905:5941   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5937:5938   */\n      0x00\n        /* \"#utility.yul\":5934:5935   */\n      dup1\n        /* \"#utility.yul\":5927:5939   */\n      revert\n        /* \"#utility.yul\":5905:5941   */\n    tag_349:\n        /* \"#utility.yul\":5973:6021   */\n      tag_350\n        /* \"#utility.yul\":6017:6020   */\n      dup7\n        /* \"#utility.yul\":6006:6014   */\n      dup3\n        /* \"#utility.yul\":5995:6004   */\n      dup8\n        /* \"#utility.yul\":5991:6015   */\n      add\n        /* \"#utility.yul\":5973:6021   */\n      tag_278\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5968:5970   */\n      dup4\n        /* \"#utility.yul\":5961:5966   */\n      dup6\n        /* \"#utility.yul\":5957:5971   */\n      add\n        /* \"#utility.yul\":5950:6022   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3957:6028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6033:7732   */\n    tag_33:\n        /* \"#utility.yul\":6267:6273   */\n      0x00\n        /* \"#utility.yul\":6275:6281   */\n      dup1\n        /* \"#utility.yul\":6283:6289   */\n      0x00\n        /* \"#utility.yul\":6291:6297   */\n      dup1\n        /* \"#utility.yul\":6299:6305   */\n      0x00\n        /* \"#utility.yul\":6343:6352   */\n      dup6\n        /* \"#utility.yul\":6334:6341   */\n      dup8\n        /* \"#utility.yul\":6330:6353   */\n      sub\n        /* \"#utility.yul\":6373:6376   */\n      0x02e0\n        /* \"#utility.yul\":6369:6371   */\n      dup2\n        /* \"#utility.yul\":6365:6377   */\n      slt\n        /* \"#utility.yul\":6362:6394   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":6390:6391   */\n      0x00\n        /* \"#utility.yul\":6387:6388   */\n      dup1\n        /* \"#utility.yul\":6380:6392   */\n      revert\n        /* \"#utility.yul\":6362:6394   */\n    tag_352:\n        /* \"#utility.yul\":6413:6419   */\n      0x0160\n        /* \"#utility.yul\":6439:6441   */\n      dup1\n        /* \"#utility.yul\":6435:6437   */\n      dup3\n        /* \"#utility.yul\":6431:6442   */\n      slt\n        /* \"#utility.yul\":6428:6459   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6452:6453   */\n      dup1\n        /* \"#utility.yul\":6445:6457   */\n      revert\n        /* \"#utility.yul\":6428:6459   */\n    tag_353:\n        /* \"#utility.yul\":6481:6498   */\n      tag_354\n      tag_271\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6468:6498   */\n      swap2\n      pop\n        /* \"#utility.yul\":6521:6550   */\n      tag_355\n        /* \"#utility.yul\":6540:6549   */\n      dup9\n        /* \"#utility.yul\":6521:6550   */\n      tag_273\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6514:6519   */\n      dup3\n        /* \"#utility.yul\":6507:6551   */\n      mstore\n        /* \"#utility.yul\":6583:6621   */\n      tag_356\n        /* \"#utility.yul\":6617:6619   */\n      0x20\n        /* \"#utility.yul\":6606:6615   */\n      dup10\n        /* \"#utility.yul\":6602:6620   */\n      add\n        /* \"#utility.yul\":6583:6621   */\n      tag_273\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6578:6580   */\n      0x20\n        /* \"#utility.yul\":6571:6576   */\n      dup4\n        /* \"#utility.yul\":6567:6581   */\n      add\n        /* \"#utility.yul\":6560:6622   */\n      mstore\n        /* \"#utility.yul\":6682:6684   */\n      0x40\n        /* \"#utility.yul\":6671:6680   */\n      dup9\n        /* \"#utility.yul\":6667:6685   */\n      add\n        /* \"#utility.yul\":6654:6686   */\n      calldataload\n        /* \"#utility.yul\":6649:6651   */\n      0x40\n        /* \"#utility.yul\":6642:6647   */\n      dup4\n        /* \"#utility.yul\":6638:6652   */\n      add\n        /* \"#utility.yul\":6631:6687   */\n      mstore\n        /* \"#utility.yul\":6747:6749   */\n      0x60\n        /* \"#utility.yul\":6736:6745   */\n      dup9\n        /* \"#utility.yul\":6732:6750   */\n      add\n        /* \"#utility.yul\":6719:6751   */\n      calldataload\n        /* \"#utility.yul\":6714:6716   */\n      0x60\n        /* \"#utility.yul\":6707:6712   */\n      dup4\n        /* \"#utility.yul\":6703:6717   */\n      add\n        /* \"#utility.yul\":6696:6752   */\n      mstore\n        /* \"#utility.yul\":6813:6816   */\n      0x80\n        /* \"#utility.yul\":6802:6811   */\n      dup9\n        /* \"#utility.yul\":6798:6817   */\n      add\n        /* \"#utility.yul\":6785:6818   */\n      calldataload\n        /* \"#utility.yul\":6779:6782   */\n      0x80\n        /* \"#utility.yul\":6772:6777   */\n      dup4\n        /* \"#utility.yul\":6768:6783   */\n      add\n        /* \"#utility.yul\":6761:6819   */\n      mstore\n        /* \"#utility.yul\":6880:6883   */\n      0xa0\n        /* \"#utility.yul\":6869:6878   */\n      dup9\n        /* \"#utility.yul\":6865:6884   */\n      add\n        /* \"#utility.yul\":6852:6885   */\n      calldataload\n        /* \"#utility.yul\":6846:6849   */\n      0xa0\n        /* \"#utility.yul\":6839:6844   */\n      dup4\n        /* \"#utility.yul\":6835:6850   */\n      add\n        /* \"#utility.yul\":6828:6886   */\n      mstore\n        /* \"#utility.yul\":6947:6950   */\n      0xc0\n        /* \"#utility.yul\":6936:6945   */\n      dup9\n        /* \"#utility.yul\":6932:6951   */\n      add\n        /* \"#utility.yul\":6919:6952   */\n      calldataload\n        /* \"#utility.yul\":6913:6916   */\n      0xc0\n        /* \"#utility.yul\":6906:6911   */\n      dup4\n        /* \"#utility.yul\":6902:6917   */\n      add\n        /* \"#utility.yul\":6895:6953   */\n      mstore\n        /* \"#utility.yul\":7014:7017   */\n      0xe0\n        /* \"#utility.yul\":7003:7012   */\n      dup9\n        /* \"#utility.yul\":6999:7018   */\n      add\n        /* \"#utility.yul\":6986:7019   */\n      calldataload\n        /* \"#utility.yul\":6980:6983   */\n      0xe0\n        /* \"#utility.yul\":6973:6978   */\n      dup4\n        /* \"#utility.yul\":6969:6984   */\n      add\n        /* \"#utility.yul\":6962:7020   */\n      mstore\n        /* \"#utility.yul\":7039:7042   */\n      0x0100\n        /* \"#utility.yul\":7102:7104   */\n      dup1\n        /* \"#utility.yul\":7091:7100   */\n      dup10\n        /* \"#utility.yul\":7087:7105   */\n      add\n        /* \"#utility.yul\":7074:7106   */\n      calldataload\n        /* \"#utility.yul\":7069:7071   */\n      dup2\n        /* \"#utility.yul\":7062:7067   */\n      dup5\n        /* \"#utility.yul\":7058:7072   */\n      add\n        /* \"#utility.yul\":7051:7107   */\n      mstore\n      pop\n        /* \"#utility.yul\":7126:7129   */\n      0x0120\n        /* \"#utility.yul\":7189:7191   */\n      dup1\n        /* \"#utility.yul\":7178:7187   */\n      dup10\n        /* \"#utility.yul\":7174:7192   */\n      add\n        /* \"#utility.yul\":7161:7193   */\n      calldataload\n        /* \"#utility.yul\":7156:7158   */\n      dup2\n        /* \"#utility.yul\":7149:7154   */\n      dup5\n        /* \"#utility.yul\":7145:7159   */\n      add\n        /* \"#utility.yul\":7138:7194   */\n      mstore\n      pop\n        /* \"#utility.yul\":7213:7216   */\n      0x0140\n        /* \"#utility.yul\":7276:7278   */\n      dup1\n        /* \"#utility.yul\":7265:7274   */\n      dup10\n        /* \"#utility.yul\":7261:7279   */\n      add\n        /* \"#utility.yul\":7248:7280   */\n      calldataload\n        /* \"#utility.yul\":7243:7245   */\n      dup2\n        /* \"#utility.yul\":7236:7241   */\n      dup5\n        /* \"#utility.yul\":7232:7246   */\n      add\n        /* \"#utility.yul\":7225:7281   */\n      mstore\n      pop\n        /* \"#utility.yul\":7300:7305   */\n      dup2\n        /* \"#utility.yul\":7290:7305   */\n      swap7\n      pop\n        /* \"#utility.yul\":7324:7380   */\n      tag_357\n        /* \"#utility.yul\":7372:7379   */\n      dup10\n        /* \"#utility.yul\":7367:7369   */\n      dup3\n        /* \"#utility.yul\":7356:7365   */\n      dup11\n        /* \"#utility.yul\":7352:7370   */\n      add\n        /* \"#utility.yul\":7324:7380   */\n      tag_274\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7314:7380   */\n      swap6\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7399:7454   */\n      tag_358\n        /* \"#utility.yul\":7446:7453   */\n      dup8\n        /* \"#utility.yul\":7440:7443   */\n      0x01c0\n        /* \"#utility.yul\":7429:7438   */\n      dup9\n        /* \"#utility.yul\":7425:7444   */\n      add\n        /* \"#utility.yul\":7399:7454   */\n      tag_276\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7389:7454   */\n      swap3\n      pop\n        /* \"#utility.yul\":7473:7530   */\n      tag_359\n        /* \"#utility.yul\":7522:7529   */\n      dup8\n        /* \"#utility.yul\":7516:7519   */\n      0x0280\n        /* \"#utility.yul\":7505:7514   */\n      dup9\n        /* \"#utility.yul\":7501:7520   */\n      add\n        /* \"#utility.yul\":7473:7530   */\n      tag_277\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7463:7530   */\n      swap2\n      pop\n        /* \"#utility.yul\":7581:7584   */\n      0x02c0\n        /* \"#utility.yul\":7570:7579   */\n      dup7\n        /* \"#utility.yul\":7566:7585   */\n      add\n        /* \"#utility.yul\":7553:7586   */\n      calldataload\n        /* \"#utility.yul\":7609:7627   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7601:7607   */\n      dup2\n        /* \"#utility.yul\":7598:7628   */\n      gt\n        /* \"#utility.yul\":7595:7645   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":7641:7642   */\n      0x00\n        /* \"#utility.yul\":7638:7639   */\n      dup1\n        /* \"#utility.yul\":7631:7643   */\n      revert\n        /* \"#utility.yul\":7595:7645   */\n    tag_360:\n        /* \"#utility.yul\":7664:7726   */\n      tag_361\n        /* \"#utility.yul\":7718:7725   */\n      dup9\n        /* \"#utility.yul\":7709:7715   */\n      dup3\n        /* \"#utility.yul\":7698:7707   */\n      dup10\n        /* \"#utility.yul\":7694:7716   */\n      add\n        /* \"#utility.yul\":7664:7726   */\n      tag_279\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7654:7726   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6033:7732   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8146:8393   */\n    tag_53:\n        /* \"#utility.yul\":8205:8211   */\n      0x00\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"#utility.yul\":8246:8255   */\n      dup3\n        /* \"#utility.yul\":8237:8244   */\n      dup5\n        /* \"#utility.yul\":8233:8256   */\n      sub\n        /* \"#utility.yul\":8229:8261   */\n      slt\n        /* \"#utility.yul\":8226:8278   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8274:8275   */\n      0x00\n        /* \"#utility.yul\":8271:8272   */\n      dup1\n        /* \"#utility.yul\":8264:8276   */\n      revert\n        /* \"#utility.yul\":8226:8278   */\n    tag_365:\n        /* \"#utility.yul\":8313:8322   */\n      dup2\n        /* \"#utility.yul\":8300:8323   */\n      calldataload\n        /* \"#utility.yul\":8332:8363   */\n      tag_366\n        /* \"#utility.yul\":8357:8362   */\n      dup2\n        /* \"#utility.yul\":8332:8363   */\n      tag_272\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8382:8387   */\n      swap4\n        /* \"#utility.yul\":8146:8393   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8715:9392   */\n    tag_69:\n        /* \"#utility.yul\":8905:8907   */\n      0x20\n        /* \"#utility.yul\":8957:8978   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9027:9040   */\n      dup3\n      mload\n        /* \"#utility.yul\":8930:8948   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":9049:9071   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8876:8880   */\n      0x00\n      swap2\n        /* \"#utility.yul\":8905:8907   */\n      swap1\n        /* \"#utility.yul\":9128:9143   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":9102:9104   */\n      0x40\n        /* \"#utility.yul\":9087:9105   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8876:8880   */\n      dup5\n        /* \"#utility.yul\":9171:9366   */\n    tag_370:\n        /* \"#utility.yul\":9185:9191   */\n      dup2\n        /* \"#utility.yul\":9182:9183   */\n      dup2\n        /* \"#utility.yul\":9179:9192   */\n      lt\n        /* \"#utility.yul\":9171:9366   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":9250:9263   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9246:9285   */\n      and\n        /* \"#utility.yul\":9234:9286   */\n      dup4\n      mstore\n        /* \"#utility.yul\":9341:9356   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":9306:9318   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":9282:9283   */\n      0x01\n        /* \"#utility.yul\":9200:9209   */\n      add\n        /* \"#utility.yul\":9171:9366   */\n      jump(tag_370)\n    tag_372:\n      pop\n        /* \"#utility.yul\":9383:9386   */\n      swap1\n      swap7\n        /* \"#utility.yul\":8715:9392   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9657:10578   */\n    tag_97:\n        /* \"#utility.yul\":9753:9759   */\n      0x00\n        /* \"#utility.yul\":9806:9809   */\n      0xe0\n        /* \"#utility.yul\":9794:9803   */\n      dup3\n        /* \"#utility.yul\":9785:9792   */\n      dup5\n        /* \"#utility.yul\":9781:9804   */\n      sub\n        /* \"#utility.yul\":9777:9810   */\n      slt\n        /* \"#utility.yul\":9774:9827   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":9823:9824   */\n      0x00\n        /* \"#utility.yul\":9820:9821   */\n      dup1\n        /* \"#utility.yul\":9813:9825   */\n      revert\n        /* \"#utility.yul\":9774:9827   */\n    tag_377:\n        /* \"#utility.yul\":9856:9858   */\n      0x40\n        /* \"#utility.yul\":9850:9859   */\n      mload\n        /* \"#utility.yul\":9898:9901   */\n      0xe0\n        /* \"#utility.yul\":9890:9896   */\n      dup2\n        /* \"#utility.yul\":9886:9902   */\n      add\n        /* \"#utility.yul\":9968:9974   */\n      dup2\n        /* \"#utility.yul\":9956:9966   */\n      dup2\n        /* \"#utility.yul\":9953:9975   */\n      lt\n        /* \"#utility.yul\":9932:9950   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9920:9930   */\n      dup3\n        /* \"#utility.yul\":9917:9951   */\n      gt\n        /* \"#utility.yul\":9914:9976   */\n      or\n        /* \"#utility.yul\":9911:9999   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":9979:9997   */\n      tag_379\n      tag_269\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10015:10017   */\n      0x40\n        /* \"#utility.yul\":10008:10030   */\n      mstore\n        /* \"#utility.yul\":10052:10075   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":10084:10115   */\n      tag_380\n        /* \"#utility.yul\":10052:10075   */\n      dup2\n        /* \"#utility.yul\":10084:10115   */\n      tag_272\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10139:10144   */\n      dup1\n        /* \"#utility.yul\":10131:10137   */\n      dup3\n        /* \"#utility.yul\":10124:10145   */\n      mstore\n      pop\n        /* \"#utility.yul\":10206:10208   */\n      0x20\n        /* \"#utility.yul\":10195:10204   */\n      dup4\n        /* \"#utility.yul\":10191:10209   */\n      add\n        /* \"#utility.yul\":10178:10210   */\n      calldataload\n        /* \"#utility.yul\":10173:10175   */\n      0x20\n        /* \"#utility.yul\":10165:10171   */\n      dup3\n        /* \"#utility.yul\":10161:10176   */\n      add\n        /* \"#utility.yul\":10154:10211   */\n      mstore\n        /* \"#utility.yul\":10272:10274   */\n      0x40\n        /* \"#utility.yul\":10261:10270   */\n      dup4\n        /* \"#utility.yul\":10257:10275   */\n      add\n        /* \"#utility.yul\":10244:10276   */\n      calldataload\n        /* \"#utility.yul\":10239:10241   */\n      0x40\n        /* \"#utility.yul\":10231:10237   */\n      dup3\n        /* \"#utility.yul\":10227:10242   */\n      add\n        /* \"#utility.yul\":10220:10277   */\n      mstore\n        /* \"#utility.yul\":10338:10340   */\n      0x60\n        /* \"#utility.yul\":10327:10336   */\n      dup4\n        /* \"#utility.yul\":10323:10341   */\n      add\n        /* \"#utility.yul\":10310:10342   */\n      calldataload\n        /* \"#utility.yul\":10305:10307   */\n      0x60\n        /* \"#utility.yul\":10297:10303   */\n      dup3\n        /* \"#utility.yul\":10293:10308   */\n      add\n        /* \"#utility.yul\":10286:10343   */\n      mstore\n        /* \"#utility.yul\":10405:10408   */\n      0x80\n        /* \"#utility.yul\":10394:10403   */\n      dup4\n        /* \"#utility.yul\":10390:10409   */\n      add\n        /* \"#utility.yul\":10377:10410   */\n      calldataload\n        /* \"#utility.yul\":10371:10374   */\n      0x80\n        /* \"#utility.yul\":10363:10369   */\n      dup3\n        /* \"#utility.yul\":10359:10375   */\n      add\n        /* \"#utility.yul\":10352:10411   */\n      mstore\n        /* \"#utility.yul\":10473:10476   */\n      0xa0\n        /* \"#utility.yul\":10462:10471   */\n      dup4\n        /* \"#utility.yul\":10458:10477   */\n      add\n        /* \"#utility.yul\":10445:10478   */\n      calldataload\n        /* \"#utility.yul\":10439:10442   */\n      0xa0\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10427:10443   */\n      add\n        /* \"#utility.yul\":10420:10479   */\n      mstore\n        /* \"#utility.yul\":10541:10544   */\n      0xc0\n        /* \"#utility.yul\":10530:10539   */\n      dup4\n        /* \"#utility.yul\":10526:10545   */\n      add\n        /* \"#utility.yul\":10513:10546   */\n      calldataload\n        /* \"#utility.yul\":10507:10510   */\n      0xc0\n        /* \"#utility.yul\":10499:10505   */\n      dup3\n        /* \"#utility.yul\":10495:10511   */\n      add\n        /* \"#utility.yul\":10488:10547   */\n      mstore\n        /* \"#utility.yul\":10566:10572   */\n      dup1\n        /* \"#utility.yul\":10556:10572   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9657:10578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11836:12109   */\n    tag_140:\n        /* \"#utility.yul\":11904:11910   */\n      0x00\n        /* \"#utility.yul\":11957:11959   */\n      0x20\n        /* \"#utility.yul\":11945:11954   */\n      dup3\n        /* \"#utility.yul\":11936:11943   */\n      dup5\n        /* \"#utility.yul\":11932:11955   */\n      sub\n        /* \"#utility.yul\":11928:11960   */\n      slt\n        /* \"#utility.yul\":11925:11977   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":11973:11974   */\n      0x00\n        /* \"#utility.yul\":11970:11971   */\n      dup1\n        /* \"#utility.yul\":11963:11975   */\n      revert\n        /* \"#utility.yul\":11925:11977   */\n    tag_386:\n        /* \"#utility.yul\":12005:12014   */\n      dup2\n        /* \"#utility.yul\":11999:12015   */\n      mload\n        /* \"#utility.yul\":12055:12059   */\n      0xff\n        /* \"#utility.yul\":12048:12053   */\n      dup2\n        /* \"#utility.yul\":12044:12060   */\n      and\n        /* \"#utility.yul\":12037:12042   */\n      dup2\n        /* \"#utility.yul\":12034:12061   */\n      eq\n        /* \"#utility.yul\":12024:12079   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":12075:12076   */\n      0x00\n        /* \"#utility.yul\":12072:12073   */\n      dup1\n        /* \"#utility.yul\":12065:12077   */\n      revert\n        /* \"#utility.yul\":13316:13739   */\n    tag_285:\n        /* \"#utility.yul\":13358:13361   */\n      0x00\n        /* \"#utility.yul\":13396:13401   */\n      dup2\n        /* \"#utility.yul\":13390:13402   */\n      mload\n        /* \"#utility.yul\":13423:13429   */\n      dup1\n        /* \"#utility.yul\":13418:13421   */\n      dup5\n        /* \"#utility.yul\":13411:13430   */\n      mstore\n        /* \"#utility.yul\":13448:13449   */\n      0x00\n        /* \"#utility.yul\":13458:13620   */\n    tag_393:\n        /* \"#utility.yul\":13472:13478   */\n      dup2\n        /* \"#utility.yul\":13469:13470   */\n      dup2\n        /* \"#utility.yul\":13466:13479   */\n      lt\n        /* \"#utility.yul\":13458:13620   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":13534:13538   */\n      0x20\n        /* \"#utility.yul\":13590:13603   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":13586:13608   */\n      dup2\n      add\n        /* \"#utility.yul\":13580:13609   */\n      mload\n        /* \"#utility.yul\":13562:13573   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":13558:13578   */\n      dup3\n      add\n        /* \"#utility.yul\":13551:13610   */\n      mstore\n        /* \"#utility.yul\":13487:13499   */\n      add\n        /* \"#utility.yul\":13458:13620   */\n      jump(tag_393)\n    tag_395:\n        /* \"#utility.yul\":13462:13465   */\n      pop\n        /* \"#utility.yul\":13665:13666   */\n      0x00\n        /* \"#utility.yul\":13658:13662   */\n      0x20\n        /* \"#utility.yul\":13649:13655   */\n      dup3\n        /* \"#utility.yul\":13644:13647   */\n      dup7\n        /* \"#utility.yul\":13640:13656   */\n      add\n        /* \"#utility.yul\":13636:13663   */\n      add\n        /* \"#utility.yul\":13629:13667   */\n      mstore\n        /* \"#utility.yul\":13728:13732   */\n      0x20\n        /* \"#utility.yul\":13721:13723   */\n      0x1f\n        /* \"#utility.yul\":13717:13724   */\n      not\n        /* \"#utility.yul\":13712:13714   */\n      0x1f\n        /* \"#utility.yul\":13704:13710   */\n      dup4\n        /* \"#utility.yul\":13700:13715   */\n      add\n        /* \"#utility.yul\":13696:13725   */\n      and\n        /* \"#utility.yul\":13691:13694   */\n      dup6\n        /* \"#utility.yul\":13687:13726   */\n      add\n        /* \"#utility.yul\":13683:13733   */\n      add\n        /* \"#utility.yul\":13676:13733   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":13316:13739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13744:15503   */\n    tag_286:\n        /* \"#utility.yul\":13798:13801   */\n      0x00\n        /* \"#utility.yul\":13826:13832   */\n      0x0140\n        /* \"#utility.yul\":13867:13872   */\n      dup3\n        /* \"#utility.yul\":13861:13873   */\n      mload\n        /* \"#utility.yul\":13894:13896   */\n      dup2\n        /* \"#utility.yul\":13889:13892   */\n      dup6\n        /* \"#utility.yul\":13882:13897   */\n      mstore\n        /* \"#utility.yul\":13918:13963   */\n      tag_397\n        /* \"#utility.yul\":13959:13961   */\n      dup3\n        /* \"#utility.yul\":13954:13957   */\n      dup7\n        /* \"#utility.yul\":13950:13962   */\n      add\n        /* \"#utility.yul\":13936:13948   */\n      dup3\n        /* \"#utility.yul\":13918:13963   */\n      tag_285\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13906:13963   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14011:14015   */\n      0x20\n        /* \"#utility.yul\":14004:14009   */\n      dup4\n        /* \"#utility.yul\":14000:14016   */\n      add\n        /* \"#utility.yul\":13994:14017   */\n      mload\n        /* \"#utility.yul\":14059:14062   */\n      dup5\n        /* \"#utility.yul\":14053:14057   */\n      dup3\n        /* \"#utility.yul\":14049:14063   */\n      sub\n        /* \"#utility.yul\":14042:14046   */\n      0x20\n        /* \"#utility.yul\":14037:14040   */\n      dup7\n        /* \"#utility.yul\":14033:14047   */\n      add\n        /* \"#utility.yul\":14026:14064   */\n      mstore\n        /* \"#utility.yul\":14087:14126   */\n      tag_398\n        /* \"#utility.yul\":14121:14125   */\n      dup3\n        /* \"#utility.yul\":14105:14119   */\n      dup3\n        /* \"#utility.yul\":14087:14126   */\n      tag_285\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14073:14126   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14174:14178   */\n      0x40\n        /* \"#utility.yul\":14167:14172   */\n      dup4\n        /* \"#utility.yul\":14163:14179   */\n      add\n        /* \"#utility.yul\":14157:14180   */\n      mload\n        /* \"#utility.yul\":14224:14227   */\n      dup5\n        /* \"#utility.yul\":14216:14222   */\n      dup3\n        /* \"#utility.yul\":14212:14228   */\n      sub\n        /* \"#utility.yul\":14205:14209   */\n      0x40\n        /* \"#utility.yul\":14200:14203   */\n      dup7\n        /* \"#utility.yul\":14196:14210   */\n      add\n        /* \"#utility.yul\":14189:14229   */\n      mstore\n        /* \"#utility.yul\":14252:14293   */\n      tag_399\n        /* \"#utility.yul\":14286:14292   */\n      dup3\n        /* \"#utility.yul\":14270:14284   */\n      dup3\n        /* \"#utility.yul\":14252:14293   */\n      tag_285\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14238:14293   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14341:14345   */\n      0x60\n        /* \"#utility.yul\":14334:14339   */\n      dup4\n        /* \"#utility.yul\":14330:14346   */\n      add\n        /* \"#utility.yul\":14324:14347   */\n      mload\n        /* \"#utility.yul\":14391:14394   */\n      dup5\n        /* \"#utility.yul\":14383:14389   */\n      dup3\n        /* \"#utility.yul\":14379:14395   */\n      sub\n        /* \"#utility.yul\":14372:14376   */\n      0x60\n        /* \"#utility.yul\":14367:14370   */\n      dup7\n        /* \"#utility.yul\":14363:14377   */\n      add\n        /* \"#utility.yul\":14356:14396   */\n      mstore\n        /* \"#utility.yul\":14419:14460   */\n      tag_400\n        /* \"#utility.yul\":14453:14459   */\n      dup3\n        /* \"#utility.yul\":14437:14451   */\n      dup3\n        /* \"#utility.yul\":14419:14460   */\n      tag_285\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14405:14460   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14508:14512   */\n      0x80\n        /* \"#utility.yul\":14501:14506   */\n      dup4\n        /* \"#utility.yul\":14497:14513   */\n      add\n        /* \"#utility.yul\":14491:14514   */\n      mload\n        /* \"#utility.yul\":14558:14561   */\n      dup5\n        /* \"#utility.yul\":14550:14556   */\n      dup3\n        /* \"#utility.yul\":14546:14562   */\n      sub\n        /* \"#utility.yul\":14539:14543   */\n      0x80\n        /* \"#utility.yul\":14534:14537   */\n      dup7\n        /* \"#utility.yul\":14530:14544   */\n      add\n        /* \"#utility.yul\":14523:14563   */\n      mstore\n        /* \"#utility.yul\":14586:14627   */\n      tag_401\n        /* \"#utility.yul\":14620:14626   */\n      dup3\n        /* \"#utility.yul\":14604:14618   */\n      dup3\n        /* \"#utility.yul\":14586:14627   */\n      tag_285\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14572:14627   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14675:14679   */\n      0xa0\n        /* \"#utility.yul\":14668:14673   */\n      dup4\n        /* \"#utility.yul\":14664:14680   */\n      add\n        /* \"#utility.yul\":14658:14681   */\n      mload\n        /* \"#utility.yul\":14725:14728   */\n      dup5\n        /* \"#utility.yul\":14717:14723   */\n      dup3\n        /* \"#utility.yul\":14713:14729   */\n      sub\n        /* \"#utility.yul\":14706:14710   */\n      0xa0\n        /* \"#utility.yul\":14701:14704   */\n      dup7\n        /* \"#utility.yul\":14697:14711   */\n      add\n        /* \"#utility.yul\":14690:14730   */\n      mstore\n        /* \"#utility.yul\":14753:14794   */\n      tag_402\n        /* \"#utility.yul\":14787:14793   */\n      dup3\n        /* \"#utility.yul\":14771:14785   */\n      dup3\n        /* \"#utility.yul\":14753:14794   */\n      tag_285\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":14739:14794   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14842:14846   */\n      0xc0\n        /* \"#utility.yul\":14835:14840   */\n      dup4\n        /* \"#utility.yul\":14831:14847   */\n      add\n        /* \"#utility.yul\":14825:14848   */\n      mload\n        /* \"#utility.yul\":14892:14895   */\n      dup5\n        /* \"#utility.yul\":14884:14890   */\n      dup3\n        /* \"#utility.yul\":14880:14896   */\n      sub\n        /* \"#utility.yul\":14873:14877   */\n      0xc0\n        /* \"#utility.yul\":14868:14871   */\n      dup7\n        /* \"#utility.yul\":14864:14878   */\n      add\n        /* \"#utility.yul\":14857:14897   */\n      mstore\n        /* \"#utility.yul\":14920:14961   */\n      tag_403\n        /* \"#utility.yul\":14954:14960   */\n      dup3\n        /* \"#utility.yul\":14938:14952   */\n      dup3\n        /* \"#utility.yul\":14920:14961   */\n      tag_285\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14906:14961   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":15009:15013   */\n      0xe0\n        /* \"#utility.yul\":15002:15007   */\n      dup4\n        /* \"#utility.yul\":14998:15014   */\n      add\n        /* \"#utility.yul\":14992:15015   */\n      mload\n        /* \"#utility.yul\":15059:15062   */\n      dup5\n        /* \"#utility.yul\":15051:15057   */\n      dup3\n        /* \"#utility.yul\":15047:15063   */\n      sub\n        /* \"#utility.yul\":15040:15044   */\n      0xe0\n        /* \"#utility.yul\":15035:15038   */\n      dup7\n        /* \"#utility.yul\":15031:15045   */\n      add\n        /* \"#utility.yul\":15024:15064   */\n      mstore\n        /* \"#utility.yul\":15087:15128   */\n      tag_404\n        /* \"#utility.yul\":15121:15127   */\n      dup3\n        /* \"#utility.yul\":15105:15119   */\n      dup3\n        /* \"#utility.yul\":15087:15128   */\n      tag_285\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15073:15128   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":15147:15153   */\n      0x0100\n        /* \"#utility.yul\":15201:15203   */\n      dup1\n        /* \"#utility.yul\":15194:15199   */\n      dup5\n        /* \"#utility.yul\":15190:15204   */\n      add\n        /* \"#utility.yul\":15184:15205   */\n      mload\n        /* \"#utility.yul\":15247:15250   */\n      dup6\n        /* \"#utility.yul\":15239:15245   */\n      dup4\n        /* \"#utility.yul\":15235:15251   */\n      sub\n        /* \"#utility.yul\":15230:15232   */\n      dup3\n        /* \"#utility.yul\":15225:15228   */\n      dup8\n        /* \"#utility.yul\":15221:15233   */\n      add\n        /* \"#utility.yul\":15214:15252   */\n      mstore\n        /* \"#utility.yul\":15275:15316   */\n      tag_405\n        /* \"#utility.yul\":15309:15315   */\n      dup4\n        /* \"#utility.yul\":15293:15307   */\n      dup3\n        /* \"#utility.yul\":15275:15316   */\n      tag_285\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15261:15316   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15335:15341   */\n      0x0120\n        /* \"#utility.yul\":15389:15391   */\n      dup1\n        /* \"#utility.yul\":15382:15387   */\n      dup5\n        /* \"#utility.yul\":15378:15392   */\n      add\n        /* \"#utility.yul\":15372:15393   */\n      mload\n        /* \"#utility.yul\":15435:15438   */\n      dup6\n        /* \"#utility.yul\":15427:15433   */\n      dup4\n        /* \"#utility.yul\":15423:15439   */\n      sub\n        /* \"#utility.yul\":15418:15420   */\n      dup3\n        /* \"#utility.yul\":15413:15416   */\n      dup8\n        /* \"#utility.yul\":15409:15421   */\n      add\n        /* \"#utility.yul\":15402:15440   */\n      mstore\n        /* \"#utility.yul\":15456:15497   */\n      tag_406\n        /* \"#utility.yul\":15490:15496   */\n      dup4\n        /* \"#utility.yul\":15474:15488   */\n      dup3\n        /* \"#utility.yul\":15456:15497   */\n      tag_285\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15449:15497   */\n      swap7\n        /* \"#utility.yul\":13744:15503   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15508:17440   */\n    tag_145:\n        /* \"#utility.yul\":16198:16211   */\n      dup9\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8464:8495   */\n      and\n        /* \"#utility.yul\":8452:8496   */\n      dup2\n      mstore\n        /* \"#utility.yul\":16138:16142   */\n      0x00\n        /* \"#utility.yul\":16167:16170   */\n      0x03a0\n        /* \"#utility.yul\":16270:16274   */\n      0x20\n        /* \"#utility.yul\":16262:16268   */\n      dup12\n        /* \"#utility.yul\":16258:16275   */\n      add\n        /* \"#utility.yul\":16252:16276   */\n      mload\n        /* \"#utility.yul\":16285:16339   */\n      tag_409\n        /* \"#utility.yul\":16333:16337   */\n      0x20\n        /* \"#utility.yul\":16322:16331   */\n      dup6\n        /* \"#utility.yul\":16318:16338   */\n      add\n        /* \"#utility.yul\":16304:16316   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8464:8495   */\n      and\n        /* \"#utility.yul\":8452:8496   */\n      swap1\n      mstore\n        /* \"#utility.yul\":8398:8502   */\n      jump\n        /* \"#utility.yul\":16285:16339   */\n    tag_409:\n      pop\n        /* \"#utility.yul\":16395:16399   */\n      0x40\n        /* \"#utility.yul\":16383:16400   */\n      dup12\n      dup2\n      add\n        /* \"#utility.yul\":16377:16401   */\n      mload\n        /* \"#utility.yul\":16355:16375   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":16348:16402   */\n      mstore\n        /* \"#utility.yul\":16458:16462   */\n      0x60\n        /* \"#utility.yul\":16446:16463   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16440:16464   */\n      mload\n        /* \"#utility.yul\":16418:16438   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16411:16465   */\n      mstore\n        /* \"#utility.yul\":16521:16525   */\n      0x80\n        /* \"#utility.yul\":16509:16526   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16503:16527   */\n      mload\n        /* \"#utility.yul\":16481:16501   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16474:16528   */\n      mstore\n        /* \"#utility.yul\":16584:16588   */\n      0xa0\n        /* \"#utility.yul\":16572:16589   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16566:16590   */\n      mload\n        /* \"#utility.yul\":16544:16564   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16537:16591   */\n      mstore\n        /* \"#utility.yul\":16647:16651   */\n      0xc0\n        /* \"#utility.yul\":16635:16652   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16629:16653   */\n      mload\n        /* \"#utility.yul\":16607:16627   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16600:16654   */\n      mstore\n        /* \"#utility.yul\":16710:16714   */\n      0xe0\n        /* \"#utility.yul\":16698:16715   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16692:16716   */\n      mload\n        /* \"#utility.yul\":16670:16690   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16663:16717   */\n      mstore\n        /* \"#utility.yul\":16736:16742   */\n      0x0100\n        /* \"#utility.yul\":16784:16799   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16778:16800   */\n      mload\n        /* \"#utility.yul\":16758:16776   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16751:16801   */\n      mstore\n        /* \"#utility.yul\":16820:16826   */\n      0x0120\n        /* \"#utility.yul\":16868:16883   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16862:16884   */\n      mload\n        /* \"#utility.yul\":16842:16860   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16835:16885   */\n      mstore\n        /* \"#utility.yul\":16904:16910   */\n      0x0140\n        /* \"#utility.yul\":16952:16967   */\n      dup1\n      dup14\n      add\n        /* \"#utility.yul\":16946:16968   */\n      mload\n        /* \"#utility.yul\":16926:16944   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":16919:16969   */\n      mstore\n        /* \"#utility.yul\":12189:12201   */\n      dup11\n      mload\n        /* \"#utility.yul\":17029:17032   */\n      0x0160\n        /* \"#utility.yul\":17014:17033   */\n      dup6\n      add\n        /* \"#utility.yul\":12177:12202   */\n      mstore\n        /* \"#utility.yul\":12251:12255   */\n      0x20\n        /* \"#utility.yul\":12240:12256   */\n      dup12\n      add\n        /* \"#utility.yul\":12234:12257   */\n      mload\n        /* \"#utility.yul\":12218:12232   */\n      0x0180\n      dup6\n      add\n        /* \"#utility.yul\":12211:12258   */\n      mstore\n        /* \"#utility.yul\":12296:12312   */\n      dup11\n      add\n        /* \"#utility.yul\":12290:12313   */\n      mload\n        /* \"#utility.yul\":12274:12288   */\n      0x01a0\n      dup5\n      add\n        /* \"#utility.yul\":12267:12314   */\n      mstore\n        /* \"#utility.yul\":12412:12424   */\n      dup9\n      mload\n        /* \"#utility.yul\":12405:12425   */\n      iszero\n        /* \"#utility.yul\":12398:12426   */\n      iszero\n        /* \"#utility.yul\":17092:17095   */\n      0x01c0\n        /* \"#utility.yul\":17077:17096   */\n      dup5\n      add\n        /* \"#utility.yul\":12386:12427   */\n      mstore\n        /* \"#utility.yul\":12473:12477   */\n      0x20\n        /* \"#utility.yul\":12462:12478   */\n      dup10\n      add\n        /* \"#utility.yul\":12456:12479   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12549:12570   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":12533:12547   */\n      0x01e0\n      dup6\n      add\n        /* \"#utility.yul\":12526:12571   */\n      mstore\n        /* \"#utility.yul\":12624:12628   */\n      0x40\n        /* \"#utility.yul\":12613:12629   */\n      dup11\n      add\n        /* \"#utility.yul\":12607:12630   */\n      mload\n        /* \"#utility.yul\":12603:12635   */\n      and\n        /* \"#utility.yul\":12587:12601   */\n      0x0200\n      dup5\n      add\n        /* \"#utility.yul\":12580:12636   */\n      mstore\n        /* \"#utility.yul\":12685:12689   */\n      0x60\n        /* \"#utility.yul\":12674:12690   */\n      dup10\n      add\n        /* \"#utility.yul\":12668:12691   */\n      mload\n        /* \"#utility.yul\":12652:12666   */\n      0x0220\n      dup5\n      add\n        /* \"#utility.yul\":12645:12692   */\n      mstore\n        /* \"#utility.yul\":12741:12745   */\n      0x80\n        /* \"#utility.yul\":12730:12746   */\n      dup10\n      add\n        /* \"#utility.yul\":12724:12747   */\n      mload\n        /* \"#utility.yul\":12708:12722   */\n      0x0240\n      dup5\n      add\n        /* \"#utility.yul\":12701:12748   */\n      mstore\n        /* \"#utility.yul\":12506:12509   */\n      0xa0\n        /* \"#utility.yul\":12786:12802   */\n      dup10\n      add\n        /* \"#utility.yul\":12780:12803   */\n      mload\n        /* \"#utility.yul\":12764:12778   */\n      0x0260\n      dup5\n      add\n        /* \"#utility.yul\":12757:12804   */\n      mstore\n        /* \"#utility.yul\":12890:12902   */\n      dup8\n      mload\n        /* \"#utility.yul\":17157:17160   */\n      0x0280\n        /* \"#utility.yul\":17142:17161   */\n      dup5\n      add\n        /* \"#utility.yul\":12878:12903   */\n      mstore\n        /* \"#utility.yul\":12952:12956   */\n      0x20\n        /* \"#utility.yul\":12941:12957   */\n      dup9\n      add\n        /* \"#utility.yul\":12935:12958   */\n      mload\n        /* \"#utility.yul\":12919:12933   */\n      0x02a0\n      dup5\n      add\n        /* \"#utility.yul\":12912:12959   */\n      mstore\n        /* \"#utility.yul\":13092:13104   */\n      dup7\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13088:13109   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":17227:17230   */\n      0x02c0\n        /* \"#utility.yul\":17212:17231   */\n      dup6\n      add\n        /* \"#utility.yul\":13076:13110   */\n      mstore\n        /* \"#utility.yul\":13163:13167   */\n      0x20\n        /* \"#utility.yul\":13152:13168   */\n      dup9\n      add\n        /* \"#utility.yul\":13146:13169   */\n      mload\n        /* \"#utility.yul\":13142:13174   */\n      dup2\n      and\n        /* \"#utility.yul\":13126:13140   */\n      0x02e0\n      dup6\n      add\n        /* \"#utility.yul\":13119:13175   */\n      mstore\n        /* \"#utility.yul\":13228:13232   */\n      0x40\n        /* \"#utility.yul\":13217:13233   */\n      dup9\n      add\n        /* \"#utility.yul\":13211:13234   */\n      mload\n        /* \"#utility.yul\":13207:13239   */\n      dup2\n      and\n        /* \"#utility.yul\":13191:13205   */\n      0x0300\n      dup6\n      add\n        /* \"#utility.yul\":13184:13240   */\n      mstore\n        /* \"#utility.yul\":13293:13297   */\n      0x60\n        /* \"#utility.yul\":13282:13298   */\n      dup9\n      add\n        /* \"#utility.yul\":13276:13299   */\n      mload\n        /* \"#utility.yul\":13272:13304   */\n      and\n        /* \"#utility.yul\":13256:13270   */\n      0x0320\n      dup5\n      add\n        /* \"#utility.yul\":13249:13305   */\n      mstore\n        /* \"#utility.yul\":17269:17271   */\n      dup1\n        /* \"#utility.yul\":17263:17266   */\n      0x0340\n        /* \"#utility.yul\":17252:17261   */\n      dup5\n        /* \"#utility.yul\":17248:17267   */\n      add\n        /* \"#utility.yul\":17241:17272   */\n      mstore\n        /* \"#utility.yul\":17289:17346   */\n      tag_414\n        /* \"#utility.yul\":17342:17344   */\n      dup2\n        /* \"#utility.yul\":17331:17340   */\n      dup5\n        /* \"#utility.yul\":17327:17345   */\n      add\n        /* \"#utility.yul\":17319:17325   */\n      dup8\n        /* \"#utility.yul\":17289:17346   */\n      tag_286\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":17377:17380   */\n      0x0360\n        /* \"#utility.yul\":17362:17381   */\n      dup5\n      add\n        /* \"#utility.yul\":17355:17390   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":17421:17424   */\n      0x0380\n        /* \"#utility.yul\":17406:17425   */\n      add\n        /* \"#utility.yul\":17399:17434   */\n      mstore\n        /* \"#utility.yul\":17281:17346   */\n      swap7\n        /* \"#utility.yul\":15508:17440   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17445:17629   */\n    tag_158:\n        /* \"#utility.yul\":17515:17521   */\n      0x00\n        /* \"#utility.yul\":17568:17570   */\n      0x20\n        /* \"#utility.yul\":17556:17565   */\n      dup3\n        /* \"#utility.yul\":17547:17554   */\n      dup5\n        /* \"#utility.yul\":17543:17566   */\n      sub\n        /* \"#utility.yul\":17539:17571   */\n      slt\n        /* \"#utility.yul\":17536:17588   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":17584:17585   */\n      0x00\n        /* \"#utility.yul\":17581:17582   */\n      dup1\n        /* \"#utility.yul\":17574:17586   */\n      revert\n        /* \"#utility.yul\":17536:17588   */\n    tag_416:\n      pop\n        /* \"#utility.yul\":17607:17623   */\n      mload\n      swap2\n        /* \"#utility.yul\":17445:17629   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19137:19382   */\n    tag_177:\n        /* \"#utility.yul\":19204:19210   */\n      0x00\n        /* \"#utility.yul\":19257:19259   */\n      0x20\n        /* \"#utility.yul\":19245:19254   */\n      dup3\n        /* \"#utility.yul\":19236:19243   */\n      dup5\n        /* \"#utility.yul\":19232:19255   */\n      sub\n        /* \"#utility.yul\":19228:19260   */\n      slt\n        /* \"#utility.yul\":19225:19277   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":19273:19274   */\n      0x00\n        /* \"#utility.yul\":19270:19271   */\n      dup1\n        /* \"#utility.yul\":19263:19275   */\n      revert\n        /* \"#utility.yul\":19225:19277   */\n    tag_422:\n        /* \"#utility.yul\":19305:19314   */\n      dup2\n        /* \"#utility.yul\":19299:19315   */\n      mload\n        /* \"#utility.yul\":19324:19352   */\n      tag_366\n        /* \"#utility.yul\":19346:19351   */\n      dup2\n        /* \"#utility.yul\":19324:19352   */\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":19748:19875   */\n    tag_287:\n        /* \"#utility.yul\":19809:19819   */\n      0x4e487b71\n        /* \"#utility.yul\":19804:19807   */\n      0xe0\n        /* \"#utility.yul\":19800:19820   */\n      shl\n        /* \"#utility.yul\":19797:19798   */\n      0x00\n        /* \"#utility.yul\":19790:19821   */\n      mstore\n        /* \"#utility.yul\":19840:19844   */\n      0x11\n        /* \"#utility.yul\":19837:19838   */\n      0x04\n        /* \"#utility.yul\":19830:19845   */\n      mstore\n        /* \"#utility.yul\":19864:19868   */\n      0x24\n        /* \"#utility.yul\":19861:19862   */\n      0x00\n        /* \"#utility.yul\":19854:19869   */\n      revert\n        /* \"#utility.yul\":19880:20048   */\n    tag_187:\n        /* \"#utility.yul\":19953:19962   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":19984:19993   */\n      dup2\n      iszero\n        /* \"#utility.yul\":20001:20016   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":19995:20017   */\n      dup5\n      eq\n        /* \"#utility.yul\":19981:20018   */\n      or\n        /* \"#utility.yul\":19971:20042   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":20022:20040   */\n      tag_258\n      tag_287\n      jump\t// in\n        /* \"#utility.yul\":20053:20475   */\n    tag_288:\n        /* \"#utility.yul\":20142:20143   */\n      0x01\n        /* \"#utility.yul\":20185:20190   */\n      dup2\n        /* \"#utility.yul\":20142:20143   */\n      dup2\n        /* \"#utility.yul\":20199:20469   */\n    tag_430:\n        /* \"#utility.yul\":20220:20227   */\n      dup1\n        /* \"#utility.yul\":20210:20218   */\n      dup6\n        /* \"#utility.yul\":20207:20228   */\n      gt\n        /* \"#utility.yul\":20199:20469   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":20279:20283   */\n      dup2\n        /* \"#utility.yul\":20275:20276   */\n      0x00\n        /* \"#utility.yul\":20271:20277   */\n      not\n        /* \"#utility.yul\":20267:20284   */\n      div\n        /* \"#utility.yul\":20261:20265   */\n      dup3\n        /* \"#utility.yul\":20258:20285   */\n      gt\n        /* \"#utility.yul\":20255:20308   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":20288:20306   */\n      tag_434\n      tag_287\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":20338:20345   */\n      dup1\n        /* \"#utility.yul\":20328:20336   */\n      dup6\n        /* \"#utility.yul\":20324:20346   */\n      and\n        /* \"#utility.yul\":20321:20376   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":20358:20374   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":20321:20376   */\n    tag_435:\n        /* \"#utility.yul\":20437:20459   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":20397:20412   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":20199:20469   */\n      jump(tag_430)\n    tag_432:\n        /* \"#utility.yul\":20203:20206   */\n      pop\n        /* \"#utility.yul\":20053:20475   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20480:21286   */\n    tag_289:\n        /* \"#utility.yul\":20529:20534   */\n      0x00\n        /* \"#utility.yul\":20559:20567   */\n      dup3\n        /* \"#utility.yul\":20549:20629   */\n      tag_437\n      jumpi\n      pop\n        /* \"#utility.yul\":20600:20601   */\n      0x01\n        /* \"#utility.yul\":20614:20619   */\n      jump(tag_258)\n        /* \"#utility.yul\":20549:20629   */\n    tag_437:\n        /* \"#utility.yul\":20648:20652   */\n      dup2\n        /* \"#utility.yul\":20638:20714   */\n      tag_438\n      jumpi\n      pop\n        /* \"#utility.yul\":20685:20686   */\n      0x00\n        /* \"#utility.yul\":20699:20704   */\n      jump(tag_258)\n        /* \"#utility.yul\":20638:20714   */\n    tag_438:\n        /* \"#utility.yul\":20730:20734   */\n      dup2\n        /* \"#utility.yul\":20748:20749   */\n      0x01\n        /* \"#utility.yul\":20743:20802   */\n      dup2\n      eq\n      tag_440\n      jumpi\n        /* \"#utility.yul\":20816:20817   */\n      0x02\n        /* \"#utility.yul\":20811:20941   */\n      dup2\n      eq\n      tag_441\n      jumpi\n        /* \"#utility.yul\":20723:20941   */\n      jump(tag_439)\n        /* \"#utility.yul\":20743:20802   */\n    tag_440:\n        /* \"#utility.yul\":20773:20774   */\n      0x01\n        /* \"#utility.yul\":20764:20774   */\n      swap2\n      pop\n        /* \"#utility.yul\":20787:20792   */\n      pop\n      jump(tag_258)\n        /* \"#utility.yul\":20811:20941   */\n    tag_441:\n        /* \"#utility.yul\":20848:20851   */\n      0xff\n        /* \"#utility.yul\":20838:20846   */\n      dup5\n        /* \"#utility.yul\":20835:20852   */\n      gt\n        /* \"#utility.yul\":20832:20875   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":20855:20873   */\n      tag_443\n      tag_287\n      jump\t// in\n    tag_443:\n      pop\n      pop\n        /* \"#utility.yul\":20911:20912   */\n      0x01\n        /* \"#utility.yul\":20897:20913   */\n      dup3\n      shl\n        /* \"#utility.yul\":20926:20931   */\n      jump(tag_258)\n        /* \"#utility.yul\":20723:20941   */\n    tag_439:\n      pop\n        /* \"#utility.yul\":21025:21027   */\n      0x20\n        /* \"#utility.yul\":21015:21023   */\n      dup4\n        /* \"#utility.yul\":21012:21028   */\n      lt\n        /* \"#utility.yul\":21006:21009   */\n      0x0133\n        /* \"#utility.yul\":21000:21004   */\n      dup4\n        /* \"#utility.yul\":20997:21010   */\n      lt\n        /* \"#utility.yul\":20993:21029   */\n      and\n        /* \"#utility.yul\":20987:20989   */\n      0x4e\n        /* \"#utility.yul\":20977:20985   */\n      dup5\n        /* \"#utility.yul\":20974:20990   */\n      lt\n        /* \"#utility.yul\":20969:20971   */\n      0x0b\n        /* \"#utility.yul\":20963:20967   */\n      dup5\n        /* \"#utility.yul\":20960:20972   */\n      lt\n        /* \"#utility.yul\":20956:20991   */\n      and\n        /* \"#utility.yul\":20953:21030   */\n      or\n        /* \"#utility.yul\":20950:21109   */\n      iszero\n      tag_444\n      jumpi\n      pop\n        /* \"#utility.yul\":21062:21081   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":21094:21099   */\n      jump(tag_258)\n        /* \"#utility.yul\":20950:21109   */\n    tag_444:\n        /* \"#utility.yul\":21141:21175   */\n      tag_445\n        /* \"#utility.yul\":21166:21174   */\n      dup4\n        /* \"#utility.yul\":21160:21164   */\n      dup4\n        /* \"#utility.yul\":21141:21175   */\n      tag_288\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":21211:21217   */\n      dup1\n        /* \"#utility.yul\":21207:21208   */\n      0x00\n        /* \"#utility.yul\":21203:21209   */\n      not\n        /* \"#utility.yul\":21199:21218   */\n      div\n        /* \"#utility.yul\":21190:21197   */\n      dup3\n        /* \"#utility.yul\":21187:21219   */\n      gt\n        /* \"#utility.yul\":21184:21242   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":21222:21240   */\n      tag_447\n      tag_287\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":21260:21280   */\n      mul\n      swap4\n        /* \"#utility.yul\":20480:21286   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21291:21422   */\n    tag_218:\n        /* \"#utility.yul\":21351:21356   */\n      0x00\n        /* \"#utility.yul\":21380:21416   */\n      tag_259\n        /* \"#utility.yul\":21407:21415   */\n      dup4\n        /* \"#utility.yul\":21401:21405   */\n      dup4\n        /* \"#utility.yul\":21380:21416   */\n      tag_289\n      jump\t// in\n        /* \"#utility.yul\":22546:22763   */\n    tag_262:\n        /* \"#utility.yul\":22586:22587   */\n      0x00\n        /* \"#utility.yul\":22612:22613   */\n      dup3\n        /* \"#utility.yul\":22602:22734   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":22656:22666   */\n      0x4e487b71\n        /* \"#utility.yul\":22651:22654   */\n      0xe0\n        /* \"#utility.yul\":22647:22667   */\n      shl\n        /* \"#utility.yul\":22644:22645   */\n      0x00\n        /* \"#utility.yul\":22637:22668   */\n      mstore\n        /* \"#utility.yul\":22691:22695   */\n      0x12\n        /* \"#utility.yul\":22688:22689   */\n      0x04\n        /* \"#utility.yul\":22681:22696   */\n      mstore\n        /* \"#utility.yul\":22719:22723   */\n      0x24\n        /* \"#utility.yul\":22716:22717   */\n      0x00\n        /* \"#utility.yul\":22709:22724   */\n      revert\n        /* \"#utility.yul\":22602:22734   */\n    tag_454:\n      pop\n        /* \"#utility.yul\":22748:22757   */\n      div\n      swap1\n        /* \"#utility.yul\":22546:22763   */\n      jump\t// out\n        /* \"#utility.yul\":22768:22896   */\n    tag_265:\n        /* \"#utility.yul\":22835:22844   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":22856:22867   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":22853:22890   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":22870:22888   */\n      tag_258\n      tag_287\n      jump\t// in\n        /* \"#utility.yul\":22901:23026   */\n    tag_268:\n        /* \"#utility.yul\":22966:22975   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":22987:22997   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":22984:23020   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":23000:23018   */\n      tag_258\n      tag_287\n      jump\t// in\n\n    auxdata: 0xa264697066735822122077c58bec4371edbb1ba311619ca191bd1c075abd487966f34b7f599462cdfe1064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 492,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_addresst_address_payablet_address_fromMemory": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_stringliteral_147beb0e1eb50330f094fb5a2cf2dea65f905b53a95e86b923bda11e09d02ee9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a2f1e506d49101456fbd9676a9d516df204d5534e23ef6bb7b68e682ea6cb86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f9a2507c7b147ab3d45e436d0f2c46e29f97c8ef7e74b4746c9b5be7a1e306b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1886:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:10"
															},
															"nodeType": "YulIf",
															"src": "69:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:10",
														"type": ""
													}
												],
												"src": "14:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "290:522:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "337:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "346:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "339:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "339:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "339:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "311:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "320:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "307:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "332:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "303:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:33:10"
															},
															"nodeType": "YulIf",
															"src": "300:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "362:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "381:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "366:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "425:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "400:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "440:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "450:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "440:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "464:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "500:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "485:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "479:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:25:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "468:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "538:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "513:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "513:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "555:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "565:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "581:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "617:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "602:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "596:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:25:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "585:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "655:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "630:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "630:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "630:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "672:17:10",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "682:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "672:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "698:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "723:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "734:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "719:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "713:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:25:10"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "702:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "772:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "747:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "789:17:10",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "799:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_payablet_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "263:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "271:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "279:6:10",
														"type": ""
													}
												],
												"src": "150:662:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "991:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1001:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1042:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1053:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1031:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a207669727475616c4c6f636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1097:30:10",
																		"type": "",
																		"value": "LauchpadFactory: virtualLock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1070:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1137:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1149:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1145:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1137:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_147beb0e1eb50330f094fb5a2cf2dea65f905b53a95e86b923bda11e09d02ee9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "982:4:10",
														"type": ""
													}
												],
												"src": "817:352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1348:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1399:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1410:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1388:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1438:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a2073757065724163636f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1454:31:10",
																		"type": "",
																		"value": "LauchpadFactory: superAccount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1427:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1495:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1495:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f9a2507c7b147ab3d45e436d0f2c46e29f97c8ef7e74b4746c9b5be7a1e306b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1325:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1339:4:10",
														"type": ""
													}
												],
												"src": "1174:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1706:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1723:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1734:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1716:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1716:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1757:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1768:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1753:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1753:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1746:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1796:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1792:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a2066756e6441646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1812:30:10",
																		"type": "",
																		"value": "LauchpadFactory: fundAddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1785:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1852:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1864:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1860:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1852:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a2f1e506d49101456fbd9676a9d516df204d5534e23ef6bb7b68e682ea6cb86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1683:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1697:4:10",
														"type": ""
													}
												],
												"src": "1532:352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_payablet_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_stringliteral_147beb0e1eb50330f094fb5a2cf2dea65f905b53a95e86b923bda11e09d02ee9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"LauchpadFactory: virtualLock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f9a2507c7b147ab3d45e436d0f2c46e29f97c8ef7e74b4746c9b5be7a1e306b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LauchpadFactory: superAccount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a2f1e506d49101456fbd9676a9d516df204d5534e23ef6bb7b68e682ea6cb86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"LauchpadFactory: fundAddress\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e86002553480156200001757600080fd5b5060405162001ce738038062001ce78339810160408190526200003a9162000255565b6200004533620001ec565b6001600160a01b038316158015906200006757506001600160a01b0383163014155b620000b95760405162461bcd60e51b815260206004820152601c60248201527f4c61756368706164466163746f72793a207669727475616c4c6f636b0000000060448201526064015b60405180910390fd5b6001600160a01b03841615801590620000db57506001600160a01b0384163014155b620001295760405162461bcd60e51b815260206004820152601d60248201527f4c61756368706164466163746f72793a2073757065724163636f756e740000006044820152606401620000b0565b6001600160a01b038216158015906200014b57506001600160a01b0382163014155b620001995760405162461bcd60e51b815260206004820152601c60248201527f4c61756368706164466163746f72793a2066756e6441646472657373000000006044820152606401620000b0565b600380546001600160a01b03199081166001600160a01b039687161790915560058054821693861693909317909255600480548316938516939093179092556006805490911691909216179055620002bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200025257600080fd5b50565b600080600080608085870312156200026c57600080fd5b845162000279816200023c565b60208601519094506200028c816200023c565b60408601519093506200029f816200023c565b6060860151909250620002b2816200023c565b939692955090935050565b611a1a80620002cd6000396000f3fe60806040526004361061012a5760003560e01c806385dc3004116100ab578063a96df7431161006f578063a96df7431461031b578063b6b7913e14610350578063c06ca1dd14610370578063d9eb594714610385578063e82bef291461039b578063f2fde38b146103bb57600080fd5b806385dc300414610287578063892f78fa146102a75780638a9b66cc146102c75780638da5cb5b146102dd5780639352dace146102fb57600080fd5b80635a416a36116100f25780635a416a36146101e55780635c60da1b14610205578063640f82f3146102255780636de944dc14610245578063715018a61461027257600080fd5b806323fa495a1461012f57806349a1f14b1461015157806351ae878f1461016457806353aca0781461018457806358e5bc88146101c1575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610f3e565b6103db565b005b61014f61015f366004611352565b6103e8565b34801561017057600080fd5b5061014f61017f366004610f3e565b6109f7565b34801561019057600080fd5b506101a461019f366004610f3e565b610a10565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101cd57600080fd5b506101d761271081565b6040519081526020016101b8565b3480156101f157600080fd5b5061014f610200366004611469565b610a3a565b34801561021157600080fd5b506006546101a4906001600160a01b031681565b34801561023157600080fd5b506004546101a4906001600160a01b031681565b34801561025157600080fd5b50610265610260366004611469565b610a64565b6040516101b8919061148d565b34801561027e57600080fd5b5061014f610ada565b34801561029357600080fd5b5061014f6102a2366004611469565b610aee565b3480156102b357600080fd5b5061014f6102c2366004611469565b610b18565b3480156102d357600080fd5b506101d760025481565b3480156102e957600080fd5b506000546001600160a01b03166101a4565b34801561030757600080fd5b5061014f610316366004611469565b610b42565b34801561032757600080fd5b5061033b6103363660046114da565b610b6c565b604080519283526020830191909152016101b8565b34801561035c57600080fd5b506003546101a4906001600160a01b031681565b34801561037c57600080fd5b50610265610ce6565b34801561039157600080fd5b506101d760015481565b3480156103a757600080fd5b506005546101a4906001600160a01b031681565b3480156103c757600080fd5b5061014f6103d6366004611469565b610d48565b6103e3610dc1565b600155565b6003546001600160a01b03161580159061040c57506005546001600160a01b031615155b6104745760405162461bcd60e51b815260206004820152602e60248201527f4c61756368706164466163746f72793a2043616e206e6f74206372656174652060448201526d6c61756e6368706164206e6f772160901b60648201526084015b60405180910390fd5b6001543410156104c65760405162461bcd60e51b815260206004820181905260248201527f4c61756368706164466163746f72793a204e6f7420656e6f7567682066656521604482015260640161046b565b600060405180608001604052806104da3390565b6001600160a01b03908116825260035481166020808401919091526005548216604084015260045482166060909301929092528851918901519293509091601291161561058d5787602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190611567565b60ff1690505b6040805160e0810182526020808b01516001600160a01b031682526080808c0151828401526060808d015194840194909452908801518383015287518183015288015160a08201529087015160c08201526000806105ea83610b6c565b6006549193509150600090610607906001600160a01b0316610e1b565b9050806001600160a01b03166357801e6f8d8d8d8d8c8e896002546040518963ffffffff1660e01b81526004016106459897969594939291906116dd565b600060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b5050505060003411156106bb576005546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156106b9573d6000803e3d6000fd5b505b821561094c578b51836001600160a01b0382166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190611849565b10156107985760405162461bcd60e51b815260206004820152602560248201527f4c61756368706164466163746f72793a20496e73756666696369656e742042616044820152646c616e636560d81b606482015260840161046b565b836001600160a01b03821663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa1580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108179190611849565b10156108755760405162461bcd60e51b815260206004820152602760248201527f4c61756368706164466163746f72793a20496e73756666696369656e7420416c6044820152666c6f77616e636560c81b606482015260840161046b565b6001600160a01b0387166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604481018790526064016020604051808303816000875af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190611862565b61094a5760405162461bcd60e51b815260206004820181905260248201527f4c61756368706164466163746f72793a207472616e73666572206661696c6564604482015260640161046b565b505b6007805460018181019092557fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0384166001600160a01b0319918216811790925533600090815260086020908152604080832080549687018155835290822090940180549092168317909155915190917fda2d0d8f4060e08dd20f6fb6ad959f9920958220cc60733db44068db43a0260191a2505050505050505050505050565b6109ff610dc1565b610a0a816064611895565b60025550565b60078181548110610a2057600080fd5b6000918252602090912001546001600160a01b0316905081565b610a42610dc1565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260086020908152604091829020805483518184028101840190945280845260609392830182828015610ace57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ab0575b50505050509050919050565b610ae2610dc1565b610aec6000610eb5565b565b610af6610dc1565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b610b20610dc1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610b4a610dc1565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805160009081906012906001600160a01b031615610bf05783600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea9190611567565b60ff1690505b6000610c19610c0083600a611990565b60408701516020880151610c1391610f05565b90610f1a565b90506000610c3a612710610c13886060015185610f0590919063ffffffff16565b90506000610c5f612710610c1389608001518a60400151610f0590919063ffffffff16565b90506000610c7a828960400151610f2690919063ffffffff16565b90506000610c9b612710610c138b60a0015185610f0590919063ffffffff16565b90506000610cbd610cad88600a611990565b60c08c0151610c13908590610f05565b90506000610cd582610ccf8989610f32565b90610f32565b9b919a509098505050505050505050565b60606007805480602002602001604051908101604052809291908181526020018280548015610d3e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d20575b5050505050905090565b610d50610dc1565b6001600160a01b038116610db55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046b565b610dbe81610eb5565b50565b6000546001600160a01b03163314610aec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046b565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610eb05760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161046b565b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610f118284611895565b90505b92915050565b6000610f11828461199c565b6000610f1182846119be565b6000610f1182846119d1565b600060208284031215610f5057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610f9157610f91610f57565b60405290565b604051610160810167ffffffffffffffff81118282101715610f9157610f91610f57565b6001600160a01b0381168114610dbe57600080fd5b8035610eb081610fbb565b600060608284031215610fed57600080fd5b6040516060810181811067ffffffffffffffff8211171561101057611010610f57565b80604052508091508235815260208301356020820152604083013560408201525092915050565b8015158114610dbe57600080fd5b600060c0828403121561105757600080fd5b60405160c0810181811067ffffffffffffffff8211171561107a5761107a610f57565b604052905080823561108b81611037565b8152602083013561109b81610fbb565b602082015260408301356110ae81610fbb565b80604083015250606083013560608201526080830135608082015260a083013560a08201525092915050565b6000604082840312156110ec57600080fd5b6040516040810181811067ffffffffffffffff8211171561110f5761110f610f57565b604052823581526020928301359281019290925250919050565b600082601f83011261113a57600080fd5b813567ffffffffffffffff8082111561115557611155610f57565b604051601f8301601f19908116603f0116810190828211818310171561117d5761117d610f57565b8160405283815286602085880101111561119657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600061014082840312156111c957600080fd5b6111d1610f6d565b9050813567ffffffffffffffff808211156111eb57600080fd5b6111f785838601611129565b8352602084013591508082111561120d57600080fd5b61121985838601611129565b6020840152604084013591508082111561123257600080fd5b61123e85838601611129565b6040840152606084013591508082111561125757600080fd5b61126385838601611129565b6060840152608084013591508082111561127c57600080fd5b61128885838601611129565b608084015260a08401359150808211156112a157600080fd5b6112ad85838601611129565b60a084015260c08401359150808211156112c657600080fd5b6112d285838601611129565b60c084015260e08401359150808211156112eb57600080fd5b6112f785838601611129565b60e08401526101009150818401358181111561131257600080fd5b61131e86828701611129565b83850152506101209150818401358181111561133957600080fd5b61134586828701611129565b8385015250505092915050565b60008060008060008587036102e081121561136c57600080fd5b6101608082121561137c57600080fd5b611384610f97565b915061138f88610fd0565b825261139d60208901610fd0565b602083015260408801356040830152606088013560608301526080880135608083015260a088013560a083015260c088013560c083015260e088013560e083015261010080890135818401525061012080890135818401525061014080890135818401525081965061141189828a01610fdb565b95505050611423876101c08801611045565b92506114338761028088016110da565b91506102c086013567ffffffffffffffff81111561145057600080fd5b61145c888289016111b6565b9150509295509295909350565b60006020828403121561147b57600080fd5b813561148681610fbb565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156114ce5783516001600160a01b0316835292840192918401916001016114a9565b50909695505050505050565b600060e082840312156114ec57600080fd5b60405160e0810181811067ffffffffffffffff8211171561150f5761150f610f57565b604052823561151d81610fbb565b808252506020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b60006020828403121561157957600080fd5b815160ff8116811461148657600080fd5b6000815180845260005b818110156115b057602081850181015186830182015201611594565b506000602082860101526020601f19601f83011685010191505092915050565b600061014082518185526115e68286018261158a565b91505060208301518482036020860152611600828261158a565b9150506040830151848203604086015261161a828261158a565b91505060608301518482036060860152611634828261158a565b9150506080830151848203608086015261164e828261158a565b91505060a083015184820360a0860152611668828261158a565b91505060c083015184820360c0860152611682828261158a565b91505060e083015184820360e086015261169c828261158a565b91505061010080840151858303828701526116b7838261158a565b9250505061012080840151858303828701526116d3838261158a565b9695505050505050565b88516001600160a01b0316815260006103a060208b015161170960208501826001600160a01b03169052565b5060408b810151848201526060808d0151908501526080808d01519085015260a0808d01519085015260c0808d01519085015260e0808d015190850152610100808d015190850152610120808d015190850152610140808d0151908501528a5161016085015260208b01516101808501528a01516101a0840152885115156101c084015260208901516001600160a01b039081166101e085015260408a0151166102008401526060890151610220840152608089015161024084015260a0890151610260840152875161028084015260208801516102a084015286516001600160a01b039081166102c0850152602088015181166102e0850152604088015181166103008501526060880151166103208401528061034084015261182f818401876115d0565b610360840195909552505061038001529695505050505050565b60006020828403121561185b57600080fd5b5051919050565b60006020828403121561187457600080fd5b815161148681611037565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610f1457610f1461187f565b600181815b808511156118e75781600019048211156118cd576118cd61187f565b808516156118da57918102915b93841c93908002906118b1565b509250929050565b6000826118fe57506001610f14565b8161190b57506000610f14565b8160018114611921576002811461192b57611947565b6001915050610f14565b60ff84111561193c5761193c61187f565b50506001821b610f14565b5060208310610133831016604e8410600b841016171561196a575081810a610f14565b61197483836118ac565b80600019048211156119885761198861187f565b029392505050565b6000610f1183836118ef565b6000826119b957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610f1457610f1461187f565b80820180821115610f1457610f1461187f56fea264697066735822122077c58bec4371edbb1ba311619ca191bd1c075abd487966f34b7f599462cdfe1064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CE7 CODESIZE SUB DUP1 PUSH3 0x1CE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x255 JUMP JUMPDEST PUSH3 0x45 CALLER PUSH3 0x1EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST PUSH3 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A207669727475616C4C6F636B00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0xDB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST PUSH3 0x129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A2073757065724163636F756E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x14B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO JUMPDEST PUSH3 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A2066756E644164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB0 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP4 DUP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP4 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x279 DUP2 PUSH3 0x23C JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x28C DUP2 PUSH3 0x23C JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x29F DUP2 PUSH3 0x23C JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x2B2 DUP2 PUSH3 0x23C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH2 0x1A1A DUP1 PUSH3 0x2CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85DC3004 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA96DF743 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA96DF743 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xB6B7913E EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC06CA1DD EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xD9EB5947 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xE82BEF29 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85DC3004 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x892F78FA EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8A9B66CC EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x9352DACE EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5A416A36 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x5A416A36 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x640F82F3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x6DE944DC EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23FA495A EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x49A1F14B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x51AE878F EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x53ACA078 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x58E5BC88 EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0xADA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0xCE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x40C JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A2043616E206E6F742063726561746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6C61756E6368706164206E6F7721 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A204E6F7420656E6F7567682066656521 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x4DA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x3 SLOAD DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 SLOAD DUP3 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x4 SLOAD DUP3 AND PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP9 MLOAD SWAP2 DUP10 ADD MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x12 SWAP2 AND ISZERO PUSH2 0x58D JUMPI DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x80 DUP1 DUP13 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP14 ADD MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP9 ADD MLOAD DUP4 DUP4 ADD MSTORE DUP8 MLOAD DUP2 DUP4 ADD MSTORE DUP9 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 DUP8 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH2 0x5EA DUP4 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x607 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x57801E6F DUP14 DUP14 DUP14 DUP14 DUP13 DUP15 DUP10 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x94C JUMPI DUP12 MLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST LT ISZERO PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A20496E73756666696369656E74204261 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C616E6365 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46B JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xDD62ED3E CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST LT ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A20496E73756666696369656E7420416C PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6C6F77616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A207472616E73666572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST POP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE SWAP1 DUP3 KECCAK256 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP3 AND DUP4 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH32 0xDA2D0D8F4060E08DD20F6FB6AD959F9920958220CC60733DB44068DB43A02601 SWAP2 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FF PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH1 0x64 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xA42 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE2 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xAEC PUSH1 0x0 PUSH2 0xEB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB20 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBF0 JUMPI DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xC19 PUSH2 0xC00 DUP4 PUSH1 0xA PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0xC13 SWAP2 PUSH2 0xF05 JUMP JUMPDEST SWAP1 PUSH2 0xF1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC3A PUSH2 0x2710 PUSH2 0xC13 DUP9 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0xF05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC5F PUSH2 0x2710 PUSH2 0xC13 DUP10 PUSH1 0x80 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0xF05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC7A DUP3 DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xF26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9B PUSH2 0x2710 PUSH2 0xC13 DUP12 PUSH1 0xA0 ADD MLOAD DUP6 PUSH2 0xF05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCBD PUSH2 0xCAD DUP9 PUSH1 0xA PUSH2 0x1990 JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MLOAD PUSH2 0xC13 SWAP1 DUP6 SWAP1 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCD5 DUP3 PUSH2 0xCCF DUP10 DUP10 PUSH2 0xF32 JUMP JUMPDEST SWAP1 PUSH2 0xF32 JUMP JUMPDEST SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD20 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD50 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46B JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH2 0xEB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xEB0 DUP2 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1010 JUMPI PUSH2 0x1010 PUSH2 0xF57 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x107A JUMPI PUSH2 0x107A PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 CALLDATALOAD PUSH2 0x108B DUP2 PUSH2 0x1037 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x109B DUP2 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH2 0x10AE DUP2 PUSH2 0xFBB JUMP JUMPDEST DUP1 PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x110F JUMPI PUSH2 0x110F PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x113A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x117D JUMPI PUSH2 0x117D PUSH2 0xF57 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D1 PUSH2 0xF6D JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F7 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1219 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123E DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1263 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1288 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12AD DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D2 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F7 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 POP DUP2 DUP5 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131E DUP7 DUP3 DUP8 ADD PUSH2 0x1129 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP PUSH2 0x120 SWAP2 POP DUP2 DUP5 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1129 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x2E0 DUP2 SLT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 DUP1 DUP3 SLT ISZERO PUSH2 0x137C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1384 PUSH2 0xF97 JUMP JUMPDEST SWAP2 POP PUSH2 0x138F DUP9 PUSH2 0xFD0 JUMP JUMPDEST DUP3 MSTORE PUSH2 0x139D PUSH1 0x20 DUP10 ADD PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP9 ADD CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP10 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP10 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP10 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE POP DUP2 SWAP7 POP PUSH2 0x1411 DUP10 DUP3 DUP11 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP6 POP POP POP PUSH2 0x1423 DUP8 PUSH2 0x1C0 DUP9 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP3 POP PUSH2 0x1433 DUP8 PUSH2 0x280 DUP9 ADD PUSH2 0x10DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145C DUP9 DUP3 DUP10 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0xFBB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14CE JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14A9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x150F JUMPI PUSH2 0x150F PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH2 0x151D DUP2 PUSH2 0xFBB JUMP JUMPDEST DUP1 DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1594 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x15E6 DUP3 DUP7 ADD DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1600 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x161A DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1634 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x164E DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1668 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1682 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x169C DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP6 DUP4 SUB DUP3 DUP8 ADD MSTORE PUSH2 0x16B7 DUP4 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP6 DUP4 SUB DUP3 DUP8 ADD MSTORE PUSH2 0x16D3 DUP4 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x3A0 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x1709 PUSH1 0x20 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP12 DUP2 ADD MLOAD DUP5 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xC0 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x140 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE DUP11 MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE DUP11 ADD MLOAD PUSH2 0x1A0 DUP5 ADD MSTORE DUP9 MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x1E0 DUP6 ADD MSTORE PUSH1 0x40 DUP11 ADD MLOAD AND PUSH2 0x200 DUP5 ADD MSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x220 DUP5 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x240 DUP5 ADD MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH2 0x260 DUP5 ADD MSTORE DUP8 MLOAD PUSH2 0x280 DUP5 ADD MSTORE PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x2A0 DUP5 ADD MSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x2C0 DUP6 ADD MSTORE PUSH1 0x20 DUP9 ADD MLOAD DUP2 AND PUSH2 0x2E0 DUP6 ADD MSTORE PUSH1 0x40 DUP9 ADD MLOAD DUP2 AND PUSH2 0x300 DUP6 ADD MSTORE PUSH1 0x60 DUP9 ADD MLOAD AND PUSH2 0x320 DUP5 ADD MSTORE DUP1 PUSH2 0x340 DUP5 ADD MSTORE PUSH2 0x182F DUP2 DUP5 ADD DUP8 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x360 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH2 0x380 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1486 DUP2 PUSH2 0x1037 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x18E7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CD PUSH2 0x187F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x18DA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x18B1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18FE JUMPI POP PUSH1 0x1 PUSH2 0xF14 JUMP JUMPDEST DUP2 PUSH2 0x190B JUMPI POP PUSH1 0x0 PUSH2 0xF14 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1921 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x192B JUMPI PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF14 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193C PUSH2 0x187F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xF14 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x196A JUMPI POP DUP2 DUP2 EXP PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x1974 DUP4 DUP4 PUSH2 0x18AC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1988 PUSH2 0x187F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP4 DUP4 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x187F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x187F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xC58BEC4371EDBB1BA311619CA191BD1C075ABD487966F34B PUSH32 0x599462CDFE1064736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "437:8200:6:-:0;;;721:4;686:39;;1406:907;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1705:26:6;;;;;;:59;;-1:-1:-1;;;;;;1735:29:6;;1759:4;1735:29;;1705:59;1683:137;;;;-1:-1:-1;;;1683:137:6;;1019:2:10;1683:137:6;;;1001:21:10;1058:2;1038:18;;;1031:30;1097;1077:18;;;1070:58;1145:18;;1683:137:6;;;;;;;;;-1:-1:-1;;;;;1853:27:6;;;;;;:61;;-1:-1:-1;;;;;;1884:30:6;;1909:4;1884:30;;1853:61;1831:140;;;;-1:-1:-1;;;1831:140:6;;1376:2:10;1831:140:6;;;1358:21:10;1415:2;1395:18;;;1388:30;1454:31;1434:18;;;1427:59;1503:18;;1831:140:6;1174:353:10;1831:140:6;-1:-1:-1;;;;;2004:26:6;;;;;;:59;;-1:-1:-1;;;;;;2034:29:6;;2058:4;2034:29;;2004:59;1982:137;;;;-1:-1:-1;;;1982:137:6;;1734:2:10;1982:137:6;;;1716:21:10;1773:2;1753:18;;;1746:30;1812;1792:18;;;1785:58;1860:18;;1982:137:6;1532:352:10;1982:137:6;2160:12;:28;;-1:-1:-1;;;;;;2160:28:6;;;-1:-1:-1;;;;;2160:28:6;;;;;;;2199:11;:26;;;;;;;;;;;;;;2236:11;:26;;;;;;;;;;;;;;2273:14;:32;;;;;;;;;;;;437:8200;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:131:10:-;-1:-1:-1;;;;;89:31:10;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:662::-;255:6;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;381:9;375:16;400:31;425:5;400:31;:::i;:::-;500:2;485:18;;479:25;450:5;;-1:-1:-1;513:33:10;479:25;513:33;:::i;:::-;617:2;602:18;;596:25;565:7;;-1:-1:-1;630:33:10;596:25;630:33;:::i;:::-;734:2;719:18;;713:25;682:7;;-1:-1:-1;747:33:10;713:25;747:33;:::i;:::-;150:662;;;;-1:-1:-1;150:662:10;;-1:-1:-1;;150:662:10:o;1532:352::-;437:8200:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ZOOM_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3521,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3765,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_718": {
									"entryPoint": 3890,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allLaunchpads_972": {
									"entryPoint": 2576,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateTokens_1258": {
									"entryPoint": 2924,
									"id": 1258,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@clone_877": {
									"entryPoint": 3611,
									"id": 877,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deployLaunchpad_1500": {
									"entryPoint": 1000,
									"id": 1500,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@div_763": {
									"entryPoint": 3866,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@flatFee_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundAddress_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@implementation_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_748": {
									"entryPoint": 3845,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@penaltyFeePercent_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2778,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFlatFee_1109": {
									"entryPoint": 987,
									"id": 1109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFundAddress_1097": {
									"entryPoint": 2798,
									"id": 1097,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setImplementations_1136": {
									"entryPoint": 2882,
									"id": 1136,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPenalyFeePercent_1124": {
									"entryPoint": 2551,
									"id": 1124,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSuperAccount_1073": {
									"entryPoint": 2840,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVirtualLock_1085": {
									"entryPoint": 2618,
									"id": 1085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_733": {
									"entryPoint": 3878,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@superAccount_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalLaunchpadsByUser_1524": {
									"entryPoint": 2660,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalLaunchpads_1510": {
									"entryPoint": 3302,
									"id": 1510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 3400,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@virtualLock_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_ClaimInfo": {
									"entryPoint": 4059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_DexInfo": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_FeeSystem": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_SocialLinks": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_CalculateTokenInput_$1731_memory_ptr": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_LaunchpadInfo_$1610_memory_ptrt_struct$_ClaimInfo_$1617_memory_ptrt_struct$_DexInfo_$1630_memory_ptrt_struct$_FeeSystem_$1707_memory_ptrt_struct$_SocialLinks_$1752_memory_ptr": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 5479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 5514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_ClaimInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_DexInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_FeeSystem": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_SettingAccount": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_SocialLinks": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_contract$_ILaunchpad_$1574_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILaunchpad_$1574__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2321a2763116fb3d328da05a5143f1d4741d74e66a2a13095e1604e8648a8c08__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b91dc6979b3010cccd811b0aab4381cf4a75f22b4396ee3e49079bff0b514fb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c36b3e31db1859d356e014d0458bf608b52a4d51c5d7a20c308eb171769be412__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc10b7abfe5bd4c3d2a563f64bae28c5c94da496067cf76ac1be5c0a5b6be5bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f69acb569616da6a789bd9bf5ffc92e7dfaef4243921209176d9c5eff3536fc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_LaunchpadInfo_$1610_memory_ptr_t_struct$_ClaimInfo_$1617_memory_ptr_t_struct$_DexInfo_$1630_memory_ptr_t_struct$_FeeSystem_$1707_memory_ptr_t_struct$_SettingAccount_$1716_memory_ptr_t_struct$_SocialLinks_$1752_memory_ptr_t_uint256_t_uint256__to_t_struct$_LaunchpadInfo_$1610_memory_ptr_t_struct$_ClaimInfo_$1617_memory_ptr_t_struct$_DexInfo_$1630_memory_ptr_t_struct$_FeeSystem_$1707_memory_ptr_t_struct$_SettingAccount_$1716_memory_ptr_t_struct$_SocialLinks_$1752_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_2800": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 6544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23028:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nodeType": "YulIf",
															"src": "94:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "231:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "255:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "260:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "251:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "241:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "241:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "241:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "291:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "281:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "281:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "281:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "315:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "305:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "305:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "199:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:209:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "387:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "445:6:10",
																		"type": "",
																		"value": "0x0140"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "433:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:19:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "419:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "527:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "529:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "529:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "529:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "470:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "482:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "467:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "467:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "506:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "503:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "503:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "464:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:62:10"
															},
															"nodeType": "YulIf",
															"src": "461:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "569:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "558:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "558:22:10"
														}
													]
												},
												"name": "allocate_memory_2800",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "366:6:10",
														"type": ""
													}
												],
												"src": "331:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:209:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "642:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "658:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "652:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "642:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "670:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "692:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "700:6:10",
																		"type": "",
																		"value": "0x0160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "688:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:19:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "674:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "782:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "784:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "784:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "784:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "725:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "737:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "722:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "722:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "761:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "758:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "758:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "719:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:62:10"
															},
															"nodeType": "YulIf",
															"src": "716:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "824:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "813:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "813:22:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "591:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "891:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "964:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "967:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "914:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "925:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "940:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "945:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "936:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "936:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "949:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "932:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "921:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "921:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "911:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "911:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "904:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:50:10"
															},
															"nodeType": "YulIf",
															"src": "901:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "880:5:10",
														"type": ""
													}
												],
												"src": "846:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1031:85:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1041:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1063:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1050:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1041:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1104:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1079:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1079:31:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1010:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1021:5:10",
														"type": ""
													}
												],
												"src": "982:134:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1187:474:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1208:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1213:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1204:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1225:4:10",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:30:10"
															},
															"nodeType": "YulIf",
															"src": "1197:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1256:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1270:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1260:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1288:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:4:10",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1306:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:17:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1292:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1398:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1400:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1400:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1341:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1353:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1338:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1377:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1389:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1374:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1374:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1335:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:62:10"
															},
															"nodeType": "YulIf",
															"src": "1332:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1440:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1460:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1469:6:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1460:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1491:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1499:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1484:39:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1543:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1551:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1573:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1584:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1569:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1569:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1556:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1556:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1532:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1617:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1639:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1650:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1635:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1635:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1622:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:57:10"
														}
													]
												},
												"name": "abi_decode_struct_ClaimInfo",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1158:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:10",
														"type": ""
													}
												],
												"src": "1121:540:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1708:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1771:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1774:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1764:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1764:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1731:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1752:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1745:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1745:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1738:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1738:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1728:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:40:10"
															},
															"nodeType": "YulIf",
															"src": "1718:60:10"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1697:5:10",
														"type": ""
													}
												],
												"src": "1666:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:892:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1897:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1906:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1899:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1899:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1874:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1879:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:30:10"
															},
															"nodeType": "YulIf",
															"src": "1863:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1922:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1936:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1926:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1954:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1976:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1984:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1972:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:17:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1958:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2064:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2066:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2007:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2019:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2004:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2043:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2040:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:62:10"
															},
															"nodeType": "YulIf",
															"src": "1998:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2106:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2095:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2126:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2135:6:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2126:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2150:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2178:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2165:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:23:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2154:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2219:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2197:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2197:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2243:6:10"
																	},
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2251:7:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:23:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:23:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2268:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2300:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2311:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2283:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:32:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2272:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2349:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2324:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:33:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2377:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2385:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:15:10"
																	},
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2390:7:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:32:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2407:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2422:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:32:10"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "2411:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "2488:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2463:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2463:33:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:15:10"
																	},
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "2529:7:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2505:32:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2557:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2565:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2587:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2598:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2583:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2583:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2570:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2570:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2623:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2631:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2654:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2665:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2650:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2650:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2637:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2699:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2722:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2733:3:10",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2718:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2718:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2705:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:59:10"
														}
													]
												},
												"name": "abi_decode_struct_DexInfo",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1824:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1835:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1843:5:10",
														"type": ""
													}
												],
												"src": "1789:956:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:412:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2837:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2833:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:30:10"
															},
															"nodeType": "YulIf",
															"src": "2826:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:25:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:11:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2919:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2949:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:17:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2923:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3029:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3031:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3031:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2972:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2984:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2969:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2969:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3008:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3020:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3005:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2966:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:62:10"
															},
															"nodeType": "YulIf",
															"src": "2963:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:4:10",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3073:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3060:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:24:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3060:24:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3093:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3102:6:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3093:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3124:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3132:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3132:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3117:39:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3176:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3184:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3206:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3217:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3202:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3202:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3189:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:57:10"
														}
													]
												},
												"name": "abi_decode_struct_FeeSystem",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2787:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2798:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2806:5:10",
														"type": ""
													}
												],
												"src": "2750:478:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3286:666:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3335:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3344:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3337:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3337:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3337:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3314:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3322:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3310:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3310:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3329:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:35:10"
															},
															"nodeType": "YulIf",
															"src": "3296:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3360:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3383:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3370:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3364:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3399:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3409:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3403:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3450:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3452:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3452:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3442:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3446:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3439:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:10:10"
															},
															"nodeType": "YulIf",
															"src": "3436:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3481:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3491:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3491:7:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3485:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3507:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3521:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3511:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3539:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3561:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3585:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3589:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3581:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3581:13:10"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3596:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3577:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3577:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3601:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3573:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3573:31:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3606:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3557:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3543:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3669:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3671:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3671:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3671:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3628:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3640:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3625:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3625:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3648:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3660:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3645:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3645:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3622:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:46:10"
															},
															"nodeType": "YulIf",
															"src": "3619:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3711:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3700:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3738:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3746:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3797:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3806:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3809:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3799:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3799:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3799:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3772:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3780:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3768:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3768:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3785:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3764:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3792:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3761:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3761:35:10"
															},
															"nodeType": "YulIf",
															"src": "3758:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3839:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3847:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3858:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3866:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3873:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3822:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3822:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3900:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3908:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3896:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3896:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3913:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3920:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3885:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3931:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3940:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3931:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3260:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3276:5:10",
														"type": ""
													}
												],
												"src": "3233:719:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4025:2003:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4071:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4080:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4083:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4073:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4073:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4073:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4046:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4051:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4042:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4042:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4063:6:10",
																		"type": "",
																		"value": "0x0140"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4038:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:32:10"
															},
															"nodeType": "YulIf",
															"src": "4035:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4096:31:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_2800",
																	"nodeType": "YulIdentifier",
																	"src": "4105:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:22:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4096:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4136:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4163:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4150:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4140:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4182:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4192:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4186:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4225:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4233:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4222:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4222:14:10"
															},
															"nodeType": "YulIf",
															"src": "4219:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4269:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4298:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4309:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4294:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4294:22:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4318:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "4276:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4276:46:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4262:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4262:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4332:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4348:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4336:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4409:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4418:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4421:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4411:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4411:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4411:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4395:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4405:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4392:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:16:10"
															},
															"nodeType": "YulIf",
															"src": "4389:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4445:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4452:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4441:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4441:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4479:9:10"
																					},
																					{
																						"name": "offset_1",
																						"nodeType": "YulIdentifier",
																						"src": "4490:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4475:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4475:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4501:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "4457:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4457:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4434:72:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4515:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4548:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4559:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4544:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4531:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:32:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4519:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4592:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4601:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4604:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4594:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4594:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4594:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4578:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4588:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4575:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:16:10"
															},
															"nodeType": "YulIf",
															"src": "4572:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4628:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4635:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4624:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4624:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4662:9:10"
																					},
																					{
																						"name": "offset_2",
																						"nodeType": "YulIdentifier",
																						"src": "4673:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4658:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4658:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4684:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "4640:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4617:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4617:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4617:72:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4698:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4742:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4727:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4714:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:32:10"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nodeType": "YulTypedName",
																	"src": "4702:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4775:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4784:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4787:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4777:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4777:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nodeType": "YulIdentifier",
																		"src": "4761:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4771:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4758:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:16:10"
															},
															"nodeType": "YulIf",
															"src": "4755:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4811:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4818:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4807:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4845:9:10"
																					},
																					{
																						"name": "offset_3",
																						"nodeType": "YulIdentifier",
																						"src": "4856:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4841:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4867:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "4823:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4800:72:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4881:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4925:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4897:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:33:10"
															},
															"variables": [
																{
																	"name": "offset_4",
																	"nodeType": "YulTypedName",
																	"src": "4885:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4959:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4971:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4961:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4961:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_4",
																		"nodeType": "YulIdentifier",
																		"src": "4945:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4955:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4942:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:16:10"
															},
															"nodeType": "YulIf",
															"src": "4939:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5002:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:10"
																					},
																					{
																						"name": "offset_4",
																						"nodeType": "YulIdentifier",
																						"src": "5041:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5026:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5052:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "5008:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4984:73:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5066:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5099:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5110:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5095:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5095:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:33:10"
															},
															"variables": [
																{
																	"name": "offset_5",
																	"nodeType": "YulTypedName",
																	"src": "5070:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5144:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5153:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5156:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5146:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5146:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5146:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_5",
																		"nodeType": "YulIdentifier",
																		"src": "5130:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5140:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5127:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:16:10"
															},
															"nodeType": "YulIf",
															"src": "5124:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5180:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5187:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5176:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5215:9:10"
																					},
																					{
																						"name": "offset_5",
																						"nodeType": "YulIdentifier",
																						"src": "5226:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5211:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5211:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5237:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "5193:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5193:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5169:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5169:73:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5251:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5295:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5280:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5267:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:33:10"
															},
															"variables": [
																{
																	"name": "offset_6",
																	"nodeType": "YulTypedName",
																	"src": "5255:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5329:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5338:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5341:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5331:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5331:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5331:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_6",
																		"nodeType": "YulIdentifier",
																		"src": "5315:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5325:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5312:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:16:10"
															},
															"nodeType": "YulIf",
															"src": "5309:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5365:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5372:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5400:9:10"
																					},
																					{
																						"name": "offset_6",
																						"nodeType": "YulIdentifier",
																						"src": "5411:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5396:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5396:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5422:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "5378:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5378:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5354:73:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5436:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5480:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5465:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5452:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:33:10"
															},
															"variables": [
																{
																	"name": "offset_7",
																	"nodeType": "YulTypedName",
																	"src": "5440:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5514:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5523:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5526:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5516:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5516:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5516:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_7",
																		"nodeType": "YulIdentifier",
																		"src": "5500:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5510:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5497:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:16:10"
															},
															"nodeType": "YulIf",
															"src": "5494:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5550:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5557:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5585:9:10"
																					},
																					{
																						"name": "offset_7",
																						"nodeType": "YulIdentifier",
																						"src": "5596:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5581:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5581:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5607:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "5563:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5563:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5539:73:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5621:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5631:3:10",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5625:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5643:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5676:9:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5687:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5672:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5659:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5659:32:10"
															},
															"variables": [
																{
																	"name": "offset_8",
																	"nodeType": "YulTypedName",
																	"src": "5647:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5720:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5729:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5732:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5722:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5722:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5722:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_8",
																		"nodeType": "YulIdentifier",
																		"src": "5706:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5716:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5703:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:16:10"
															},
															"nodeType": "YulIf",
															"src": "5700:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5756:5:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5763:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5752:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5752:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5790:9:10"
																					},
																					{
																						"name": "offset_8",
																						"nodeType": "YulIdentifier",
																						"src": "5801:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5786:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5786:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5812:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "5768:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5768:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:72:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5826:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5836:3:10",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5830:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5848:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5892:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5877:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5864:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:32:10"
															},
															"variables": [
																{
																	"name": "offset_9",
																	"nodeType": "YulTypedName",
																	"src": "5852:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5925:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5934:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5937:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5927:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5927:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5927:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_9",
																		"nodeType": "YulIdentifier",
																		"src": "5911:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5921:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5908:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:16:10"
															},
															"nodeType": "YulIf",
															"src": "5905:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5961:5:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5968:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5995:9:10"
																					},
																					{
																						"name": "offset_9",
																						"nodeType": "YulIdentifier",
																						"src": "6006:8:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5991:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5991:24:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6017:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nodeType": "YulIdentifier",
																			"src": "5973:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5973:48:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5950:72:10"
														}
													]
												},
												"name": "abi_decode_struct_SocialLinks",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3996:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4007:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4015:5:10",
														"type": ""
													}
												],
												"src": "3957:2071:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6310:1422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6320:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6334:7:10"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6330:23:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6324:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6378:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6387:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6390:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6380:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6380:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6380:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6369:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:3:10",
																		"type": "",
																		"value": "736"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6365:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6365:12:10"
															},
															"nodeType": "YulIf",
															"src": "6362:32:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6403:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6413:6:10",
																"type": "",
																"value": "0x0160"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6407:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6443:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6452:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6455:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6445:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6445:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6445:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6435:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6439:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6431:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:11:10"
															},
															"nodeType": "YulIf",
															"src": "6428:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6468:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6481:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:17:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6472:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6514:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6540:9:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "6521:18:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6521:29:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6507:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6571:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6578:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6567:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6606:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6617:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6602:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6602:18:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "6583:18:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6583:38:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6560:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6642:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6649:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6671:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6682:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6667:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6667:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6654:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6654:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6631:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6631:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6707:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6714:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6703:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6703:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6736:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6747:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6732:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6732:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6719:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6719:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6696:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6696:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6772:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6779:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6768:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6802:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6813:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6798:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6798:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6785:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6785:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6761:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6839:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6846:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6835:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6869:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6880:3:10",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6865:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6865:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6852:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6852:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6828:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6913:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6902:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6936:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6947:3:10",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6932:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6932:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6919:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6895:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6895:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6973:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6980:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6969:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6969:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7003:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7014:3:10",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6999:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6999:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6986:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6986:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6962:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6962:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7029:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7039:3:10",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "7033:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7062:5:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "7069:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7058:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7091:9:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "7102:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7087:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7087:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7074:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7074:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7051:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7116:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7126:3:10",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "7120:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7149:5:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "7156:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7145:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7178:9:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "7189:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7174:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7174:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7161:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7138:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7203:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7213:3:10",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "7207:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7236:5:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "7243:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7232:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7265:9:10"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "7276:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7261:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7248:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7225:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7225:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7290:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7300:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7290:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7314:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7356:9:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7367:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7352:18:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7372:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_ClaimInfo",
																	"nodeType": "YulIdentifier",
																	"src": "7324:27:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:56:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7314:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7389:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7440:3:10",
																				"type": "",
																				"value": "448"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7425:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7425:19:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7446:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_DexInfo",
																	"nodeType": "YulIdentifier",
																	"src": "7399:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:55:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7463:67:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7516:3:10",
																				"type": "",
																				"value": "640"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7501:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7501:19:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7522:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_FeeSystem",
																	"nodeType": "YulIdentifier",
																	"src": "7473:27:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7473:57:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7539:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7570:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7581:3:10",
																				"type": "",
																				"value": "704"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7566:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7553:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7543:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7629:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7638:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7641:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7631:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7631:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7601:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7609:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7598:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:30:10"
															},
															"nodeType": "YulIf",
															"src": "7595:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:72:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7698:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7709:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7694:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7694:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7718:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_SocialLinks",
																	"nodeType": "YulIdentifier",
																	"src": "7664:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:62:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_LaunchpadInfo_$1610_memory_ptrt_struct$_ClaimInfo_$1617_memory_ptrt_struct$_DexInfo_$1630_memory_ptrt_struct$_FeeSystem_$1707_memory_ptrt_struct$_SocialLinks_$1752_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6244:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6255:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6267:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6275:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6283:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6291:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6299:6:10",
														"type": ""
													}
												],
												"src": "6033:1699:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7867:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7879:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7890:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7875:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7867:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7909:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7924:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7940:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7945:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7936:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7936:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7949:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7932:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7932:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7902:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7902:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7902:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILaunchpad_$1574__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7826:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7837:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7848:4:10",
														"type": ""
													}
												],
												"src": "7737:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8065:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8075:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8087:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8098:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8083:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8083:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8075:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8117:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8110:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8034:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8045:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8056:4:10",
														"type": ""
													}
												],
												"src": "7964:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8262:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8271:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8274:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8264:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8264:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8264:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8237:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8233:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:32:10"
															},
															"nodeType": "YulIf",
															"src": "8226:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8287:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8313:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8300:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8300:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8291:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8357:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8332:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8332:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8332:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8372:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8382:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8182:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8193:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8205:6:10",
														"type": ""
													}
												],
												"src": "8146:247:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8442:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8459:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8468:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8483:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8488:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8479:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8479:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8492:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8475:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8475:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8464:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8464:31:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8452:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8452:44:10"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8426:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8433:3:10",
														"type": ""
													}
												],
												"src": "8398:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8608:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8618:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8630:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8641:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8626:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8626:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8618:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8660:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8675:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8691:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8696:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8687:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8687:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8700:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8683:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8683:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8671:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8671:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8653:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8577:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8588:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8599:4:10",
														"type": ""
													}
												],
												"src": "8507:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8885:507:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8895:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8905:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8899:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8916:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8934:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8945:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8930:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8920:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8964:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8975:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8957:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8957:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8987:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "8998:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "8991:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9013:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9033:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9027:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9027:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9017:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9056:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9064:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9049:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9049:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9080:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9091:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9102:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9087:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9087:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9080:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9132:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9140:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9128:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9118:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9152:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9161:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9156:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9220:146:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9241:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "9256:6:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "9250:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9250:13:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9273:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9278:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "9269:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9269:11:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9282:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "9265:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9265:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "9246:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9246:39:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9234:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9234:52:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9234:52:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9299:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9310:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9315:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9306:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9306:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9299:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9331:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9345:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9353:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9341:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9341:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9331:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9182:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9185:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9179:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9193:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9195:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9204:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9207:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9200:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9200:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9195:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9175:3:10",
																"statements": []
															},
															"src": "9171:195:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9375:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9383:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9375:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_ILaunchpad_$1574_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8854:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8865:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8876:4:10",
														"type": ""
													}
												],
												"src": "8715:677:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9475:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9521:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9530:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9533:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9523:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9523:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9523:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9496:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9505:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9492:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9517:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9488:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:32:10"
															},
															"nodeType": "YulIf",
															"src": "9485:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9546:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9572:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9559:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9550:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9616:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9591:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9591:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9631:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9641:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9441:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9452:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9464:6:10",
														"type": ""
													}
												],
												"src": "9397:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9764:814:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9811:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9820:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9823:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9813:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9813:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9813:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9781:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9806:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9777:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9777:33:10"
															},
															"nodeType": "YulIf",
															"src": "9774:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9836:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9856:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9850:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9850:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "9840:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9868:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9890:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9898:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9886:16:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9872:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9977:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9979:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9979:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9979:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9920:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9932:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9917:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9917:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9956:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9968:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9953:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9953:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9914:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:62:10"
															},
															"nodeType": "YulIf",
															"src": "9911:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10015:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10019:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10008:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10008:22:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10039:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10065:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10052:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10052:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10043:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10109:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "10084:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10084:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10084:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10131:6:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10139:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10124:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10124:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10124:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10165:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10173:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10161:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10195:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10206:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10191:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10191:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10178:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10178:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10154:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10231:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10239:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10227:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10261:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10272:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10257:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10257:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10244:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10244:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10220:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10297:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10305:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10293:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10293:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10327:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10338:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10323:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10323:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10310:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10286:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10286:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10363:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10371:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10359:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10394:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10405:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10390:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10390:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10377:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10377:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10352:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10352:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10352:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10431:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10439:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10427:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10462:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10473:3:10",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10458:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10458:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10445:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10445:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10420:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10420:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10499:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10507:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10495:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10530:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10541:3:10",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10526:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10526:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10513:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10513:33:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10488:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10556:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "10566:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10556:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_CalculateTokenInput_$1731_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9730:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9741:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9753:6:10",
														"type": ""
													}
												],
												"src": "9657:921:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10712:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10722:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10734:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10745:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10730:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10722:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10764:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10775:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10757:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10757:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10802:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10798:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10818:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10791:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10791:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10791:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10673:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10684:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10692:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10703:4:10",
														"type": ""
													}
												],
												"src": "10583:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10953:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10963:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10975:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10986:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10971:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10971:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10963:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11005:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11020:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11036:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11041:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11032:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11032:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11045:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11028:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11028:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11016:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10998:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10998:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10922:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10933:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10944:4:10",
														"type": ""
													}
												],
												"src": "10836:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11234:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11251:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11262:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11244:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11244:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11285:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11296:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11281:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11301:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11274:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11274:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11274:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11335:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11320:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11320:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a2043616e206e6f742063726561746520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11340:34:10",
																		"type": "",
																		"value": "LauchpadFactory: Can not create "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11313:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11313:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11395:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11406:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11391:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11391:18:10"
																	},
																	{
																		"hexValue": "6c61756e6368706164206e6f7721",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11411:16:10",
																		"type": "",
																		"value": "launchpad now!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11384:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11384:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11384:44:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11437:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11449:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11460:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11445:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11445:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11437:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b91dc6979b3010cccd811b0aab4381cf4a75f22b4396ee3e49079bff0b514fb7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11211:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11225:4:10",
														"type": ""
													}
												],
												"src": "11060:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11649:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11666:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11677:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11659:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11659:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11700:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11711:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11696:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11696:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11716:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11689:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11689:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11689:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11739:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11750:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11735:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11735:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a204e6f7420656e6f7567682066656521",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11755:34:10",
																		"type": "",
																		"value": "LauchpadFactory: Not enough fee!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11728:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11728:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11728:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11799:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11811:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11822:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11807:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11807:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11799:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c36b3e31db1859d356e014d0458bf608b52a4d51c5d7a20c308eb171769be412__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11626:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11640:4:10",
														"type": ""
													}
												],
												"src": "11475:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11915:194:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11961:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11973:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11963:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11963:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11963:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11936:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11945:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11932:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11957:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11928:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:32:10"
															},
															"nodeType": "YulIf",
															"src": "11925:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11986:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12005:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11999:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11999:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11990:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12063:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12072:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12075:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12065:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12065:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12065:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12037:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12048:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12055:4:10",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12044:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12044:16:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12034:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12034:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12027:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12027:35:10"
															},
															"nodeType": "YulIf",
															"src": "12024:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12088:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12098:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12088:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11881:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11892:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11904:6:10",
														"type": ""
													}
												],
												"src": "11836:273:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12167:153:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12184:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12189:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12189:12:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12177:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12177:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12177:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12222:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12227:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12218:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12244:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12251:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12240:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12240:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12234:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12234:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12211:47:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12278:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12283:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12274:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12300:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12307:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12296:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12296:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12290:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12290:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12267:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12267:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12267:47:10"
														}
													]
												},
												"name": "abi_encode_struct_ClaimInfo",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12151:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12158:3:10",
														"type": ""
													}
												],
												"src": "12114:206:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12376:434:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12393:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12418:5:10"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "12412:5:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12412:12:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12405:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12405:20:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12398:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12398:28:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12386:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12386:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12386:41:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12436:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12466:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12473:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12462:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12462:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12456:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12456:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "12440:12:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12488:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12506:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12511:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12502:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12502:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12515:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12498:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12498:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12492:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12537:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12542:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12533:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12553:12:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12567:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12549:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12526:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12591:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12596:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12587:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12587:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12617:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12624:4:10",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12613:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12613:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "12607:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12607:23:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12632:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12603:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12580:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12580:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12656:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12661:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12678:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12685:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12674:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12674:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12668:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12668:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12645:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12645:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12645:47:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12712:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12717:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12708:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12734:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12741:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12730:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12730:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12724:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12724:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12701:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12701:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12701:47:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12768:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12773:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12764:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12790:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12797:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12786:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12786:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12780:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12780:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12757:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12757:47:10"
														}
													]
												},
												"name": "abi_encode_struct_DexInfo",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12360:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12367:3:10",
														"type": ""
													}
												],
												"src": "12325:485:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12868:97:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12885:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12896:5:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12890:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12890:12:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12878:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12878:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12878:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12923:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12928:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12919:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12919:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12945:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12952:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12941:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12941:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12935:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12935:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12912:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12912:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12912:47:10"
														}
													]
												},
												"name": "abi_encode_struct_FeeSystem",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12852:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12859:3:10",
														"type": ""
													}
												],
												"src": "12815:150:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13028:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13038:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13056:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13061:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13052:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13052:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13065:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13048:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13048:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13042:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13083:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13098:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "13092:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13092:12:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13106:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13088:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13076:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13076:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13076:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13130:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13135:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13126:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "13156:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13163:4:10",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13152:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13152:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "13146:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13146:23:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13171:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13142:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13142:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13119:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13119:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13195:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13200:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13191:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "13221:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13228:4:10",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13217:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13217:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "13211:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13211:23:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13236:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13207:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13207:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13184:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13260:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13265:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13256:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "13286:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13293:4:10",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13282:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13282:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "13276:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13276:23:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13301:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13249:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13249:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13249:56:10"
														}
													]
												},
												"name": "abi_encode_struct_SettingAccount",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13012:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13019:3:10",
														"type": ""
													}
												],
												"src": "12970:341:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13366:373:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13376:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13396:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13390:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13390:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13380:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13418:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13423:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13411:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13411:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13411:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13439:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13448:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13443:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13510:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13524:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13534:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "13528:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "13566:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13571:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13562:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13562:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "13575:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13558:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13558:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "13594:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "13601:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "13590:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13590:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "13605:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13586:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13586:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13580:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13580:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13551:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13551:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13551:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13469:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13472:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13466:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13466:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13480:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13482:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13491:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13494:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13487:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13487:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13482:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13462:3:10",
																"statements": []
															},
															"src": "13458:162:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "13644:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "13649:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13640:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13640:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13658:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13636:27:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13665:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13629:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13629:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13629:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13676:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13691:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "13704:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13712:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13700:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13700:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13721:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13717:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13717:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "13696:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13696:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13687:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13728:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13683:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13683:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13676:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13343:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13350:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13358:3:10",
														"type": ""
													}
												],
												"src": "13316:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13806:1697:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13816:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13826:6:10",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13820:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13841:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13867:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13861:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13861:12:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "13845:12:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13889:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13894:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13882:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13882:15:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13906:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "13936:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13954:3:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13959:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13950:12:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13918:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:45:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "13910:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13972:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14004:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14011:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14000:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13994:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13994:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "13976:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14037:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14042:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14033:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14033:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14053:4:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14059:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14049:14:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14026:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14026:38:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14073:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "14105:14:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14121:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14087:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14087:39:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "14077:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14135:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14167:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14174:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14163:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14163:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14157:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14157:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "14139:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14200:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14205:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14196:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14196:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "14216:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14224:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14212:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14189:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14189:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14238:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "14270:14:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "14286:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14252:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:41:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "14242:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14302:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14334:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14341:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14330:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14324:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14324:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "14306:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14367:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14372:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14363:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14363:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "14383:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14391:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14379:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14356:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14356:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14356:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14405:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "14437:14:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "14453:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14419:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14419:41:10"
															},
															"variables": [
																{
																	"name": "tail_3",
																	"nodeType": "YulTypedName",
																	"src": "14409:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14469:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14501:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14508:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14497:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14497:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14491:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "14473:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14534:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14539:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14530:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_3",
																				"nodeType": "YulIdentifier",
																				"src": "14550:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14558:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14546:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14523:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14523:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14523:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14572:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "14604:14:10"
																	},
																	{
																		"name": "tail_3",
																		"nodeType": "YulIdentifier",
																		"src": "14620:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14586:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:41:10"
															},
															"variables": [
																{
																	"name": "tail_4",
																	"nodeType": "YulTypedName",
																	"src": "14576:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14636:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14668:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14675:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14664:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14664:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14658:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14658:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_5",
																	"nodeType": "YulTypedName",
																	"src": "14640:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14701:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14706:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14697:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14697:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_4",
																				"nodeType": "YulIdentifier",
																				"src": "14717:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14725:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14713:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14713:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14690:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14690:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14739:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_5",
																		"nodeType": "YulIdentifier",
																		"src": "14771:14:10"
																	},
																	{
																		"name": "tail_4",
																		"nodeType": "YulIdentifier",
																		"src": "14787:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14753:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14753:41:10"
															},
															"variables": [
																{
																	"name": "tail_5",
																	"nodeType": "YulTypedName",
																	"src": "14743:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14803:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14835:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14842:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14831:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14825:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14825:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_6",
																	"nodeType": "YulTypedName",
																	"src": "14807:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14868:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14873:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14864:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_5",
																				"nodeType": "YulIdentifier",
																				"src": "14884:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14892:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14880:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14857:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14857:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14906:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_6",
																		"nodeType": "YulIdentifier",
																		"src": "14938:14:10"
																	},
																	{
																		"name": "tail_5",
																		"nodeType": "YulIdentifier",
																		"src": "14954:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14920:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:41:10"
															},
															"variables": [
																{
																	"name": "tail_6",
																	"nodeType": "YulTypedName",
																	"src": "14910:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14970:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15002:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15009:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14998:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14992:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_7",
																	"nodeType": "YulTypedName",
																	"src": "14974:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15035:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15040:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_6",
																				"nodeType": "YulIdentifier",
																				"src": "15051:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15059:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15047:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15024:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15073:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_7",
																		"nodeType": "YulIdentifier",
																		"src": "15105:14:10"
																	},
																	{
																		"name": "tail_6",
																		"nodeType": "YulIdentifier",
																		"src": "15121:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15087:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15087:41:10"
															},
															"variables": [
																{
																	"name": "tail_7",
																	"nodeType": "YulTypedName",
																	"src": "15077:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15137:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15147:6:10",
																"type": "",
																"value": "0x0100"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15141:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15162:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15194:5:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15201:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15190:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15190:14:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15184:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15184:21:10"
															},
															"variables": [
																{
																	"name": "memberValue0_8",
																	"nodeType": "YulTypedName",
																	"src": "15166:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15225:3:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15230:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15221:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15221:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_7",
																				"nodeType": "YulIdentifier",
																				"src": "15239:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15247:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15235:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15214:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15214:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15214:38:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15261:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_8",
																		"nodeType": "YulIdentifier",
																		"src": "15293:14:10"
																	},
																	{
																		"name": "tail_7",
																		"nodeType": "YulIdentifier",
																		"src": "15309:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15275:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15275:41:10"
															},
															"variables": [
																{
																	"name": "tail_8",
																	"nodeType": "YulTypedName",
																	"src": "15265:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15325:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15335:6:10",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15329:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15350:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15382:5:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15389:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15378:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15378:14:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15372:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15372:21:10"
															},
															"variables": [
																{
																	"name": "memberValue0_9",
																	"nodeType": "YulTypedName",
																	"src": "15354:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15413:3:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15418:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15409:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_8",
																				"nodeType": "YulIdentifier",
																				"src": "15427:6:10"
																			},
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15435:3:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15423:16:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15402:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15402:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15449:48:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_9",
																		"nodeType": "YulIdentifier",
																		"src": "15474:14:10"
																	},
																	{
																		"name": "tail_8",
																		"nodeType": "YulIdentifier",
																		"src": "15490:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15456:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15456:41:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15449:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_struct_SocialLinks",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13783:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13790:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13798:3:10",
														"type": ""
													}
												],
												"src": "13744:1759:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16147:1293:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16157:13:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16167:3:10",
																"type": "",
																"value": "928"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16161:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16204:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16198:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16198:13:10"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16213:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "16179:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16179:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16179:44:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16232:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16262:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16270:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16258:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16258:17:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16252:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16252:24:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "16236:12:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "16304:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16322:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16333:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16318:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16318:20:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "16285:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16285:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16285:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16359:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16370:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16355:20:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16387:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16395:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16383:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16383:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16377:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16377:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16348:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16348:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16422:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16433:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16418:20:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16450:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16458:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16446:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16446:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16440:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16440:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16411:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16411:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16411:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16485:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16496:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16481:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16481:20:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16513:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16521:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16509:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16509:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16503:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16503:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16474:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16474:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16474:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16548:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16559:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16544:20:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16576:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16584:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16572:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16572:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16566:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16566:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16537:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16537:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16537:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16611:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16622:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16607:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16607:20:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16639:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16647:4:10",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16635:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16635:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16629:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16629:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16600:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16674:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16685:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16670:20:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16702:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16710:4:10",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16698:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16698:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16692:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16692:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16663:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16663:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16663:54:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16726:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16736:6:10",
																"type": "",
																"value": "0x0100"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "16730:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16762:9:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "16773:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16758:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16758:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16788:6:10"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "16796:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16784:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16784:15:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16778:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16778:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16751:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16751:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16751:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16810:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16820:6:10",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "16814:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16846:9:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "16857:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16842:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16872:6:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "16880:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16868:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16868:15:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16862:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16862:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16835:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16835:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16835:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16894:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16904:6:10",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "16898:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16930:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "16941:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16926:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16926:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "16956:6:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "16964:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16952:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16952:15:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "16946:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16946:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16919:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16919:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16919:50:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17006:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17018:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17029:3:10",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17014:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17014:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_ClaimInfo",
																	"nodeType": "YulIdentifier",
																	"src": "16978:27:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16978:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16978:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17069:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17081:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17092:3:10",
																				"type": "",
																				"value": "448"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17077:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_DexInfo",
																	"nodeType": "YulIdentifier",
																	"src": "17043:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17043:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17043:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17134:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17146:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17157:3:10",
																				"type": "",
																				"value": "640"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17142:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17142:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_FeeSystem",
																	"nodeType": "YulIdentifier",
																	"src": "17106:27:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17106:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17106:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17204:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17216:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17227:3:10",
																				"type": "",
																				"value": "704"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17212:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_SettingAccount",
																	"nodeType": "YulIdentifier",
																	"src": "17171:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17171:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17171:61:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17252:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17263:3:10",
																				"type": "",
																				"value": "832"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17248:19:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "17269:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17241:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17241:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17241:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17281:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "17319:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17331:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17342:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17327:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17327:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_SocialLinks",
																	"nodeType": "YulIdentifier",
																	"src": "17289:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17289:57:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17281:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17377:3:10",
																				"type": "",
																				"value": "864"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17362:19:10"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "17383:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17355:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17355:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17355:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17410:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17421:3:10",
																				"type": "",
																				"value": "896"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17406:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17406:19:10"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "17427:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17399:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17399:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17399:35:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_LaunchpadInfo_$1610_memory_ptr_t_struct$_ClaimInfo_$1617_memory_ptr_t_struct$_DexInfo_$1630_memory_ptr_t_struct$_FeeSystem_$1707_memory_ptr_t_struct$_SettingAccount_$1716_memory_ptr_t_struct$_SocialLinks_$1752_memory_ptr_t_uint256_t_uint256__to_t_struct$_LaunchpadInfo_$1610_memory_ptr_t_struct$_ClaimInfo_$1617_memory_ptr_t_struct$_DexInfo_$1630_memory_ptr_t_struct$_FeeSystem_$1707_memory_ptr_t_struct$_SettingAccount_$1716_memory_ptr_t_struct$_SocialLinks_$1752_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16060:9:10",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "16071:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "16079:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "16087:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16095:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16103:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16111:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16119:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16127:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16138:4:10",
														"type": ""
													}
												],
												"src": "15508:1932:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17526:103:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17572:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17581:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17584:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17574:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17574:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17574:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17547:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17556:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17543:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17568:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17539:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17539:32:10"
															},
															"nodeType": "YulIf",
															"src": "17536:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17597:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17613:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17607:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17607:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "17597:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17492:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17503:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17515:6:10",
														"type": ""
													}
												],
												"src": "17445:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17808:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17825:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17836:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17818:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17818:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17818:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17859:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17870:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17855:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17875:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17848:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17848:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17898:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17909:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17894:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17894:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a20496e73756666696369656e74204261",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17914:34:10",
																		"type": "",
																		"value": "LauchpadFactory: Insufficient Ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17887:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17887:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17887:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17969:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17980:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17965:18:10"
																	},
																	{
																		"hexValue": "6c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17985:7:10",
																		"type": "",
																		"value": "lance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17958:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17958:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17958:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18002:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18014:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18025:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18010:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18010:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18002:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f69acb569616da6a789bd9bf5ffc92e7dfaef4243921209176d9c5eff3536fc6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17785:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17799:4:10",
														"type": ""
													}
												],
												"src": "17634:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18169:175:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18179:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18191:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18202:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18187:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18187:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18179:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18214:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18232:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18237:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18228:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18228:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18241:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18224:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18224:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18218:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18259:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18274:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18282:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18270:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18270:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18252:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18252:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18306:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18317:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18302:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18302:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18326:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18334:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18322:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18295:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18295:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18295:43:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18130:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18141:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18149:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18160:4:10",
														"type": ""
													}
												],
												"src": "18040:304:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18523:229:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18540:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18551:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18533:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18533:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18533:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18574:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18585:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18570:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18570:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18590:2:10",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18563:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18563:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18563:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18613:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18624:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18609:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a20496e73756666696369656e7420416c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18629:34:10",
																		"type": "",
																		"value": "LauchpadFactory: Insufficient Al"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18602:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18602:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18602:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18684:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18695:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18680:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18680:18:10"
																	},
																	{
																		"hexValue": "6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18700:9:10",
																		"type": "",
																		"value": "lowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18673:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18673:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18673:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18719:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18731:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18742:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18727:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18727:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18719:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc10b7abfe5bd4c3d2a563f64bae28c5c94da496067cf76ac1be5c0a5b6be5bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18500:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18514:4:10",
														"type": ""
													}
												],
												"src": "18349:403:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18914:218:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18924:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18936:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18947:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18932:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18924:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18959:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18977:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18982:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18973:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18973:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18986:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18969:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18969:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18963:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19004:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19019:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19027:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19015:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19015:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18997:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18997:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19051:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19062:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19047:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19071:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19079:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19067:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19067:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19040:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19040:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19103:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19114:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19099:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19099:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19119:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19092:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19092:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19092:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18867:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18878:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18886:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18894:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18905:4:10",
														"type": ""
													}
												],
												"src": "18757:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19215:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19261:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19270:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19273:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19263:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19263:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19263:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19236:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19245:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19232:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19232:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19257:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19228:32:10"
															},
															"nodeType": "YulIf",
															"src": "19225:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19286:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19305:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19299:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19299:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "19290:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19346:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "19324:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19324:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19324:28:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19361:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19371:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "19361:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19181:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19192:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19204:6:10",
														"type": ""
													}
												],
												"src": "19137:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19561:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19578:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19589:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19571:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19571:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19571:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19612:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19623:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19608:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19608:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19628:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19601:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19601:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19601:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19651:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19662:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19647:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19647:18:10"
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19667:34:10",
																		"type": "",
																		"value": "LauchpadFactory: transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19640:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19640:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19711:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19723:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19734:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19719:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19719:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19711:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2321a2763116fb3d328da05a5143f1d4741d74e66a2a13095e1604e8648a8c08__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19538:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19552:4:10",
														"type": ""
													}
												],
												"src": "19387:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19780:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19797:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19804:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19809:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19800:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19800:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19790:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19790:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19790:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19837:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19840:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19830:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19830:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19830:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19861:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19864:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19854:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19854:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19748:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19932:116:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19942:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19957:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19960:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19953:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19953:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19942:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20020:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20022:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20022:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20022:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19991:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19984:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19984:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "19998:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "20005:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "20014:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "20001:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20001:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "19995:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19995:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "19981:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19981:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19974:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19974:45:10"
															},
															"nodeType": "YulIf",
															"src": "19971:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19911:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19914:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19920:7:10",
														"type": ""
													}
												],
												"src": "19880:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20117:358:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20127:16:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20142:1:10",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "20131:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20152:16:10",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "20161:7:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "20152:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20177:13:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "20185:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "20177:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20241:228:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "20286:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "20288:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20288:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "20288:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "20261:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "20275:1:10",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "20271:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20271:6:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "20279:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "20267:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20267:17:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "20258:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20258:27:10"
																		},
																		"nodeType": "YulIf",
																		"src": "20255:53:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "20347:29:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "20349:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "20362:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "20369:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "20358:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20358:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "20349:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "20328:8:10"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "20338:7:10"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "20324:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20324:22:10"
																		},
																		"nodeType": "YulIf",
																		"src": "20321:55:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20389:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "20401:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "20407:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "20397:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20397:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "20389:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20425:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "20441:7:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "20450:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "20437:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20437:22:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "20425:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "20210:8:10"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "20220:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20207:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20207:21:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20229:3:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20203:3:10",
																"statements": []
															},
															"src": "20199:270:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "20081:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "20088:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "20101:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "20108:4:10",
														"type": ""
													}
												],
												"src": "20053:422:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20539:747:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20577:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20591:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "20600:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "20591:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "20614:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "20559:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20552:16:10"
															},
															"nodeType": "YulIf",
															"src": "20549:80:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20662:52:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20676:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "20685:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "20676:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "20699:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "20648:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20641:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20641:12:10"
															},
															"nodeType": "YulIf",
															"src": "20638:76:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20750:52:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "20764:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20773:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "20764:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "20787:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "20743:59:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20748:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20818:123:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20853:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "20855:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20855:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20855:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "20838:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20848:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "20835:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20835:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "20832:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "20888:25:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "20901:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20911:1:10",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "20897:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20897:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "20888:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "20926:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "20811:130:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20816:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "20730:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "20723:218:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21039:70:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21053:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "21066:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "21072:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "21062:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21062:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "21053:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "21094:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "20963:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20969:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20960:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20960:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "20977:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20987:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20974:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20974:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20956:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20956:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "21000:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21006:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "20997:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20997:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "21015:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21025:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "21012:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21012:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20993:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20993:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20953:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20953:77:10"
															},
															"nodeType": "YulIf",
															"src": "20950:159:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21118:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "21160:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "21166:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "21141:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21141:34:10"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "21122:7:10",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "21131:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21220:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21222:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21222:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21222:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "21190:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21207:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "21203:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21203:6:10"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "21211:6:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "21199:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21199:19:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21187:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21187:32:10"
															},
															"nodeType": "YulIf",
															"src": "21184:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21251:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "21264:7:10"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "21273:6:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "21260:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21260:20:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "21251:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "20510:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "20516:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "20529:5:10",
														"type": ""
													}
												],
												"src": "20480:806:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21361:61:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21371:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "21401:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "21407:8:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "21380:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21380:36:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "21371:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "21332:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "21338:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "21351:5:10",
														"type": ""
													}
												],
												"src": "21291:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21601:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21618:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21611:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21611:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21611:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21652:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21663:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21648:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21648:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21668:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21641:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21641:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21641:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21691:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21702:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21687:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21707:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21680:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21680:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21762:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21773:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21758:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21758:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21778:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21751:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21751:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21751:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21796:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21808:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21819:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21804:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21804:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21796:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21578:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21592:4:10",
														"type": ""
													}
												],
												"src": "21427:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22008:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22025:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22036:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22018:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22018:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22018:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22059:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22070:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22055:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22055:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22075:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22048:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22048:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22048:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22098:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22109:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22094:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22094:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22114:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22087:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22087:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22087:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22170:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22181:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22158:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21985:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21999:4:10",
														"type": ""
													}
												],
												"src": "21834:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22369:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22386:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22397:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22379:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22379:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22379:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22420:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22431:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22416:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22416:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22436:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22409:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22409:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22409:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22459:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22470:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22455:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22455:18:10"
																	},
																	{
																		"hexValue": "455243313136373a20637265617465206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22475:24:10",
																		"type": "",
																		"value": "ERC1167: create failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22448:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22448:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22448:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22509:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22521:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22532:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22517:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22517:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22509:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22346:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22360:4:10",
														"type": ""
													}
												],
												"src": "22195:346:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22592:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22623:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22644:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22651:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "22656:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "22647:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22647:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22637:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22637:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22637:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22688:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22691:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22681:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22681:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22681:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22716:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22719:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22709:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22709:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22709:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22612:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22605:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22605:9:10"
															},
															"nodeType": "YulIf",
															"src": "22602:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22743:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22752:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22755:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "22748:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22748:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22743:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22577:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22580:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22586:1:10",
														"type": ""
													}
												],
												"src": "22546:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22817:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22827:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22839:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22842:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22835:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22835:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22827:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22868:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22870:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22870:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22870:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "22859:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22865:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22856:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22856:11:10"
															},
															"nodeType": "YulIf",
															"src": "22853:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22799:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22802:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22808:4:10",
														"type": ""
													}
												],
												"src": "22768:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22949:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22959:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22970:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22973:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22966:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22966:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "22959:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22998:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23000:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23000:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23000:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22990:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "22993:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22987:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22987:10:10"
															},
															"nodeType": "YulIf",
															"src": "22984:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22932:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22935:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "22941:3:10",
														"type": ""
													}
												],
												"src": "22901:125:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_2800() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0140)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_struct_ClaimInfo(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x60) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n        mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_struct_DexInfo(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xc0) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        let value_1 := calldataload(headStart)\n        validator_revert_bool(value_1)\n        mstore(memPtr, value_1)\n        let value_2 := calldataload(add(headStart, 32))\n        validator_revert_address(value_2)\n        mstore(add(memPtr, 32), value_2)\n        let value_3 := calldataload(add(headStart, 64))\n        validator_revert_address(value_3)\n        mstore(add(memPtr, 64), value_3)\n        mstore(add(memPtr, 96), calldataload(add(headStart, 96)))\n        mstore(add(memPtr, 128), calldataload(add(headStart, 128)))\n        mstore(add(memPtr, 160), calldataload(add(headStart, 160)))\n    }\n    function abi_decode_struct_FeeSystem(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_struct_SocialLinks(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x0140) { revert(0, 0) }\n        value := allocate_memory_2800()\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(headStart, offset), end))\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string(add(headStart, offset_1), end))\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string(add(headStart, offset_2), end))\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(headStart, offset_3), end))\n        let offset_4 := calldataload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string(add(headStart, offset_4), end))\n        let offset_5 := calldataload(add(headStart, 160))\n        if gt(offset_5, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string(add(headStart, offset_5), end))\n        let offset_6 := calldataload(add(headStart, 192))\n        if gt(offset_6, _1) { revert(0, 0) }\n        mstore(add(value, 192), abi_decode_string(add(headStart, offset_6), end))\n        let offset_7 := calldataload(add(headStart, 224))\n        if gt(offset_7, _1) { revert(0, 0) }\n        mstore(add(value, 224), abi_decode_string(add(headStart, offset_7), end))\n        let _2 := 256\n        let offset_8 := calldataload(add(headStart, _2))\n        if gt(offset_8, _1) { revert(0, 0) }\n        mstore(add(value, _2), abi_decode_string(add(headStart, offset_8), end))\n        let _3 := 288\n        let offset_9 := calldataload(add(headStart, _3))\n        if gt(offset_9, _1) { revert(0, 0) }\n        mstore(add(value, _3), abi_decode_string(add(headStart, offset_9), end))\n    }\n    function abi_decode_tuple_t_struct$_LaunchpadInfo_$1610_memory_ptrt_struct$_ClaimInfo_$1617_memory_ptrt_struct$_DexInfo_$1630_memory_ptrt_struct$_FeeSystem_$1707_memory_ptrt_struct$_SocialLinks_$1752_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 736) { revert(0, 0) }\n        let _2 := 0x0160\n        if slt(_1, _2) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address(headStart))\n        mstore(add(value, 32), abi_decode_address(add(headStart, 32)))\n        mstore(add(value, 64), calldataload(add(headStart, 64)))\n        mstore(add(value, 96), calldataload(add(headStart, 96)))\n        mstore(add(value, 128), calldataload(add(headStart, 128)))\n        mstore(add(value, 160), calldataload(add(headStart, 160)))\n        mstore(add(value, 192), calldataload(add(headStart, 192)))\n        mstore(add(value, 224), calldataload(add(headStart, 224)))\n        let _3 := 256\n        mstore(add(value, _3), calldataload(add(headStart, _3)))\n        let _4 := 288\n        mstore(add(value, _4), calldataload(add(headStart, _4)))\n        let _5 := 320\n        mstore(add(value, _5), calldataload(add(headStart, _5)))\n        value0 := value\n        value1 := abi_decode_struct_ClaimInfo(add(headStart, _2), dataEnd)\n        value2 := abi_decode_struct_DexInfo(add(headStart, 448), dataEnd)\n        value3 := abi_decode_struct_FeeSystem(add(headStart, 640), dataEnd)\n        let offset := calldataload(add(headStart, 704))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_struct_SocialLinks(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_ILaunchpad_$1574__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_contract$_ILaunchpad_$1574_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_CalculateTokenInput_$1731_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 224)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n        mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n        mstore(add(memPtr, 96), calldataload(add(headStart, 96)))\n        mstore(add(memPtr, 128), calldataload(add(headStart, 128)))\n        mstore(add(memPtr, 160), calldataload(add(headStart, 160)))\n        mstore(add(memPtr, 192), calldataload(add(headStart, 192)))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_b91dc6979b3010cccd811b0aab4381cf4a75f22b4396ee3e49079bff0b514fb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"LauchpadFactory: Can not create \")\n        mstore(add(headStart, 96), \"launchpad now!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c36b3e31db1859d356e014d0458bf608b52a4d51c5d7a20c308eb171769be412__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LauchpadFactory: Not enough fee!\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_struct_ClaimInfo(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n    }\n    function abi_encode_struct_DexInfo(value, pos)\n    {\n        mstore(pos, iszero(iszero(mload(value))))\n        let memberValue0 := mload(add(value, 0x20))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(pos, 0x20), and(memberValue0, _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n    }\n    function abi_encode_struct_FeeSystem(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_struct_SettingAccount(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_struct_SocialLinks(value, pos) -> end\n    {\n        let _1 := 0x0140\n        let memberValue0 := mload(value)\n        mstore(pos, _1)\n        let tail := abi_encode_string(memberValue0, add(pos, _1))\n        let memberValue0_1 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_1, tail)\n        let memberValue0_2 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), sub(tail_1, pos))\n        let tail_2 := abi_encode_string(memberValue0_2, tail_1)\n        let memberValue0_3 := mload(add(value, 0x60))\n        mstore(add(pos, 0x60), sub(tail_2, pos))\n        let tail_3 := abi_encode_string(memberValue0_3, tail_2)\n        let memberValue0_4 := mload(add(value, 0x80))\n        mstore(add(pos, 0x80), sub(tail_3, pos))\n        let tail_4 := abi_encode_string(memberValue0_4, tail_3)\n        let memberValue0_5 := mload(add(value, 0xa0))\n        mstore(add(pos, 0xa0), sub(tail_4, pos))\n        let tail_5 := abi_encode_string(memberValue0_5, tail_4)\n        let memberValue0_6 := mload(add(value, 0xc0))\n        mstore(add(pos, 0xc0), sub(tail_5, pos))\n        let tail_6 := abi_encode_string(memberValue0_6, tail_5)\n        let memberValue0_7 := mload(add(value, 0xe0))\n        mstore(add(pos, 0xe0), sub(tail_6, pos))\n        let tail_7 := abi_encode_string(memberValue0_7, tail_6)\n        let _2 := 0x0100\n        let memberValue0_8 := mload(add(value, _2))\n        mstore(add(pos, _2), sub(tail_7, pos))\n        let tail_8 := abi_encode_string(memberValue0_8, tail_7)\n        let _3 := 0x0120\n        let memberValue0_9 := mload(add(value, _3))\n        mstore(add(pos, _3), sub(tail_8, pos))\n        end := abi_encode_string(memberValue0_9, tail_8)\n    }\n    function abi_encode_tuple_t_struct$_LaunchpadInfo_$1610_memory_ptr_t_struct$_ClaimInfo_$1617_memory_ptr_t_struct$_DexInfo_$1630_memory_ptr_t_struct$_FeeSystem_$1707_memory_ptr_t_struct$_SettingAccount_$1716_memory_ptr_t_struct$_SocialLinks_$1752_memory_ptr_t_uint256_t_uint256__to_t_struct$_LaunchpadInfo_$1610_memory_ptr_t_struct$_ClaimInfo_$1617_memory_ptr_t_struct$_DexInfo_$1630_memory_ptr_t_struct$_FeeSystem_$1707_memory_ptr_t_struct$_SettingAccount_$1716_memory_ptr_t_struct$_SocialLinks_$1752_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 928\n        abi_encode_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_address(memberValue0, add(headStart, 0x20))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _2 := 0x0100\n        mstore(add(headStart, _2), mload(add(value0, _2)))\n        let _3 := 0x0120\n        mstore(add(headStart, _3), mload(add(value0, _3)))\n        let _4 := 0x0140\n        mstore(add(headStart, _4), mload(add(value0, _4)))\n        abi_encode_struct_ClaimInfo(value1, add(headStart, 352))\n        abi_encode_struct_DexInfo(value2, add(headStart, 448))\n        abi_encode_struct_FeeSystem(value3, add(headStart, 640))\n        abi_encode_struct_SettingAccount(value4, add(headStart, 704))\n        mstore(add(headStart, 832), _1)\n        tail := abi_encode_struct_SocialLinks(value5, add(headStart, _1))\n        mstore(add(headStart, 864), value6)\n        mstore(add(headStart, 896), value7)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_f69acb569616da6a789bd9bf5ffc92e7dfaef4243921209176d9c5eff3536fc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"LauchpadFactory: Insufficient Ba\")\n        mstore(add(headStart, 96), \"lance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_cc10b7abfe5bd4c3d2a563f64bae28c5c94da496067cf76ac1be5c0a5b6be5bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"LauchpadFactory: Insufficient Al\")\n        mstore(add(headStart, 96), \"lowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_2321a2763116fb3d328da05a5143f1d4741d74e66a2a13095e1604e8648a8c08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LauchpadFactory: transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85DC3004 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA96DF743 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA96DF743 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xB6B7913E EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC06CA1DD EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xD9EB5947 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xE82BEF29 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85DC3004 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x892F78FA EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8A9B66CC EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x9352DACE EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5A416A36 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x5A416A36 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x640F82F3 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x6DE944DC EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23FA495A EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x49A1F14B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x51AE878F EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x53ACA078 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x58E5BC88 EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0xADA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0xCE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x40C JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A2043616E206E6F742063726561746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6C61756E6368706164206E6F7721 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A204E6F7420656E6F7567682066656521 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x4DA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x3 SLOAD DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 SLOAD DUP3 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x4 SLOAD DUP3 AND PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP9 MLOAD SWAP2 DUP10 ADD MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x12 SWAP2 AND ISZERO PUSH2 0x58D JUMPI DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP1 DUP12 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x80 DUP1 DUP13 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP14 ADD MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP9 ADD MLOAD DUP4 DUP4 ADD MSTORE DUP8 MLOAD DUP2 DUP4 ADD MSTORE DUP9 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 DUP8 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH2 0x5EA DUP4 PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x607 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x57801E6F DUP14 DUP14 DUP14 DUP14 DUP13 DUP15 DUP10 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x94C JUMPI DUP12 MLOAD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST LT ISZERO PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A20496E73756666696369656E74204261 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C616E6365 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46B JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xDD62ED3E CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST LT ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A20496E73756666696369656E7420416C PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6C6F77616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756368706164466163746F72793A207472616E73666572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST POP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE SWAP1 DUP3 KECCAK256 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP1 SWAP3 AND DUP4 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH32 0xDA2D0D8F4060E08DD20F6FB6AD959F9920958220CC60733DB44068DB43A02601 SWAP2 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FF PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH1 0x64 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xA42 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xACE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE2 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xAEC PUSH1 0x0 PUSH2 0xEB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB20 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBF0 JUMPI DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xC19 PUSH2 0xC00 DUP4 PUSH1 0xA PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0xC13 SWAP2 PUSH2 0xF05 JUMP JUMPDEST SWAP1 PUSH2 0xF1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC3A PUSH2 0x2710 PUSH2 0xC13 DUP9 PUSH1 0x60 ADD MLOAD DUP6 PUSH2 0xF05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC5F PUSH2 0x2710 PUSH2 0xC13 DUP10 PUSH1 0x80 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0xF05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC7A DUP3 DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xF26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9B PUSH2 0x2710 PUSH2 0xC13 DUP12 PUSH1 0xA0 ADD MLOAD DUP6 PUSH2 0xF05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCBD PUSH2 0xCAD DUP9 PUSH1 0xA PUSH2 0x1990 JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MLOAD PUSH2 0xC13 SWAP1 DUP6 SWAP1 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCD5 DUP3 PUSH2 0xCCF DUP10 DUP10 PUSH2 0xF32 JUMP JUMPDEST SWAP1 PUSH2 0xF32 JUMP JUMPDEST SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD20 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD50 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46B JUMP JUMPDEST PUSH2 0xDBE DUP2 PUSH2 0xEB5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP3 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP3 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP3 DUP5 PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xEB0 DUP2 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1010 JUMPI PUSH2 0x1010 PUSH2 0xF57 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x107A JUMPI PUSH2 0x107A PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 CALLDATALOAD PUSH2 0x108B DUP2 PUSH2 0x1037 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x109B DUP2 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH2 0x10AE DUP2 PUSH2 0xFBB JUMP JUMPDEST DUP1 PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x110F JUMPI PUSH2 0x110F PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x113A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x117D JUMPI PUSH2 0x117D PUSH2 0xF57 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D1 PUSH2 0xF6D JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F7 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1219 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123E DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1263 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1288 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12AD DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D2 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F7 DUP6 DUP4 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 POP DUP2 DUP5 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131E DUP7 DUP3 DUP8 ADD PUSH2 0x1129 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP PUSH2 0x120 SWAP2 POP DUP2 DUP5 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1129 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x2E0 DUP2 SLT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 DUP1 DUP3 SLT ISZERO PUSH2 0x137C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1384 PUSH2 0xF97 JUMP JUMPDEST SWAP2 POP PUSH2 0x138F DUP9 PUSH2 0xFD0 JUMP JUMPDEST DUP3 MSTORE PUSH2 0x139D PUSH1 0x20 DUP10 ADD PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP9 ADD CALLDATALOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP10 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP10 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP10 ADD CALLDATALOAD DUP2 DUP5 ADD MSTORE POP DUP2 SWAP7 POP PUSH2 0x1411 DUP10 DUP3 DUP11 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP6 POP POP POP PUSH2 0x1423 DUP8 PUSH2 0x1C0 DUP9 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP3 POP PUSH2 0x1433 DUP8 PUSH2 0x280 DUP9 ADD PUSH2 0x10DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145C DUP9 DUP3 DUP10 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0xFBB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14CE JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14A9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x150F JUMPI PUSH2 0x150F PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH2 0x151D DUP2 PUSH2 0xFBB JUMP JUMPDEST DUP1 DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1594 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x15E6 DUP3 DUP7 ADD DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1600 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x161A DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1634 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x164E DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1668 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1682 DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x169C DUP3 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP6 DUP4 SUB DUP3 DUP8 ADD MSTORE PUSH2 0x16B7 DUP4 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP6 DUP4 SUB DUP3 DUP8 ADD MSTORE PUSH2 0x16D3 DUP4 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x3A0 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x1709 PUSH1 0x20 DUP6 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP12 DUP2 ADD MLOAD DUP5 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xC0 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x140 DUP1 DUP14 ADD MLOAD SWAP1 DUP6 ADD MSTORE DUP11 MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE DUP11 ADD MLOAD PUSH2 0x1A0 DUP5 ADD MSTORE DUP9 MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x1E0 DUP6 ADD MSTORE PUSH1 0x40 DUP11 ADD MLOAD AND PUSH2 0x200 DUP5 ADD MSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x220 DUP5 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x240 DUP5 ADD MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH2 0x260 DUP5 ADD MSTORE DUP8 MLOAD PUSH2 0x280 DUP5 ADD MSTORE PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x2A0 DUP5 ADD MSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x2C0 DUP6 ADD MSTORE PUSH1 0x20 DUP9 ADD MLOAD DUP2 AND PUSH2 0x2E0 DUP6 ADD MSTORE PUSH1 0x40 DUP9 ADD MLOAD DUP2 AND PUSH2 0x300 DUP6 ADD MSTORE PUSH1 0x60 DUP9 ADD MLOAD AND PUSH2 0x320 DUP5 ADD MSTORE DUP1 PUSH2 0x340 DUP5 ADD MSTORE PUSH2 0x182F DUP2 DUP5 ADD DUP8 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x360 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH2 0x380 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x185B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1486 DUP2 PUSH2 0x1037 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x18E7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CD PUSH2 0x187F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x18DA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x18B1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18FE JUMPI POP PUSH1 0x1 PUSH2 0xF14 JUMP JUMPDEST DUP2 PUSH2 0x190B JUMPI POP PUSH1 0x0 PUSH2 0xF14 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1921 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x192B JUMPI PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF14 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193C PUSH2 0x187F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xF14 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x196A JUMPI POP DUP2 DUP2 EXP PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x1974 DUP4 DUP4 PUSH2 0x18AC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1988 PUSH2 0x187F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP4 DUP4 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x187F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x187F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xC58BEC4371EDBB1BA311619CA191BD1C075ABD487966F34B PUSH32 0x599462CDFE1064736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "437:8200:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2788:92;;;;;;;;;;-1:-1:-1;2788:92:6;;;;;:::i;:::-;;:::i;:::-;;4782:3428;;;;;;:::i;:::-;;:::i;2888:163::-;;;;;;;;;;-1:-1:-1;2888:163:6;;;;;:::i;:::-;;:::i;1137:33::-;;;;;;;;;;-1:-1:-1;1137:33:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;7920:32:10;;;7902:51;;7890:2;7875:18;1137:33:6;;;;;;;;554:36;;;;;;;;;;;;585:5;554:36;;;;;8110:25:10;;;8098:2;8083:18;554:36:6;7964:177:10;2548:108:6;;;;;;;;;;-1:-1:-1;2548:108:6;;;;;:::i;:::-;;:::i;1022:29::-;;;;;;;;;;-1:-1:-1;1022:29:6;;;;-1:-1:-1;;;;;1022:29:6;;;897:26;;;;;;;;;;-1:-1:-1;897:26:6;;;;-1:-1:-1;;;;;897:26:6;;;8478:154;;;;;;;;;;-1:-1:-1;8478:154:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1824:101:0:-;;;;;;;;;;;;;:::i;2664:116:6:-;;;;;;;;;;-1:-1:-1;2664:116:6;;;;;:::i;:::-;;:::i;2428:112::-;;;;;;;;;;-1:-1:-1;2428:112:6;;;;;:::i;:::-;;:::i;686:39::-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;3059:121:6;;;;;;;;;;-1:-1:-1;3059:121:6;;;;;:::i;:::-;;:::i;3649:1020::-;;;;;;;;;;-1:-1:-1;3649:1020:6;;;;;:::i;:::-;;:::i;:::-;;;;10757:25:10;;;10813:2;10798:18;;10791:34;;;;10730:18;3649:1020:6;10583:248:10;863:27:6;;;;;;;;;;-1:-1:-1;863:27:6;;;;-1:-1:-1;;;;;863:27:6;;;8271:120;;;;;;;;;;;;;:::i;599:22::-;;;;;;;;;;;;;;;;930:34;;;;;;;;;;-1:-1:-1;930:34:6;;;;-1:-1:-1;;;;;930:34:6;;;2074:198:0;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;2788:92:6:-;1094:13:0;:11;:13::i;:::-;2854:7:6::1;:18:::0;2788:92::o;4782:3428::-;5244:12;;-1:-1:-1;;;;;5244:12:6;:26;;;;:72;;-1:-1:-1;5291:11:6;;-1:-1:-1;;;;;5291:11:6;:25;;5244:72;5178:212;;;;-1:-1:-1;;;5178:212:6;;11262:2:10;5178:212:6;;;11244:21:10;11301:2;11281:18;;;11274:30;11340:34;11320:18;;;11313:62;-1:-1:-1;;;11391:18:10;;;11384:44;11445:19;;5178:212:6;;;;;;;;;5422:7;;5409:9;:20;;5401:65;;;;-1:-1:-1;;;5401:65:6;;11677:2:10;5401:65:6;;;11659:21:10;;;11696:18;;;11689:30;11755:34;11735:18;;;11728:62;11807:18;;5401:65:6;11475:356:10;5401:65:6;5620:53;5676:219;;;;;;;;5740:12;719:10:3;;640:96;5740:12:6;-1:-1:-1;;;;;5676:219:6;;;;;5799:12;;;;5676:219;;;;;;;;5838:11;;;;5676:219;;;;5869:11;;;;5676:219;;;;;;;;5947:13;;6016;;;;5620:275;;-1:-1:-1;5947:13:6;;5999:2;;6016:27;;6012:118;;6093:4;:13;;;-1:-1:-1;;;;;6079:37:6;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6060:58;;;;6012:118;6194:334;;;;;;;;6263:13;;;;;-1:-1:-1;;;;;6194:334:6;;;6295:16;;;;;6194:334;;;;-1:-1:-1;6330:12:6;;;;6194:334;;;;;;;6361:29;;;;6194:334;;;;6409:24;;6194:334;;;;6452:22;;;6194:334;;;;6493:20;;;;6194:334;;;;6142:49;;6620:22;6194:334;6620:15;:22::i;:::-;6721:14;;6597:45;;-1:-1:-1;6597:45:6;-1:-1:-1;6688:17:6;;6708:28;;-1:-1:-1;;;;;6721:14:6;6708:12;:28::i;:::-;6688:48;;6807:9;-1:-1:-1;;;;;6796:32:6;;6843:4;6862:9;6919:7;6941;6963:14;6992:11;7018:5;7038:17;;6796:270;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:1;7211:9;:13;7207:86;;;7249:11;;7241:40;;-1:-1:-1;;;;;7249:11:6;;;;7271:9;7241:40;;;;;7249:11;7241:40;7249:11;7241:40;7271:9;7249:11;7241:40;;;;;;;;;;;;;;;;;;;;;7207:86;7309:15;;7305:725;;7371:13;;7469:11;-1:-1:-1;;;;;7428:23:6;;;719:10:3;7428:37:6;;-1:-1:-1;;;;;;7428:37:6;;;;;;;-1:-1:-1;;;;;7920:32:10;;;7428:37:6;;;7902:51:10;7875:18;;7428:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;7402:151;;;;-1:-1:-1;;;7402:151:6;;17836:2:10;7402:151:6;;;17818:21:10;17875:2;17855:18;;;17848:30;17914:34;17894:18;;;17887:62;-1:-1:-1;;;17965:18:10;;;17958:35;18010:19;;7402:151:6;17634:401:10;7402:151:6;7671:11;-1:-1:-1;;;;;7594:23:6;;;719:10:3;7594:52:6;;-1:-1:-1;;;;;;7594:52:6;;;;;;;-1:-1:-1;;;;;18270:15:10;;;7594:52:6;;;18252:34:10;7640:4:6;18302:18:10;;;18295:43;18187:18;;7594:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:88;;7568:189;;;;-1:-1:-1;;;7568:189:6;;18551:2:10;7568:189:6;;;18533:21:10;18590:2;18570:18;;;18563:30;18629:34;18609:18;;;18602:62;-1:-1:-1;;;18680:18:10;;;18673:37;18727:19;;7568:189:6;18349:403:10;7568:189:6;-1:-1:-1;;;;;7800:21:6;;;719:10:3;7800:150:6;;-1:-1:-1;;;;;;7800:150:6;;;;;;;-1:-1:-1;;;;;19015:15:10;;;7800:150:6;;;18997:34:10;19067:15;;;19047:18;;;19040:43;19099:18;;;19092:34;;;18932:18;;7800:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7774:244;;;;-1:-1:-1;;;7774:244:6;;19589:2:10;7774:244:6;;;19571:21:10;;;19608:18;;;19601:30;19667:34;19647:18;;;19640:62;19719:18;;7774:244:6;19387:356:10;7774:244:6;7326:704;7305:725;8042:13;:41;;;;;;;;;;;;;-1:-1:-1;;;;;8042:41:6;;-1:-1:-1;;;;;;8042:41:6;;;;;;;;8111:10;-1:-1:-1;8095:27:6;;;:15;8042:41;8095:27;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;8170:32;;8042:41;;8170:32;;;5167:3043;;;;;;;4782:3428;;;;;:::o;2888:163::-;1094:13:0;:11;:13::i;:::-;2993:26:6::1;2994:18:::0;3016:3:::1;2993:26;:::i;:::-;2973:17;:46:::0;-1:-1:-1;2888:163:6:o;1137:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:33:6;;-1:-1:-1;1137:33:6;:::o;2548:108::-;1094:13:0;:11;:13::i;:::-;2622:11:6::1;:26:::0;;-1:-1:-1;;;;;;2622:26:6::1;-1:-1:-1::0;;;;;2622:26:6;;;::::1;::::0;;;::::1;::::0;;2548:108::o;8478:154::-;-1:-1:-1;;;;;8602:22:6;;;;;;:15;:22;;;;;;;;;8595:29;;;;;;;;;;;;;;;;;8547:36;;8595:29;;;8602:22;8595:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8595:29:6;;;;;;;;;;;;;;;;;;;;;;;8478:154;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2664:116:6:-;1094:13:0;:11;:13::i;:::-;2746:11:6::1;:26:::0;;-1:-1:-1;;;;;;2746:26:6::1;-1:-1:-1::0;;;;;2746:26:6;;;::::1;::::0;;;::::1;::::0;;2664:116::o;2428:112::-;1094:13:0;:11;:13::i;:::-;2504:12:6::1;:28:::0;;-1:-1:-1;;;;;;2504:28:6::1;-1:-1:-1::0;;;;;2504:28:6;;;::::1;::::0;;;::::1;::::0;;2428:112::o;3059:121::-;1094:13:0;:11;:13::i;:::-;3140:14:6::1;:32:::0;;-1:-1:-1;;;;;;3140:32:6::1;-1:-1:-1::0;;;;;3140:32:6;;;::::1;::::0;;;::::1;::::0;;3059:121::o;3649:1020::-;3835:14;;3762:7;;;;3818:2;;-1:-1:-1;;;;;3835:28:6;;3831:120;;3913:5;:14;;;-1:-1:-1;;;;;3899:38:6;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3880:59;;;;3831:120;3963:26;3992:68;4037:22;4043:16;4037:2;:22;:::i;:::-;4016:13;;;;3993:17;;;;:38;;:21;:38::i;:::-;3992:44;;:68::i;:::-;3963:97;;4073:22;4098:63;585:5;4099:51;4122:5;:27;;;4099:18;:22;;:51;;;;:::i;4098:63::-;4073:88;;4174:22;4199:53;585:5;4200:41;4218:5;:22;;;4200:5;:13;;;:17;;:41;;;;:::i;4199:53::-;4174:78;;4263:14;4280:33;4298:14;4280:5;:13;;;:17;;:33;;;;:::i;:::-;4263:50;;4324:29;4356:44;585:5;4357:32;4368:5;:20;;;4357:6;:10;;:32;;;;:::i;4356:44::-;4324:76;-1:-1:-1;4413:28:6;4444:75;4496:22;4502:16;4496:2;:22;:::i;:::-;4471:18;;;;4445:45;;:21;;:25;:45::i;4444:75::-;4413:106;-1:-1:-1;4532:14:6;4549:64;4413:106;4549:38;:18;4572:14;4549:22;:38::i;:::-;:42;;:64::i;:::-;4532:81;4640:20;;-1:-1:-1;3649:1020:6;;-1:-1:-1;;;;;;;;;3649:1020:6:o;8271:120::-;8321:30;8370:13;8363:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8363:20:6;;;;;;;;;;;;;;;;;;;;;;;8271:120;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;21629:2:10;2154:73:0::1;::::0;::::1;21611:21:10::0;21668:2;21648:18;;;21641:30;21707:34;21687:18;;;21680:62;-1:-1:-1;;;21758:18:10;;;21751:36;21804:19;;2154:73:0::1;21427:402:10::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;22036:2:10;1414:68:0;;;22018:21:10;;;22055:18;;;22048:30;22114:34;22094:18;;;22087:62;22166:18;;1414:68:0;21834:356:10;997:770:5;1054:16;1391:48;1373:14;1367:4;1363:25;1357:4;1353:36;1350:90;1344:4;1337:104;1600:32;1583:14;1577:4;1573:25;1570:63;1564:4;1557:77;1676:4;1670;1667:1;1660:21;1648:33;-1:-1:-1;;;;;;1710:22:5;;1702:57;;;;-1:-1:-1;;;1702:57:5;;22397:2:10;1702:57:5;;;22379:21:10;22436:2;22416:18;;;22409:30;-1:-1:-1;;;22455:18:10;;;22448:52;22517:18;;1702:57:5;22195:346:10;1702:57:5;997:770;;;:::o;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;3465:96:4:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;;3465:96;;;;;:::o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;14:180:10:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:10;;14:180;-1:-1:-1;14:180:10:o;199:127::-;260:10;255:3;251:20;248:1;241:31;291:4;288:1;281:15;315:4;312:1;305:15;331:255;403:2;397:9;445:6;433:19;;482:18;467:34;;503:22;;;464:62;461:88;;;529:18;;:::i;:::-;565:2;558:22;331:255;:::o;591:250::-;658:2;652:9;700:6;688:19;;737:18;722:34;;758:22;;;719:62;716:88;;;784:18;;:::i;846:131::-;-1:-1:-1;;;;;921:31:10;;911:42;;901:70;;967:1;964;957:12;982:134;1050:20;;1079:31;1050:20;1079:31;:::i;1121:540::-;1177:5;1225:4;1213:9;1208:3;1204:19;1200:30;1197:50;;;1243:1;1240;1233:12;1197:50;1276:2;1270:9;1318:4;1310:6;1306:17;1389:6;1377:10;1374:22;1353:18;1341:10;1338:34;1335:62;1332:88;;;1400:18;;:::i;:::-;1440:10;1436:2;1429:22;;1469:6;1460:15;;1512:9;1499:23;1491:6;1484:39;1584:2;1573:9;1569:18;1556:32;1551:2;1543:6;1539:15;1532:57;1650:2;1639:9;1635:18;1622:32;1617:2;1609:6;1605:15;1598:57;;1121:540;;;;:::o;1666:118::-;1752:5;1745:13;1738:21;1731:5;1728:32;1718:60;;1774:1;1771;1764:12;1789:956;1843:5;1891:4;1879:9;1874:3;1870:19;1866:30;1863:50;;;1909:1;1906;1899:12;1863:50;1942:2;1936:9;1984:4;1976:6;1972:17;2055:6;2043:10;2040:22;2019:18;2007:10;2004:34;2001:62;1998:88;;;2066:18;;:::i;:::-;2102:2;2095:22;2135:6;-1:-1:-1;2135:6:10;2165:23;;2197:30;2165:23;2197:30;:::i;:::-;2236:23;;2311:2;2296:18;;2283:32;2324:33;2283:32;2324:33;:::i;:::-;2385:2;2373:15;;2366:32;2450:2;2435:18;;2422:32;2463:33;2422:32;2463:33;:::i;:::-;2529:7;2524:2;2516:6;2512:15;2505:32;;2598:2;2587:9;2583:18;2570:32;2565:2;2557:6;2553:15;2546:57;2665:3;2654:9;2650:19;2637:33;2631:3;2623:6;2619:16;2612:59;2733:3;2722:9;2718:19;2705:33;2699:3;2691:6;2687:16;2680:59;;1789:956;;;;:::o;2750:478::-;2806:5;2854:4;2842:9;2837:3;2833:19;2829:30;2826:50;;;2872:1;2869;2862:12;2826:50;2905:4;2899:11;2949:4;2941:6;2937:17;3020:6;3008:10;3005:22;2984:18;2972:10;2969:34;2966:62;2963:88;;;3031:18;;:::i;:::-;3067:4;3060:24;3132:23;;3117:39;;3217:2;3202:18;;;3189:32;3172:15;;;3165:57;;;;-1:-1:-1;3102:6:10;2750:478;-1:-1:-1;2750:478:10:o;3233:719::-;3276:5;3329:3;3322:4;3314:6;3310:17;3306:27;3296:55;;3347:1;3344;3337:12;3296:55;3383:6;3370:20;3409:18;3446:2;3442;3439:10;3436:36;;;3452:18;;:::i;:::-;3527:2;3521:9;3495:2;3581:13;;-1:-1:-1;;3577:22:10;;;3601:2;3573:31;3569:40;3557:53;;;3625:18;;;3645:22;;;3622:46;3619:72;;;3671:18;;:::i;:::-;3711:10;3707:2;3700:22;3746:2;3738:6;3731:18;3792:3;3785:4;3780:2;3772:6;3768:15;3764:26;3761:35;3758:55;;;3809:1;3806;3799:12;3758:55;3873:2;3866:4;3858:6;3854:17;3847:4;3839:6;3835:17;3822:54;3920:1;3913:4;3908:2;3900:6;3896:15;3892:26;3885:37;3940:6;3931:15;;;;;;3233:719;;;;:::o;3957:2071::-;4015:5;4063:6;4051:9;4046:3;4042:19;4038:32;4035:52;;;4083:1;4080;4073:12;4035:52;4105:22;;:::i;:::-;4096:31;;4163:9;4150:23;4192:18;4233:2;4225:6;4222:14;4219:34;;;4249:1;4246;4239:12;4219:34;4276:46;4318:3;4309:6;4298:9;4294:22;4276:46;:::i;:::-;4269:5;4262:61;4376:2;4365:9;4361:18;4348:32;4332:48;;4405:2;4395:8;4392:16;4389:36;;;4421:1;4418;4411:12;4389:36;4457:48;4501:3;4490:8;4479:9;4475:24;4457:48;:::i;:::-;4452:2;4445:5;4441:14;4434:72;4559:2;4548:9;4544:18;4531:32;4515:48;;4588:2;4578:8;4575:16;4572:36;;;4604:1;4601;4594:12;4572:36;4640:48;4684:3;4673:8;4662:9;4658:24;4640:48;:::i;:::-;4635:2;4628:5;4624:14;4617:72;4742:2;4731:9;4727:18;4714:32;4698:48;;4771:2;4761:8;4758:16;4755:36;;;4787:1;4784;4777:12;4755:36;4823:48;4867:3;4856:8;4845:9;4841:24;4823:48;:::i;:::-;4818:2;4811:5;4807:14;4800:72;4925:3;4914:9;4910:19;4897:33;4881:49;;4955:2;4945:8;4942:16;4939:36;;;4971:1;4968;4961:12;4939:36;5008:48;5052:3;5041:8;5030:9;5026:24;5008:48;:::i;:::-;5002:3;4995:5;4991:15;4984:73;5110:3;5099:9;5095:19;5082:33;5066:49;;5140:2;5130:8;5127:16;5124:36;;;5156:1;5153;5146:12;5124:36;5193:48;5237:3;5226:8;5215:9;5211:24;5193:48;:::i;:::-;5187:3;5180:5;5176:15;5169:73;5295:3;5284:9;5280:19;5267:33;5251:49;;5325:2;5315:8;5312:16;5309:36;;;5341:1;5338;5331:12;5309:36;5378:48;5422:3;5411:8;5400:9;5396:24;5378:48;:::i;:::-;5372:3;5365:5;5361:15;5354:73;5480:3;5469:9;5465:19;5452:33;5436:49;;5510:2;5500:8;5497:16;5494:36;;;5526:1;5523;5516:12;5494:36;5563:48;5607:3;5596:8;5585:9;5581:24;5563:48;:::i;:::-;5557:3;5550:5;5546:15;5539:73;5631:3;5621:13;;5687:2;5676:9;5672:18;5659:32;5716:2;5706:8;5703:16;5700:36;;;5732:1;5729;5722:12;5700:36;5768:48;5812:3;5801:8;5790:9;5786:24;5768:48;:::i;:::-;5763:2;5756:5;5752:14;5745:72;;5836:3;5826:13;;5892:2;5881:9;5877:18;5864:32;5921:2;5911:8;5908:16;5905:36;;;5937:1;5934;5927:12;5905:36;5973:48;6017:3;6006:8;5995:9;5991:24;5973:48;:::i;:::-;5968:2;5961:5;5957:14;5950:72;;;;3957:2071;;;;:::o;6033:1699::-;6267:6;6275;6283;6291;6299;6343:9;6334:7;6330:23;6373:3;6369:2;6365:12;6362:32;;;6390:1;6387;6380:12;6362:32;6413:6;6439:2;6435;6431:11;6428:31;;;6455:1;6452;6445:12;6428:31;6481:17;;:::i;:::-;6468:30;;6521:29;6540:9;6521:29;:::i;:::-;6514:5;6507:44;6583:38;6617:2;6606:9;6602:18;6583:38;:::i;:::-;6578:2;6571:5;6567:14;6560:62;6682:2;6671:9;6667:18;6654:32;6649:2;6642:5;6638:14;6631:56;6747:2;6736:9;6732:18;6719:32;6714:2;6707:5;6703:14;6696:56;6813:3;6802:9;6798:19;6785:33;6779:3;6772:5;6768:15;6761:58;6880:3;6869:9;6865:19;6852:33;6846:3;6839:5;6835:15;6828:58;6947:3;6936:9;6932:19;6919:33;6913:3;6906:5;6902:15;6895:58;7014:3;7003:9;6999:19;6986:33;6980:3;6973:5;6969:15;6962:58;7039:3;7102:2;7091:9;7087:18;7074:32;7069:2;7062:5;7058:14;7051:56;;7126:3;7189:2;7178:9;7174:18;7161:32;7156:2;7149:5;7145:14;7138:56;;7213:3;7276:2;7265:9;7261:18;7248:32;7243:2;7236:5;7232:14;7225:56;;7300:5;7290:15;;7324:56;7372:7;7367:2;7356:9;7352:18;7324:56;:::i;:::-;7314:66;;;;7399:55;7446:7;7440:3;7429:9;7425:19;7399:55;:::i;:::-;7389:65;;7473:57;7522:7;7516:3;7505:9;7501:19;7473:57;:::i;:::-;7463:67;;7581:3;7570:9;7566:19;7553:33;7609:18;7601:6;7598:30;7595:50;;;7641:1;7638;7631:12;7595:50;7664:62;7718:7;7709:6;7698:9;7694:22;7664:62;:::i;:::-;7654:72;;;6033:1699;;;;;;;;:::o;8146:247::-;8205:6;8258:2;8246:9;8237:7;8233:23;8229:32;8226:52;;;8274:1;8271;8264:12;8226:52;8313:9;8300:23;8332:31;8357:5;8332:31;:::i;:::-;8382:5;8146:247;-1:-1:-1;;;8146:247:10:o;8715:677::-;8905:2;8957:21;;;9027:13;;8930:18;;;9049:22;;;8876:4;;8905:2;9128:15;;;;9102:2;9087:18;;;8876:4;9171:195;9185:6;9182:1;9179:13;9171:195;;;9250:13;;-1:-1:-1;;;;;9246:39:10;9234:52;;9341:15;;;;9306:12;;;;9282:1;9200:9;9171:195;;;-1:-1:-1;9383:3:10;;8715:677;-1:-1:-1;;;;;;8715:677:10:o;9657:921::-;9753:6;9806:3;9794:9;9785:7;9781:23;9777:33;9774:53;;;9823:1;9820;9813:12;9774:53;9856:2;9850:9;9898:3;9890:6;9886:16;9968:6;9956:10;9953:22;9932:18;9920:10;9917:34;9914:62;9911:88;;;9979:18;;:::i;:::-;10015:2;10008:22;10052:23;;10084:31;10052:23;10084:31;:::i;:::-;10139:5;10131:6;10124:21;;10206:2;10195:9;10191:18;10178:32;10173:2;10165:6;10161:15;10154:57;10272:2;10261:9;10257:18;10244:32;10239:2;10231:6;10227:15;10220:57;10338:2;10327:9;10323:18;10310:32;10305:2;10297:6;10293:15;10286:57;10405:3;10394:9;10390:19;10377:33;10371:3;10363:6;10359:16;10352:59;10473:3;10462:9;10458:19;10445:33;10439:3;10431:6;10427:16;10420:59;10541:3;10530:9;10526:19;10513:33;10507:3;10499:6;10495:16;10488:59;10566:6;10556:16;;;9657:921;;;;:::o;11836:273::-;11904:6;11957:2;11945:9;11936:7;11932:23;11928:32;11925:52;;;11973:1;11970;11963:12;11925:52;12005:9;11999:16;12055:4;12048:5;12044:16;12037:5;12034:27;12024:55;;12075:1;12072;12065:12;13316:423;13358:3;13396:5;13390:12;13423:6;13418:3;13411:19;13448:1;13458:162;13472:6;13469:1;13466:13;13458:162;;;13534:4;13590:13;;;13586:22;;13580:29;13562:11;;;13558:20;;13551:59;13487:12;13458:162;;;13462:3;13665:1;13658:4;13649:6;13644:3;13640:16;13636:27;13629:38;13728:4;13721:2;13717:7;13712:2;13704:6;13700:15;13696:29;13691:3;13687:39;13683:50;13676:57;;;13316:423;;;;:::o;13744:1759::-;13798:3;13826:6;13867:5;13861:12;13894:2;13889:3;13882:15;13918:45;13959:2;13954:3;13950:12;13936;13918:45;:::i;:::-;13906:57;;;14011:4;14004:5;14000:16;13994:23;14059:3;14053:4;14049:14;14042:4;14037:3;14033:14;14026:38;14087:39;14121:4;14105:14;14087:39;:::i;:::-;14073:53;;;14174:4;14167:5;14163:16;14157:23;14224:3;14216:6;14212:16;14205:4;14200:3;14196:14;14189:40;14252:41;14286:6;14270:14;14252:41;:::i;:::-;14238:55;;;14341:4;14334:5;14330:16;14324:23;14391:3;14383:6;14379:16;14372:4;14367:3;14363:14;14356:40;14419:41;14453:6;14437:14;14419:41;:::i;:::-;14405:55;;;14508:4;14501:5;14497:16;14491:23;14558:3;14550:6;14546:16;14539:4;14534:3;14530:14;14523:40;14586:41;14620:6;14604:14;14586:41;:::i;:::-;14572:55;;;14675:4;14668:5;14664:16;14658:23;14725:3;14717:6;14713:16;14706:4;14701:3;14697:14;14690:40;14753:41;14787:6;14771:14;14753:41;:::i;:::-;14739:55;;;14842:4;14835:5;14831:16;14825:23;14892:3;14884:6;14880:16;14873:4;14868:3;14864:14;14857:40;14920:41;14954:6;14938:14;14920:41;:::i;:::-;14906:55;;;15009:4;15002:5;14998:16;14992:23;15059:3;15051:6;15047:16;15040:4;15035:3;15031:14;15024:40;15087:41;15121:6;15105:14;15087:41;:::i;:::-;15073:55;;;15147:6;15201:2;15194:5;15190:14;15184:21;15247:3;15239:6;15235:16;15230:2;15225:3;15221:12;15214:38;15275:41;15309:6;15293:14;15275:41;:::i;:::-;15261:55;;;;15335:6;15389:2;15382:5;15378:14;15372:21;15435:3;15427:6;15423:16;15418:2;15413:3;15409:12;15402:38;15456:41;15490:6;15474:14;15456:41;:::i;:::-;15449:48;13744:1759;-1:-1:-1;;;;;;13744:1759:10:o;15508:1932::-;16198:13;;-1:-1:-1;;;;;8464:31:10;8452:44;;16138:4;16167:3;16270:4;16262:6;16258:17;16252:24;16285:54;16333:4;16322:9;16318:20;16304:12;-1:-1:-1;;;;;8464:31:10;8452:44;;8398:104;16285:54;-1:-1:-1;16395:4:10;16383:17;;;16377:24;16355:20;;;16348:54;16458:4;16446:17;;;16440:24;16418:20;;;16411:54;16521:4;16509:17;;;16503:24;16481:20;;;16474:54;16584:4;16572:17;;;16566:24;16544:20;;;16537:54;16647:4;16635:17;;;16629:24;16607:20;;;16600:54;16710:4;16698:17;;;16692:24;16670:20;;;16663:54;16736:6;16784:15;;;16778:22;16758:18;;;16751:50;16820:6;16868:15;;;16862:22;16842:18;;;16835:50;16904:6;16952:15;;;16946:22;16926:18;;;16919:50;12189:12;;17029:3;17014:19;;12177:25;12251:4;12240:16;;12234:23;12218:14;;;12211:47;12296:16;;12290:23;12274:14;;;12267:47;12412:12;;12405:20;12398:28;17092:3;17077:19;;12386:41;12473:4;12462:16;;12456:23;-1:-1:-1;;;;;12549:21:10;;;12533:14;;;12526:45;12624:4;12613:16;;12607:23;12603:32;12587:14;;;12580:56;12685:4;12674:16;;12668:23;12652:14;;;12645:47;12741:4;12730:16;;12724:23;12708:14;;;12701:47;12506:3;12786:16;;12780:23;12764:14;;;12757:47;12890:12;;17157:3;17142:19;;12878:25;12952:4;12941:16;;12935:23;12919:14;;;12912:47;13092:12;;-1:-1:-1;;;;;13088:21:10;;;17227:3;17212:19;;13076:34;13163:4;13152:16;;13146:23;13142:32;;13126:14;;;13119:56;13228:4;13217:16;;13211:23;13207:32;;13191:14;;;13184:56;13293:4;13282:16;;13276:23;13272:32;13256:14;;;13249:56;17269:2;17263:3;17252:9;17248:19;17241:31;17289:57;17342:2;17331:9;17327:18;17319:6;17289:57;:::i;:::-;17377:3;17362:19;;17355:35;;;;-1:-1:-1;;17421:3:10;17406:19;17399:35;17281:65;15508:1932;-1:-1:-1;;;;;;15508:1932:10:o;17445:184::-;17515:6;17568:2;17556:9;17547:7;17543:23;17539:32;17536:52;;;17584:1;17581;17574:12;17536:52;-1:-1:-1;17607:16:10;;17445:184;-1:-1:-1;17445:184:10:o;19137:245::-;19204:6;19257:2;19245:9;19236:7;19232:23;19228:32;19225:52;;;19273:1;19270;19263:12;19225:52;19305:9;19299:16;19324:28;19346:5;19324:28;:::i;19748:127::-;19809:10;19804:3;19800:20;19797:1;19790:31;19840:4;19837:1;19830:15;19864:4;19861:1;19854:15;19880:168;19953:9;;;19984;;20001:15;;;19995:22;;19981:37;19971:71;;20022:18;;:::i;20053:422::-;20142:1;20185:5;20142:1;20199:270;20220:7;20210:8;20207:21;20199:270;;;20279:4;20275:1;20271:6;20267:17;20261:4;20258:27;20255:53;;;20288:18;;:::i;:::-;20338:7;20328:8;20324:22;20321:55;;;20358:16;;;;20321:55;20437:22;;;;20397:15;;;;20199:270;;;20203:3;20053:422;;;;;:::o;20480:806::-;20529:5;20559:8;20549:80;;-1:-1:-1;20600:1:10;20614:5;;20549:80;20648:4;20638:76;;-1:-1:-1;20685:1:10;20699:5;;20638:76;20730:4;20748:1;20743:59;;;;20816:1;20811:130;;;;20723:218;;20743:59;20773:1;20764:10;;20787:5;;;20811:130;20848:3;20838:8;20835:17;20832:43;;;20855:18;;:::i;:::-;-1:-1:-1;;20911:1:10;20897:16;;20926:5;;20723:218;;21025:2;21015:8;21012:16;21006:3;21000:4;20997:13;20993:36;20987:2;20977:8;20974:16;20969:2;20963:4;20960:12;20956:35;20953:77;20950:159;;;-1:-1:-1;21062:19:10;;;21094:5;;20950:159;21141:34;21166:8;21160:4;21141:34;:::i;:::-;21211:6;21207:1;21203:6;21199:19;21190:7;21187:32;21184:58;;;21222:18;;:::i;:::-;21260:20;;20480:806;-1:-1:-1;;;20480:806:10:o;21291:131::-;21351:5;21380:36;21407:8;21401:4;21380:36;:::i;22546:217::-;22586:1;22612;22602:132;;22656:10;22651:3;22647:20;22644:1;22637:31;22691:4;22688:1;22681:15;22719:4;22716:1;22709:15;22602:132;-1:-1:-1;22748:9:10;;22546:217::o;22768:128::-;22835:9;;;22856:11;;;22853:37;;;22870:18;;:::i;22901:125::-;22966:9;;;22987:10;;;22984:36;;;23000:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1336400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ZOOM()": "307",
								"allLaunchpads(uint256)": "4693",
								"calculateTokens((address,uint256,uint256,uint256,uint256,uint256,uint256))": "infinite",
								"deployLaunchpad((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256),(bool,address,address,uint256,uint256,uint256),(uint256,uint256),(string,string,string,string,string,string,string,string,string,string))": "infinite",
								"flatFee()": "2383",
								"fundAddress()": "2436",
								"implementation()": "2371",
								"owner()": "2409",
								"penaltyFeePercent()": "2362",
								"renounceOwnership()": "infinite",
								"setFlatFee(uint256)": "24512",
								"setFundAddress(address)": "26752",
								"setImplementations(address)": "26840",
								"setPenalyFeePercent(uint256)": "24649",
								"setSuperAccount(address)": "26774",
								"setVirtualLock(address)": "26752",
								"superAccount()": "2370",
								"totalLaunchpads()": "infinite",
								"totalLaunchpadsByUser(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"virtualLock()": "2393"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 721,
									"end": 725,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 686,
									"end": 725,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 686,
									"end": 725,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1406,
									"end": 2313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1406,
									"end": 2313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1705,
									"end": 1731,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1731,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1731,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1731,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1731,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1731,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1705,
									"end": 1764,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1735,
									"end": 1764,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1735,
									"end": 1764,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1735,
									"end": 1764,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1735,
									"end": 1764,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1764,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1705,
									"end": 1764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1021,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1022,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1060,
									"name": "PUSH",
									"source": 10,
									"value": "1C"
								},
								{
									"begin": 1038,
									"end": 1056,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1038,
									"end": 1056,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1038,
									"end": 1056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1031,
									"end": 1061,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1127,
									"name": "PUSH",
									"source": 10,
									"value": "4C61756368706164466163746F72793A207669727475616C4C6F636B00000000"
								},
								{
									"begin": 1077,
									"end": 1095,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1077,
									"end": 1095,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1077,
									"end": 1095,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1070,
									"end": 1128,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1145,
									"end": 1163,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1145,
									"end": 1163,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1683,
									"end": 1820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1853,
									"end": 1880,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1880,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1880,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1880,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1880,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1853,
									"end": 1914,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1884,
									"end": 1914,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1884,
									"end": 1914,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1913,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1884,
									"end": 1914,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1884,
									"end": 1914,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1914,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1853,
									"end": 1914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1378,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1379,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1415,
									"end": 1417,
									"name": "PUSH",
									"source": 10,
									"value": "1D"
								},
								{
									"begin": 1395,
									"end": 1413,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1395,
									"end": 1413,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1395,
									"end": 1413,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1388,
									"end": 1418,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1454,
									"end": 1485,
									"name": "PUSH",
									"source": 10,
									"value": "4C61756368706164466163746F72793A2073757065724163636F756E74000000"
								},
								{
									"begin": 1434,
									"end": 1452,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1434,
									"end": 1452,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1452,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1486,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1503,
									"end": 1521,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1503,
									"end": 1521,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1174,
									"end": 1527,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1831,
									"end": 1971,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2004,
									"end": 2030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2030,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2030,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2030,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2004,
									"end": 2063,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2034,
									"end": 2063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2063,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2062,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2063,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2063,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2004,
									"end": 2063,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2004,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1734,
									"end": 1736,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1737,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1775,
									"name": "PUSH",
									"source": 10,
									"value": "1C"
								},
								{
									"begin": 1753,
									"end": 1771,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1753,
									"end": 1771,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1753,
									"end": 1771,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1776,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 1842,
									"name": "PUSH",
									"source": 10,
									"value": "4C61756368706164466163746F72793A2066756E644164647265737300000000"
								},
								{
									"begin": 1792,
									"end": 1810,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1792,
									"end": 1810,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 1810,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1843,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 1884,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1982,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2172,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2188,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2210,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2225,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2247,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2262,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2287,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2305,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 150,
									"end": 812,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 255,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 269,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 271,
									"end": 277,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 332,
									"end": 335,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 320,
									"end": 329,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 311,
									"end": 318,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 307,
									"end": 330,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 303,
									"end": 336,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 300,
									"end": 353,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 300,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 300,
									"end": 353,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 347,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 339,
									"end": 351,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 300,
									"end": 353,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 300,
									"end": 353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 381,
									"end": 390,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 375,
									"end": 391,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 400,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 425,
									"end": 430,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 400,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 400,
									"end": 431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 400,
									"end": 431,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 400,
									"end": 431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 503,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 485,
									"end": 503,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 479,
									"end": 504,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 450,
									"end": 455,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 450,
									"end": 455,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 513,
									"end": 546,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 479,
									"end": 504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 513,
									"end": 546,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 513,
									"end": 546,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 513,
									"end": 546,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 513,
									"end": 546,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 617,
									"end": 619,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 602,
									"end": 620,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 602,
									"end": 620,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 596,
									"end": 621,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 565,
									"end": 572,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 565,
									"end": 572,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 630,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 596,
									"end": 621,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 630,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 630,
									"end": 663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 630,
									"end": 663,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 630,
									"end": 663,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 734,
									"end": 736,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 719,
									"end": 737,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 719,
									"end": 737,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 713,
									"end": 738,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 682,
									"end": 689,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 682,
									"end": 689,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 747,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 713,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 747,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 747,
									"end": 780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 747,
									"end": 780,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 747,
									"end": 780,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 150,
									"end": 812,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 150,
									"end": 812,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 150,
									"end": 812,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 150,
									"end": 812,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 150,
									"end": 812,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 150,
									"end": 812,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 150,
									"end": 812,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1532,
									"end": 1884,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1532,
									"end": 1884,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 8637,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077c58bec4371edbb1ba311619ca191bd1c075abd487966f34b7f599462cdfe1064736f6c63430008120033",
									".code": [
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "85DC3004"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "A96DF743"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "A96DF743"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "B6B7913E"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "C06CA1DD"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "D9EB5947"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "E82BEF29"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "85DC3004"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "892F78FA"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "8A9B66CC"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "9352DACE"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "5A416A36"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "5A416A36"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "5C60DA1B"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "640F82F3"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "6DE944DC"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "23FA495A"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "49A1F14B"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "51AE878F"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "53ACA078"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "58E5BC88"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 437,
											"end": 8637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2788,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2788,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4782,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4782,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2888,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2888,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1137,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1137,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7953,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7892,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 585,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 590,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8110,
											"end": 8135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 554,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7964,
											"end": 8141,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2548,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2548,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 897,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 897,
											"end": 923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 897,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 897,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 923,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 897,
											"end": 923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 897,
											"end": 923,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 8478,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8478,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 8478,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2664,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2664,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2428,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2428,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 725,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3059,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3059,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3649,
											"end": 4669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3649,
											"end": 4669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10757,
											"end": 10782,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10782,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10813,
											"end": 10815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10825,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10825,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 10583,
											"end": 10831,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 863,
											"end": 890,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 863,
											"end": 890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 863,
											"end": 890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 863,
											"end": 890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 863,
											"end": 890,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 863,
											"end": 890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 863,
											"end": 890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 863,
											"end": 890,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8271,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 599,
											"end": 621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 599,
											"end": 621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 599,
											"end": 621,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 599,
											"end": 621,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 599,
											"end": 621,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 930,
											"end": 964,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 930,
											"end": 964,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 930,
											"end": 964,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2788,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2854,
											"end": 2872,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5256,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5244,
											"end": 5256,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5244,
											"end": 5256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5244,
											"end": 5316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5291,
											"end": 5302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5244,
											"end": 5316,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5244,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11262,
											"end": 11264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11301,
											"end": 11303,
											"name": "PUSH",
											"source": 10,
											"value": "2E"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11274,
											"end": 11304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11340,
											"end": 11374,
											"name": "PUSH",
											"source": 10,
											"value": "4C61756368706164466163746F72793A2043616E206E6F742063726561746520"
										},
										{
											"begin": 11320,
											"end": 11338,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11320,
											"end": 11338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11320,
											"end": 11338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11375,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C61756E6368706164206E6F7721"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11391,
											"end": 11409,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11391,
											"end": 11409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11391,
											"end": 11409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11384,
											"end": 11428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11445,
											"end": 11464,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11445,
											"end": 11464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5178,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5418,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 11679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11714,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11696,
											"end": 11714,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11689,
											"end": 11719,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11755,
											"end": 11789,
											"name": "PUSH",
											"source": 10,
											"value": "4C61756368706164466163746F72793A204E6F7420656E6F7567682066656521"
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11807,
											"end": 11825,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11807,
											"end": 11825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 11475,
											"end": 11831,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5740,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5838,
											"end": 5849,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5838,
											"end": 5849,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5838,
											"end": 5849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5838,
											"end": 5849,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5895,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5895,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6043,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6043,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6012,
											"end": 6130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6106,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6079,
											"end": 6116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6079,
											"end": 6118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6079,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6060,
											"end": 6118,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6130,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6012,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6276,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6276,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6311,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6295,
											"end": 6311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6311,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6330,
											"end": 6342,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6390,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6433,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6474,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6191,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6194,
											"end": 6528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6620,
											"end": 6642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6721,
											"end": 6735,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6721,
											"end": 6735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6642,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6597,
											"end": 6642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6708,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6708,
											"end": 6736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6721,
											"end": 6735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6708,
											"end": 6736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6708,
											"end": 6736,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6708,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 6736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 6736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6828,
											"name": "PUSH",
											"source": 6,
											"value": "57801E6F"
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6871,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 6948,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6977,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7003,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7023,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7055,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7038,
											"end": 7055,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6796,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7220,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7224,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7207,
											"end": 7293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7249,
											"end": 7260,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7293,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7207,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7305,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7305,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7384,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7384,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7451,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7451,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7953,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7428,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7428,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7480,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7480,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17836,
											"end": 17838,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17818,
											"end": 17839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17875,
											"end": 17877,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 17855,
											"end": 17873,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17855,
											"end": 17873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17855,
											"end": 17873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17848,
											"end": 17878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17914,
											"end": 17948,
											"name": "PUSH",
											"source": 10,
											"value": "4C61756368706164466163746F72793A20496E73756666696369656E74204261"
										},
										{
											"begin": 17894,
											"end": 17912,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17894,
											"end": 17912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17894,
											"end": 17912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17887,
											"end": 17949,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17965,
											"end": 17983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17958,
											"end": 17993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18010,
											"end": 18029,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 18010,
											"end": 18029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 17634,
											"end": 18035,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7402,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 7617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7617,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7617,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18270,
											"end": 18285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18270,
											"end": 18285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18270,
											"end": 18285,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18252,
											"end": 18286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 18302,
											"end": 18320,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18302,
											"end": 18320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18302,
											"end": 18320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18295,
											"end": 18338,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18187,
											"end": 18205,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18187,
											"end": 18205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7594,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7594,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7682,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18551,
											"end": 18553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18533,
											"end": 18554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18590,
											"end": 18592,
											"name": "PUSH",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 18570,
											"end": 18588,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18570,
											"end": 18588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18570,
											"end": 18588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18563,
											"end": 18593,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18629,
											"end": 18663,
											"name": "PUSH",
											"source": 10,
											"value": "4C61756368706164466163746F72793A20496E73756666696369656E7420416C"
										},
										{
											"begin": 18609,
											"end": 18627,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18609,
											"end": 18627,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18609,
											"end": 18627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18602,
											"end": 18664,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18680,
											"end": 18698,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18680,
											"end": 18698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18673,
											"end": 18710,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18727,
											"end": 18746,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 18727,
											"end": 18746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 18349,
											"end": 18752,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7568,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7800,
											"end": 7821,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7821,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19015,
											"end": 19030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19030,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18997,
											"end": 19031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19067,
											"end": 19082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19067,
											"end": 19082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19067,
											"end": 19082,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19047,
											"end": 19065,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19047,
											"end": 19065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19047,
											"end": 19065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19040,
											"end": 19083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19099,
											"end": 19117,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19099,
											"end": 19117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19099,
											"end": 19117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18932,
											"end": 18950,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18932,
											"end": 18950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7800,
											"end": 7950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7800,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19589,
											"end": 19591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19571,
											"end": 19592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19571,
											"end": 19592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19608,
											"end": 19626,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19608,
											"end": 19626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19608,
											"end": 19626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19601,
											"end": 19631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19667,
											"end": 19701,
											"name": "PUSH",
											"source": 10,
											"value": "4C61756368706164466163746F72793A207472616E73666572206661696C6564"
										},
										{
											"begin": 19647,
											"end": 19665,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19647,
											"end": 19665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19647,
											"end": 19665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19640,
											"end": 19702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19737,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 19719,
											"end": 19737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 19387,
											"end": 19743,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7774,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7326,
											"end": 8030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7305,
											"end": 8030,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7305,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8055,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "PUSH",
											"source": 6,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8111,
											"end": 8121,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8110,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8150,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "PUSH",
											"source": 6,
											"value": "DA2D0D8F4060E08DD20F6FB6AD959F9920958220CC60733DB44068DB43A02601"
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 8210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2888,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2993,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2994,
											"end": 3012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2993,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2993,
											"end": 3019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2993,
											"end": 3019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2973,
											"end": 3019,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 3051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1137,
											"end": 1170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2548,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2648,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8617,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8547,
											"end": 8583,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8547,
											"end": 8583,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2664,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2746,
											"end": 2772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2772,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2428,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3059,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3820,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3818,
											"end": 3820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3831,
											"end": 3951,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3899,
											"end": 3937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3937,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3899,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3880,
											"end": 3939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3951,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3831,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4037,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4043,
											"end": 4059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4037,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4037,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4059,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4037,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3993,
											"end": 4031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3993,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4031,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3993,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3992,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3992,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 585,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 4099,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4117,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4099,
											"end": 4121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4150,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4099,
											"end": 4150,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4161,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4098,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 585,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4218,
											"end": 4223,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4213,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4213,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4200,
											"end": 4217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4298,
											"end": 4312,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4285,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4280,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 585,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 4357,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4368,
											"end": 4373,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4388,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4368,
											"end": 4388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4388,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4363,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4357,
											"end": 4389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4356,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4413,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4496,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4502,
											"end": 4518,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4496,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4496,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4518,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4496,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4445,
											"end": 4490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4466,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4445,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4519,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4444,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4413,
											"end": 4519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4532,
											"end": 4546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4413,
											"end": 4519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4586,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4549,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4587,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4549,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4549,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4613,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4549,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4613,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 4640,
											"end": 4660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4640,
											"end": 4660,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 4669,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 4669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8321,
											"end": 8351,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21629,
											"end": 21631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21668,
											"end": 21670,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 21648,
											"end": 21666,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21648,
											"end": 21666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21648,
											"end": 21666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21641,
											"end": 21671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21707,
											"end": 21741,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 21687,
											"end": 21705,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 21687,
											"end": 21705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21687,
											"end": 21705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21680,
											"end": 21742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21751,
											"end": 21787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21804,
											"end": 21823,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 21804,
											"end": 21823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21427,
											"end": 21829,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22036,
											"end": 22038,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22018,
											"end": 22039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22018,
											"end": 22039,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22048,
											"end": 22078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22114,
											"end": 22148,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 22094,
											"end": 22112,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 22094,
											"end": 22112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22094,
											"end": 22112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22087,
											"end": 22149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22166,
											"end": 22184,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 22166,
											"end": 22184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21834,
											"end": 22190,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1767,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 997,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1054,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 1373,
											"end": 1387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1363,
											"end": 1388,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "PUSH",
											"source": 5,
											"value": "E8"
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1440,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "PUSH",
											"source": 5,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 1583,
											"end": 1597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1581,
											"name": "PUSH",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1570,
											"end": 1633,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1568,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1634,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1670,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "CREATE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22397,
											"end": 22399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22379,
											"end": 22400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22436,
											"end": 22438,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 22416,
											"end": 22434,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 22416,
											"end": 22434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22416,
											"end": 22434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22409,
											"end": 22439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CC4C4D8DCE8818DC99585D194819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22455,
											"end": 22473,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 22455,
											"end": 22473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22455,
											"end": 22473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22448,
											"end": 22500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22517,
											"end": 22535,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 22517,
											"end": 22535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 22195,
											"end": 22541,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1702,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 199,
											"end": 326,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 199,
											"end": 326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 270,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 255,
											"end": 258,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 271,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 248,
											"end": 249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 272,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 291,
											"end": 295,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 315,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 320,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 331,
											"end": 586,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 331,
											"end": 586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 403,
											"end": 405,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 445,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 433,
											"end": 452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 482,
											"end": 500,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 467,
											"end": 501,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 464,
											"end": 526,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 461,
											"end": 549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 461,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 461,
											"end": 549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 529,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 529,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 529,
											"end": 547,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 529,
											"end": 547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 565,
											"end": 567,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 580,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 331,
											"end": 586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 331,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 591,
											"end": 841,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 591,
											"end": 841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 661,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 688,
											"end": 707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 688,
											"end": 707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 722,
											"end": 756,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 758,
											"end": 780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 780,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 719,
											"end": 781,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 716,
											"end": 804,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 716,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 716,
											"end": 804,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 784,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 784,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 784,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 846,
											"end": 977,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 846,
											"end": 977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 921,
											"end": 952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 921,
											"end": 952,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 911,
											"end": 953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 911,
											"end": 953,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 901,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 901,
											"end": 971,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 967,
											"end": 968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 965,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 957,
											"end": 969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 982,
											"end": 1116,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 982,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1079,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1661,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1121,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1211,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1204,
											"end": 1223,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1230,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1197,
											"end": 1247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1247,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1197,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1278,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1396,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1372,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1397,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1420,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1332,
											"end": 1420,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1400,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1450,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1438,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1523,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1588,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1648,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1654,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1661,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1784,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1666,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1758,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1718,
											"end": 1778,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1776,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 2745,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1789,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1895,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1879,
											"end": 1888,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1877,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1896,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1863,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1944,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1976,
											"end": 1982,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2038,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2063,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2086,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1998,
											"end": 2086,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2066,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2135,
											"end": 2141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2197,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2227,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2197,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2324,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2357,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2324,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2463,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2496,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2463,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2526,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2570,
											"end": 2602,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2668,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2637,
											"end": 2670,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2634,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2612,
											"end": 2671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2736,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2738,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2702,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2691,
											"end": 2697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 2745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 2745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 2745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 2745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 2745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 3228,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2750,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2858,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2840,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2859,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2826,
											"end": 2876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2874,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2876,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2826,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2949,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3027,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 3003,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3051,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2963,
											"end": 3051,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3031,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3155,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3222,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3222,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3102,
											"end": 3108,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 3228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2750,
											"end": 3228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3952,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3233,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3276,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3326,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3296,
											"end": 3351,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3351,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3296,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3390,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3449,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3472,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 3436,
											"end": 3472,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3452,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3581,
											"end": 3594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3577,
											"end": 3599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3599,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3603,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3609,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 3667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 3667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3645,
											"end": 3667,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3668,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3671,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3748,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3792,
											"end": 3795,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3761,
											"end": 3796,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3758,
											"end": 3813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3813,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3758,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3875,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 3871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3851,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3876,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3952,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 6028,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3957,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4051,
											"end": 4060,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4061,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4070,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4035,
											"end": 4087,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4035,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4035,
											"end": 4087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4085,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4035,
											"end": 4087,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4035,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 4105,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4105,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4127,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 4105,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4225,
											"end": 4231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 4219,
											"end": 4253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 4219,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4318,
											"end": 4321,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4315,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4307,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4294,
											"end": 4316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4276,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4322,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4276,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4269,
											"end": 4274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4380,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4380,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4408,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4425,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 4389,
											"end": 4425,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4423,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4425,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 4389,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4501,
											"end": 4504,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4498,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4457,
											"end": 4505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4505,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4457,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4454,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4557,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4588,
											"end": 4590,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4591,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 4572,
											"end": 4608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4608,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 4572,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4684,
											"end": 4687,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4671,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4640,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4640,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4633,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4624,
											"end": 4638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 4746,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4773,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4774,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4791,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 4755,
											"end": 4791,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4791,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 4755,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4867,
											"end": 4870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4823,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4823,
											"end": 4871,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4823,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4820,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4811,
											"end": 4816,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4807,
											"end": 4821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4914,
											"end": 4923,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4897,
											"end": 4930,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4955,
											"end": 4957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4945,
											"end": 4953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 4958,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4939,
											"end": 4975,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4939,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4939,
											"end": 4975,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4973,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4939,
											"end": 4975,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4939,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5008,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5052,
											"end": 5055,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5008,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5008,
											"end": 5056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5008,
											"end": 5056,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5008,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5005,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 5006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5057,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5113,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5099,
											"end": 5108,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5082,
											"end": 5115,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5143,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5124,
											"end": 5160,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5158,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5124,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5237,
											"end": 5240,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5226,
											"end": 5234,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5193,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5241,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5193,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5180,
											"end": 5185,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5298,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5300,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5327,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5328,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5345,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5309,
											"end": 5345,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5339,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5343,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5345,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5309,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5422,
											"end": 5425,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5409,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5378,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5426,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5378,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5372,
											"end": 5375,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 5365,
											"end": 5370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5354,
											"end": 5427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5483,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5465,
											"end": 5484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5513,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5494,
											"end": 5530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5528,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5530,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5494,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5607,
											"end": 5610,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5596,
											"end": 5604,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5594,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5563,
											"end": 5611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5611,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5563,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5550,
											"end": 5555,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5621,
											"end": 5634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5691,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5719,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5736,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5700,
											"end": 5736,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5734,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5736,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5700,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5768,
											"end": 5816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 5816,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5768,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5756,
											"end": 5761,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5839,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 5826,
											"end": 5839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5826,
											"end": 5839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5924,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5941,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5905,
											"end": 5941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5935,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 5939,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5941,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5905,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5995,
											"end": 6004,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5973,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6021,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5973,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 5970,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 5966,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 6022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 6028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 6028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 6028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 6028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3957,
											"end": 6028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6283,
											"end": 6289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6341,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6353,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6376,
											"name": "PUSH",
											"source": 10,
											"value": "2E0"
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6377,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6394,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 6362,
											"end": 6394,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6392,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6362,
											"end": 6394,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 6362,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6419,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6439,
											"end": 6441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6442,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6428,
											"end": 6459,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6459,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6428,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6481,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6481,
											"end": 6498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6498,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6481,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 6540,
											"end": 6549,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6521,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6617,
											"end": 6619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6606,
											"end": 6615,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6583,
											"end": 6621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6621,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6583,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6684,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6680,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6686,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6642,
											"end": 6647,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6751,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6707,
											"end": 6712,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6696,
											"end": 6752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6785,
											"end": 6818,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6772,
											"end": 6777,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 6783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6883,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6869,
											"end": 6878,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6885,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6846,
											"end": 6849,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6839,
											"end": 6844,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6919,
											"end": 6952,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6913,
											"end": 6916,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6906,
											"end": 6911,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 6953,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7017,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7003,
											"end": 7012,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6999,
											"end": 7018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7019,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6973,
											"end": 6978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6969,
											"end": 6984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6962,
											"end": 7020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7042,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7074,
											"end": 7106,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7062,
											"end": 7067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7129,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7189,
											"end": 7191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7174,
											"end": 7192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7193,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7156,
											"end": 7158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7194,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7216,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7265,
											"end": 7274,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7248,
											"end": 7280,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7243,
											"end": 7245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7241,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7232,
											"end": 7246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7305,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 7372,
											"end": 7379,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7356,
											"end": 7365,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7352,
											"end": 7370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7324,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7380,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 7324,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7380,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 7446,
											"end": 7453,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7443,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 7429,
											"end": 7438,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7399,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7454,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 7399,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7454,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 7522,
											"end": 7529,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "PUSH",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7473,
											"end": 7530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7530,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 7473,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7584,
											"name": "PUSH",
											"source": 10,
											"value": "2C0"
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7585,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7586,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7645,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 7595,
											"end": 7645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7645,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 7595,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7718,
											"end": 7725,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7707,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7694,
											"end": 7716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7664,
											"end": 7726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7726,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7664,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7726,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8393,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 8146,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8246,
											"end": 8255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8244,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8233,
											"end": 8256,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8229,
											"end": 8261,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8278,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8226,
											"end": 8278,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8272,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8278,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8226,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8300,
											"end": 8323,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 8357,
											"end": 8362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 8332,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 8332,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8393,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8146,
											"end": 8393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8715,
											"end": 9392,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 8715,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8957,
											"end": 8978,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9027,
											"end": 9040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9027,
											"end": 9040,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9049,
											"end": 9071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9049,
											"end": 9071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9049,
											"end": 9071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8876,
											"end": 8880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9102,
											"end": 9104,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9087,
											"end": 9105,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9179,
											"end": 9192,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9263,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9263,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9285,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9356,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9318,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9282,
											"end": 9283,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9200,
											"end": 9209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 9171,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9383,
											"end": 9386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9386,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8715,
											"end": 9392,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8715,
											"end": 9392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 10578,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 9657,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 9759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9794,
											"end": 9803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 9792,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9781,
											"end": 9804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9777,
											"end": 9810,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9827,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 9774,
											"end": 9827,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9823,
											"end": 9824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9821,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9813,
											"end": 9825,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9827,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 9774,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9856,
											"end": 9858,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9850,
											"end": 9859,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 9974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9953,
											"end": 9975,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9920,
											"end": 9930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9917,
											"end": 9951,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9976,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9911,
											"end": 9999,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9911,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9911,
											"end": 9999,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9979,
											"end": 9997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10015,
											"end": 10017,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10075,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10052,
											"end": 10075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 10084,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10115,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10084,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10131,
											"end": 10137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10195,
											"end": 10204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10178,
											"end": 10210,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10161,
											"end": 10176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10272,
											"end": 10274,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10261,
											"end": 10270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10244,
											"end": 10276,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10239,
											"end": 10241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10227,
											"end": 10242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10277,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10338,
											"end": 10340,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10327,
											"end": 10336,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10342,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10307,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10297,
											"end": 10303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10293,
											"end": 10308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10286,
											"end": 10343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10394,
											"end": 10403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10377,
											"end": 10410,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10363,
											"end": 10369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10359,
											"end": 10375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10476,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10462,
											"end": 10471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10478,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10442,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10427,
											"end": 10443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10544,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 10530,
											"end": 10539,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10513,
											"end": 10546,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10572,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10556,
											"end": 10572,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10556,
											"end": 10572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10556,
											"end": 10572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 10578,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 10578,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 10578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 10578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9657,
											"end": 10578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11836,
											"end": 12109,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 11836,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11945,
											"end": 11954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11943,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 11955,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11928,
											"end": 11960,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 11977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 11925,
											"end": 11977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 11974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11963,
											"end": 11975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 11977,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 11925,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11999,
											"end": 12015,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12055,
											"end": 12059,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 12048,
											"end": 12053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12044,
											"end": 12060,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12061,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 12024,
											"end": 12079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13739,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13316,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13358,
											"end": 13361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13396,
											"end": 13401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13390,
											"end": 13402,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13423,
											"end": 13429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13418,
											"end": 13421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13411,
											"end": 13430,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13448,
											"end": 13449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13472,
											"end": 13478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13469,
											"end": 13470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13466,
											"end": 13479,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13538,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13590,
											"end": 13603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13590,
											"end": 13603,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13590,
											"end": 13603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13586,
											"end": 13608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13580,
											"end": 13609,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13562,
											"end": 13573,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13562,
											"end": 13573,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13562,
											"end": 13573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13558,
											"end": 13578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13558,
											"end": 13578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13551,
											"end": 13610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13487,
											"end": 13499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 13458,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13665,
											"end": 13666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13658,
											"end": 13662,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13644,
											"end": 13647,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13640,
											"end": 13656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13629,
											"end": 13667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13728,
											"end": 13732,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13721,
											"end": 13723,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13717,
											"end": 13724,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13714,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13704,
											"end": 13710,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13700,
											"end": 13715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 13725,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13691,
											"end": 13694,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13687,
											"end": 13726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13683,
											"end": 13733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13676,
											"end": 13733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13676,
											"end": 13733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13676,
											"end": 13733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13744,
											"end": 15503,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 13744,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13798,
											"end": 13801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13826,
											"end": 13832,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 13867,
											"end": 13872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13861,
											"end": 13873,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13892,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13882,
											"end": 13897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 13959,
											"end": 13961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13954,
											"end": 13957,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 13962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13936,
											"end": 13948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13918,
											"end": 13963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 13963,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 13918,
											"end": 13963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14011,
											"end": 14015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14004,
											"end": 14009,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14017,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14062,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14049,
											"end": 14063,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14042,
											"end": 14046,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14037,
											"end": 14040,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14033,
											"end": 14047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14026,
											"end": 14064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14121,
											"end": 14125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14087,
											"end": 14126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14073,
											"end": 14126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14073,
											"end": 14126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14073,
											"end": 14126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14174,
											"end": 14178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14163,
											"end": 14179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14180,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14224,
											"end": 14227,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14216,
											"end": 14222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14212,
											"end": 14228,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14205,
											"end": 14209,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14200,
											"end": 14203,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 14286,
											"end": 14292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14270,
											"end": 14284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14252,
											"end": 14293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14293,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 14252,
											"end": 14293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14341,
											"end": 14345,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14334,
											"end": 14339,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14330,
											"end": 14346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14347,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14391,
											"end": 14394,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14383,
											"end": 14389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14379,
											"end": 14395,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14372,
											"end": 14376,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14367,
											"end": 14370,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14356,
											"end": 14396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 14453,
											"end": 14459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14437,
											"end": 14451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14419,
											"end": 14460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14460,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 14419,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14501,
											"end": 14506,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14497,
											"end": 14513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14491,
											"end": 14514,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14558,
											"end": 14561,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14550,
											"end": 14556,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14546,
											"end": 14562,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14539,
											"end": 14543,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14534,
											"end": 14537,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14530,
											"end": 14544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14523,
											"end": 14563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14586,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14627,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 14586,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14572,
											"end": 14627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14572,
											"end": 14627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14572,
											"end": 14627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14675,
											"end": 14679,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 14668,
											"end": 14673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14664,
											"end": 14680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14658,
											"end": 14681,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14725,
											"end": 14728,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14717,
											"end": 14723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14713,
											"end": 14729,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14706,
											"end": 14710,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 14701,
											"end": 14704,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14697,
											"end": 14711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14690,
											"end": 14730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14753,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14787,
											"end": 14793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 14785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14753,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14753,
											"end": 14794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14753,
											"end": 14794,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14753,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14739,
											"end": 14794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14739,
											"end": 14794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14739,
											"end": 14794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14842,
											"end": 14846,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 14835,
											"end": 14840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14848,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14892,
											"end": 14895,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14884,
											"end": 14890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14896,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14877,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14864,
											"end": 14878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14857,
											"end": 14897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14954,
											"end": 14960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 14952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14920,
											"end": 14961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14961,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14920,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14906,
											"end": 14961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14906,
											"end": 14961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14906,
											"end": 14961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15009,
											"end": 15013,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15002,
											"end": 15007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 15014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15015,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15059,
											"end": 15062,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15051,
											"end": 15057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15047,
											"end": 15063,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15040,
											"end": 15044,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15035,
											"end": 15038,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15087,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15121,
											"end": 15127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15105,
											"end": 15119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15087,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 15087,
											"end": 15128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15087,
											"end": 15128,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15087,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15073,
											"end": 15128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15073,
											"end": 15128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15073,
											"end": 15128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15147,
											"end": 15153,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15194,
											"end": 15199,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15190,
											"end": 15204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15205,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15247,
											"end": 15250,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15245,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15251,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15230,
											"end": 15232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15225,
											"end": 15228,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15309,
											"end": 15315,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 15275,
											"end": 15316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15316,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15275,
											"end": 15316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15316,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15335,
											"end": 15341,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 15389,
											"end": 15391,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15382,
											"end": 15387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15378,
											"end": 15392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15372,
											"end": 15393,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15435,
											"end": 15438,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15427,
											"end": 15433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15423,
											"end": 15439,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15413,
											"end": 15416,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15402,
											"end": 15440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 15490,
											"end": 15496,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15474,
											"end": 15488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 15456,
											"end": 15497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15497,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 15456,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15449,
											"end": 15497,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 13744,
											"end": 15503,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13744,
											"end": 15503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15508,
											"end": 17440,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 15508,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16211,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16211,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8495,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8452,
											"end": 8496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8452,
											"end": 8496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16170,
											"name": "PUSH",
											"source": 10,
											"value": "3A0"
										},
										{
											"begin": 16270,
											"end": 16274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16262,
											"end": 16268,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 16258,
											"end": 16275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16252,
											"end": 16276,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16285,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16333,
											"end": 16337,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16322,
											"end": 16331,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16318,
											"end": 16338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16304,
											"end": 16316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8495,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8452,
											"end": 8496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8452,
											"end": 8496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8502,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16285,
											"end": 16339,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16285,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16395,
											"end": 16399,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16383,
											"end": 16400,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 16383,
											"end": 16400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16383,
											"end": 16400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16377,
											"end": 16401,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16355,
											"end": 16375,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16355,
											"end": 16375,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16355,
											"end": 16375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16348,
											"end": 16402,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16458,
											"end": 16462,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16446,
											"end": 16463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16463,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16440,
											"end": 16464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16418,
											"end": 16438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16418,
											"end": 16438,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16418,
											"end": 16438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16411,
											"end": 16465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16521,
											"end": 16525,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16509,
											"end": 16526,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16509,
											"end": 16526,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16509,
											"end": 16526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16527,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16481,
											"end": 16501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16481,
											"end": 16501,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16481,
											"end": 16501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16474,
											"end": 16528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16584,
											"end": 16588,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 16572,
											"end": 16589,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16572,
											"end": 16589,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16572,
											"end": 16589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16566,
											"end": 16590,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16544,
											"end": 16564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16544,
											"end": 16564,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16544,
											"end": 16564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16537,
											"end": 16591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16651,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 16635,
											"end": 16652,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16635,
											"end": 16652,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16635,
											"end": 16652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16629,
											"end": 16653,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16627,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16714,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 16698,
											"end": 16715,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16698,
											"end": 16715,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16698,
											"end": 16715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16692,
											"end": 16716,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16690,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16663,
											"end": 16717,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16736,
											"end": 16742,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 16784,
											"end": 16799,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16784,
											"end": 16799,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16784,
											"end": 16799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16800,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16751,
											"end": 16801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 16826,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 16868,
											"end": 16883,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16868,
											"end": 16883,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16868,
											"end": 16883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16884,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16842,
											"end": 16860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16842,
											"end": 16860,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16842,
											"end": 16860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16835,
											"end": 16885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16904,
											"end": 16910,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 16952,
											"end": 16967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16952,
											"end": 16967,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 16952,
											"end": 16967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16946,
											"end": 16968,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16926,
											"end": 16944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16926,
											"end": 16944,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16926,
											"end": 16944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 16969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12189,
											"end": 12201,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 12189,
											"end": 12201,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17029,
											"end": 17032,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12251,
											"end": 12255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12240,
											"end": 12256,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 12240,
											"end": 12256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12232,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 12218,
											"end": 12232,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12258,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12296,
											"end": 12312,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 12296,
											"end": 12312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12290,
											"end": 12313,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12274,
											"end": 12288,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 12274,
											"end": 12288,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12274,
											"end": 12288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12424,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12424,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12425,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12398,
											"end": 12426,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17092,
											"end": 17095,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 17077,
											"end": 17096,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17077,
											"end": 17096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12386,
											"end": 12427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12462,
											"end": 12478,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 12462,
											"end": 12478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12456,
											"end": 12479,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12549,
											"end": 12570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12549,
											"end": 12570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12549,
											"end": 12570,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "PUSH",
											"source": 10,
											"value": "1E0"
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12526,
											"end": 12571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12613,
											"end": 12629,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 12613,
											"end": 12629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12607,
											"end": 12630,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12601,
											"name": "PUSH",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 12587,
											"end": 12601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12587,
											"end": 12601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12580,
											"end": 12636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12689,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12668,
											"end": 12691,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12666,
											"name": "PUSH",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 12652,
											"end": 12666,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12745,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12730,
											"end": 12746,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12724,
											"end": 12747,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 12722,
											"name": "PUSH",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 12708,
											"end": 12722,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 12722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 12748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12506,
											"end": 12509,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 12786,
											"end": 12802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12780,
											"end": 12803,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12778,
											"name": "PUSH",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 12764,
											"end": 12778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12757,
											"end": 12804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17157,
											"end": 17160,
											"name": "PUSH",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 17142,
											"end": 17161,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17142,
											"end": 17161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12878,
											"end": 12903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12956,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12957,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12941,
											"end": 12957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 12958,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12919,
											"end": 12933,
											"name": "PUSH",
											"source": 10,
											"value": "2A0"
										},
										{
											"begin": 12919,
											"end": 12933,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12919,
											"end": 12933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 12959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13088,
											"end": 13109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13088,
											"end": 13109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13088,
											"end": 13109,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17227,
											"end": 17230,
											"name": "PUSH",
											"source": 10,
											"value": "2C0"
										},
										{
											"begin": 17212,
											"end": 17231,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17212,
											"end": 17231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13076,
											"end": 13110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13163,
											"end": 13167,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13152,
											"end": 13168,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13152,
											"end": 13168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13174,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13140,
											"name": "PUSH",
											"source": 10,
											"value": "2E0"
										},
										{
											"begin": 13126,
											"end": 13140,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13119,
											"end": 13175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13228,
											"end": 13232,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13217,
											"end": 13233,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13211,
											"end": 13234,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13239,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13205,
											"name": "PUSH",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 13191,
											"end": 13205,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13184,
											"end": 13240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13293,
											"end": 13297,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13282,
											"end": 13298,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13276,
											"end": 13299,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13272,
											"end": 13304,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "PUSH",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17269,
											"end": 17271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17263,
											"end": 17266,
											"name": "PUSH",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 17252,
											"end": 17261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17248,
											"end": 17267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17272,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17289,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 17342,
											"end": 17344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17340,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17327,
											"end": 17345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17319,
											"end": 17325,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17289,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 17289,
											"end": 17346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17289,
											"end": 17346,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 17289,
											"end": 17346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17377,
											"end": 17380,
											"name": "PUSH",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17390,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17390,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17421,
											"end": 17424,
											"name": "PUSH",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 17406,
											"end": 17425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17399,
											"end": 17434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17281,
											"end": 17346,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 15508,
											"end": 17440,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15508,
											"end": 17440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17629,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 17445,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17515,
											"end": 17521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17568,
											"end": 17570,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17547,
											"end": 17554,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17543,
											"end": 17566,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17539,
											"end": 17571,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17588,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 17536,
											"end": 17588,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17584,
											"end": 17585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17581,
											"end": 17582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17574,
											"end": 17586,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17588,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 17536,
											"end": 17588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17607,
											"end": 17623,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17607,
											"end": 17623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17445,
											"end": 17629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19382,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 19137,
											"end": 19382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19204,
											"end": 19210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19259,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19245,
											"end": 19254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19236,
											"end": 19243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19232,
											"end": 19255,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19260,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 19225,
											"end": 19277,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19225,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 19225,
											"end": 19277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19273,
											"end": 19274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19270,
											"end": 19271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19263,
											"end": 19275,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19225,
											"end": 19277,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 19225,
											"end": 19277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19305,
											"end": 19314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19299,
											"end": 19315,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19324,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 19346,
											"end": 19351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19324,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 19324,
											"end": 19352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19748,
											"end": 19875,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 19748,
											"end": 19875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19809,
											"end": 19819,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19804,
											"end": 19807,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19800,
											"end": 19820,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19797,
											"end": 19798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19840,
											"end": 19844,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 19837,
											"end": 19838,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19830,
											"end": 19845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19864,
											"end": 19868,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19861,
											"end": 19862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19854,
											"end": 19869,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19880,
											"end": 20048,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 19880,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 19962,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 19962,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 19962,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19984,
											"end": 19993,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19984,
											"end": 19993,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20001,
											"end": 20016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20001,
											"end": 20016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20001,
											"end": 20016,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19995,
											"end": 20017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19995,
											"end": 20017,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19981,
											"end": 20018,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19971,
											"end": 20042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 19971,
											"end": 20042,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20022,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 20022,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 20022,
											"end": 20040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20142,
											"end": 20143,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20185,
											"end": 20190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20142,
											"end": 20143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20227,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20210,
											"end": 20218,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20207,
											"end": 20228,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20279,
											"end": 20283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20271,
											"end": 20277,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 20267,
											"end": 20284,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 20261,
											"end": 20265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20258,
											"end": 20285,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20255,
											"end": 20308,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20255,
											"end": 20308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 20255,
											"end": 20308,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 20288,
											"end": 20306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 20288,
											"end": 20306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20338,
											"end": 20345,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20336,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20324,
											"end": 20346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20321,
											"end": 20376,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20321,
											"end": 20376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 20321,
											"end": 20376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20358,
											"end": 20374,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20358,
											"end": 20374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20358,
											"end": 20374,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 20358,
											"end": 20374,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20321,
											"end": 20376,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 20321,
											"end": 20376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20459,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20459,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20459,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20459,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20397,
											"end": 20412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20397,
											"end": 20412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20397,
											"end": 20412,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 20397,
											"end": 20412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 20199,
											"end": 20469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20203,
											"end": 20206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20480,
											"end": 21286,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 20480,
											"end": 21286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20529,
											"end": 20534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20559,
											"end": 20567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 20549,
											"end": 20629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20600,
											"end": 20601,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20614,
											"end": 20619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 20614,
											"end": 20619,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20629,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 20549,
											"end": 20629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20638,
											"end": 20714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 20638,
											"end": 20714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20685,
											"end": 20686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20699,
											"end": 20704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 20699,
											"end": 20704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20638,
											"end": 20714,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 20638,
											"end": 20714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20730,
											"end": 20734,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20748,
											"end": 20749,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20743,
											"end": 20802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20743,
											"end": 20802,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20743,
											"end": 20802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 20743,
											"end": 20802,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20817,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 20811,
											"end": 20941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20811,
											"end": 20941,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20811,
											"end": 20941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 20811,
											"end": 20941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20723,
											"end": 20941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 20723,
											"end": 20941,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20743,
											"end": 20802,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 20743,
											"end": 20802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20773,
											"end": 20774,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20764,
											"end": 20774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20764,
											"end": 20774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20811,
											"end": 20941,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 20811,
											"end": 20941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20848,
											"end": 20851,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 20838,
											"end": 20846,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20835,
											"end": 20852,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20855,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 20855,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 20855,
											"end": 20873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20855,
											"end": 20873,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 20855,
											"end": 20873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20911,
											"end": 20912,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20897,
											"end": 20913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20897,
											"end": 20913,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 20926,
											"end": 20931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 20926,
											"end": 20931,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20723,
											"end": 20941,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 20723,
											"end": 20941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20723,
											"end": 20941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21025,
											"end": 21027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21015,
											"end": 21023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 21000,
											"end": 21004,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21010,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20993,
											"end": 21029,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20987,
											"end": 20989,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 20977,
											"end": 20985,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20974,
											"end": 20990,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 20971,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 20963,
											"end": 20967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20960,
											"end": 20972,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20956,
											"end": 20991,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20953,
											"end": 21030,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 20950,
											"end": 21109,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20950,
											"end": 21109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 20950,
											"end": 21109,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 21094,
											"end": 21099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 21094,
											"end": 21099,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20950,
											"end": 21109,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 20950,
											"end": 21109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21141,
											"end": 21175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 21166,
											"end": 21174,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21160,
											"end": 21164,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21141,
											"end": 21175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 21141,
											"end": 21175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21141,
											"end": 21175,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 21141,
											"end": 21175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21211,
											"end": 21217,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21207,
											"end": 21208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21203,
											"end": 21209,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 21199,
											"end": 21218,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 21190,
											"end": 21197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21187,
											"end": 21219,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21184,
											"end": 21242,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21184,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 21184,
											"end": 21242,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 21222,
											"end": 21240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 21222,
											"end": 21240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21240,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 21222,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21260,
											"end": 21280,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21260,
											"end": 21280,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20480,
											"end": 21286,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20480,
											"end": 21286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21291,
											"end": 21422,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 21291,
											"end": 21422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21351,
											"end": 21356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21380,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 21407,
											"end": 21415,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21401,
											"end": 21405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21380,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 21380,
											"end": 21416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22546,
											"end": 22763,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 22546,
											"end": 22763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22586,
											"end": 22587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22612,
											"end": 22613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22602,
											"end": 22734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 22602,
											"end": 22734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22656,
											"end": 22666,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 22651,
											"end": 22654,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 22647,
											"end": 22667,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 22644,
											"end": 22645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22637,
											"end": 22668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22691,
											"end": 22695,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 22688,
											"end": 22689,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 22681,
											"end": 22696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22723,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 22716,
											"end": 22717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22709,
											"end": 22724,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 22602,
											"end": 22734,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 22602,
											"end": 22734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22748,
											"end": 22757,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 22748,
											"end": 22757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22546,
											"end": 22763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22768,
											"end": 22896,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 22768,
											"end": 22896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22835,
											"end": 22844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22835,
											"end": 22844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22835,
											"end": 22844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22856,
											"end": 22867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22856,
											"end": 22867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22856,
											"end": 22867,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22853,
											"end": 22890,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22853,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 22853,
											"end": 22890,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22870,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 22870,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 22870,
											"end": 22888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22901,
											"end": 23026,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 22901,
											"end": 23026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22975,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22966,
											"end": 22975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22987,
											"end": 22997,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22987,
											"end": 22997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22987,
											"end": 22997,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22984,
											"end": 23020,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22984,
											"end": 23020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 22984,
											"end": 23020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 23000,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 23000,
											"end": 23018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"LaunchpadFactory/Clones.sol",
								"LaunchpadFactory/LaunchpadFactory.sol",
								"interfaces/ILaunchpad.sol",
								"interfaces/IVirtualERC20.sol",
								"structs/LaunchpadStructs.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ZOOM()": "58e5bc88",
							"allLaunchpads(uint256)": "53aca078",
							"calculateTokens((address,uint256,uint256,uint256,uint256,uint256,uint256))": "a96df743",
							"deployLaunchpad((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256),(bool,address,address,uint256,uint256,uint256),(uint256,uint256),(string,string,string,string,string,string,string,string,string,string))": "49a1f14b",
							"flatFee()": "d9eb5947",
							"fundAddress()": "e82bef29",
							"implementation()": "5c60da1b",
							"owner()": "8da5cb5b",
							"penaltyFeePercent()": "8a9b66cc",
							"renounceOwnership()": "715018a6",
							"setFlatFee(uint256)": "23fa495a",
							"setFundAddress(address)": "85dc3004",
							"setImplementations(address)": "9352dace",
							"setPenalyFeePercent(uint256)": "51ae878f",
							"setSuperAccount(address)": "892f78fa",
							"setVirtualLock(address)": "5a416a36",
							"superAccount()": "b6b7913e",
							"totalLaunchpads()": "c06ca1dd",
							"totalLaunchpadsByUser(address)": "6de944dc",
							"transferOwnership(address)": "f2fde38b",
							"virtualLock()": "640f82f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_superAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_virtualLock\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_fundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchpad\",\"type\":\"address\"}],\"name\":\"NewLaunchpad\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZOOM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLaunchpads\",\"outputs\":[{\"internalType\":\"contract ILaunchpad\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"presaleRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedTokenFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.CalculateTokenInput\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"calculateTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"icoToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"presaleRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whitelistPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolType\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.LaunchpadInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"firstReleasePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodEachCycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenReleaseEachCycle\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.ClaimInfo\",\"name\":\"claimInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"manualListing\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpLockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.DexInfo\",\"name\":\"dexInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"raisedFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedTokenFeePercent\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.FeeSystem\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"logoURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"websiteURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"facebookURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitterURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"githubURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegramURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"instagramURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discordURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"redditURL\",\"type\":\"string\"}],\"internalType\":\"struct LaunchpadStructs.SocialLinks\",\"name\":\"socialLinks\",\"type\":\"tuple\"}],\"name\":\"deployLaunchpad\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flatFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flatFee\",\"type\":\"uint256\"}],\"name\":\"setFlatFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_fundAddress\",\"type\":\"address\"}],\"name\":\"setFundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"setImplementations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_penaltyFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPenalyFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_superAccount\",\"type\":\"address\"}],\"name\":\"setSuperAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_virtualLock\",\"type\":\"address\"}],\"name\":\"setVirtualLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunchpads\",\"outputs\":[{\"internalType\":\"contract ILaunchpad[]\",\"name\":\"launchpads\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"totalLaunchpadsByUser\",\"outputs\":[{\"internalType\":\"contract ILaunchpad[]\",\"name\":\"launchpadsByUser\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"virtualLock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LaunchpadFactory/LaunchpadFactory.sol\":\"LaunchpadFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"LaunchpadFactory/Clones.sol\":{\"keccak256\":\"0x2362d7dd406da7ffbd665a99fd4a9c033d5d0e0113429f28848a54ff603d1878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://963cfd950920cc1703d1190b0f0bcd6d5bbce666773e13f1d5955cc356bd9ba8\",\"dweb:/ipfs/QmT6pkaQqEYcvDwHvJakuwNTtBRnaJJFhGW85Mn6238EUh\"]},\"LaunchpadFactory/LaunchpadFactory.sol\":{\"keccak256\":\"0x693341007924bd4b3a1c41edf06a75a03530cf46aaee68c7a51a718d5f29d5d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef02b1827a0e6dc848732d72ca581e7b75db29d34d231a07ab011e0c4b9205f\",\"dweb:/ipfs/QmS6F5wdjQCC8fXdCHX6z1fAU65qFT8x5nXDy2tN8BC3cB\"]},\"interfaces/ILaunchpad.sol\":{\"keccak256\":\"0xbcb55be0cda83f53ed135b0ee43ba04e85eef3b81b0d2cd6bd09104ddf5b1e25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d82f12a58d021725c137b353c5b15b3a0e21099e7cee55fd0a3597e0f335dfa9\",\"dweb:/ipfs/QmUfBMn3wE7VZGUybT942oX3MrdNeb5samzH6i2ooCSQe3\"]},\"interfaces/IVirtualERC20.sol\":{\"keccak256\":\"0x30dce8de6983ddc4d507121740c18fba2cf54cd48db8a7ec664120905ca43d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8976b148f83794fddd5e32f3d7b4a9728a988330a702d6e8230678537b0f5ace\",\"dweb:/ipfs/QmZ7o9bWJRDJ6BsHym3GfsRT8fkGHZ4Ww6iNfYN2Qdk74m\"]},\"structs/LaunchpadStructs.sol\":{\"keccak256\":\"0x048fc9070ffad4f4c9bdd83de5ee96893ec786a3fb5a31815d58160f94e20412\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d91d72d605cf6107d371a880a94501bb75065076fb54676c2d6b8c6cc5509a\",\"dweb:/ipfs/QmYzYkcJxWpyJidJraJSbRWL5zmSCDyN6PavvWqMQHm7P8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 957,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "flatFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 960,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "penaltyFeePercent",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 962,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "superAccount",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 964,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "virtualLock",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "fundAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address_payable"
							},
							{
								"astId": 968,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "implementation",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 972,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "allLaunchpads",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_contract(ILaunchpad)1574)dyn_storage"
							},
							{
								"astId": 978,
								"contract": "LaunchpadFactory/LaunchpadFactory.sol:LaunchpadFactory",
								"label": "allLaunchpadsOf",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_array(t_contract(ILaunchpad)1574)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(ILaunchpad)1574)dyn_storage": {
								"base": "t_contract(ILaunchpad)1574",
								"encoding": "dynamic_array",
								"label": "contract ILaunchpad[]",
								"numberOfBytes": "32"
							},
							"t_contract(ILaunchpad)1574": {
								"encoding": "inplace",
								"label": "contract ILaunchpad",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_contract(ILaunchpad)1574)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract ILaunchpad[])",
								"numberOfBytes": "32",
								"value": "t_array(t_contract(ILaunchpad)1574)dyn_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ILaunchpad.sol": {
				"ILaunchpad": {
					"abi": [
						{
							"inputs": [],
							"name": "getJoinedUsers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLaunchpadInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "softCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "hardCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "state",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "raisedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "listingTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "whitelistPool",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "logoURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "websiteURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "facebookURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "twitterURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "githubURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "telegramURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "instagramURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "discordURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "redditURL",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "icoToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "firstReleasePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "listingPercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "listingPrice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lpLockTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxInvest",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minInvest",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxLiquidity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "presaleRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSoldTokens",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "manualListing",
											"type": "bool"
										}
									],
									"internalType": "struct LaunchpadStructs.LaunchpadReturnInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getOwnerZoneInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOwner",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "whitelistPool",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "canFinalize",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "canCancel",
											"type": "bool"
										}
									],
									"internalType": "struct LaunchpadStructs.OwnerZoneInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "icoToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "softCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "hardCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "presaleRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minInvest",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxInvest",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "whitelistPool",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "poolType",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.LaunchpadInfo",
									"name": "info",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "firstReleasePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "vestingPeriodEachCycle",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenReleaseEachCycle",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.ClaimInfo",
									"name": "userClaimInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "manualListing",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "routerAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "factoryAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "listingPrice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "listingPercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lpLockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.DexInfo",
									"name": "dexInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "raisedFeePercent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "raisedTokenFeePercent",
											"type": "uint256"
										}
									],
									"internalType": "struct LaunchpadStructs.FeeSystem",
									"name": "feeInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "deployer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "superAccount",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "fundAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "virtualLock",
											"type": "address"
										}
									],
									"internalType": "struct LaunchpadStructs.SettingAccount",
									"name": "settingAccount",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "logoURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "websiteURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "facebookURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "twitterURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "githubURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "telegramURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "instagramURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "discordURL",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "redditURL",
											"type": "string"
										}
									],
									"internalType": "struct LaunchpadStructs.SocialLinks",
									"name": "socialLinks",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "_maxLP",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_penaltyFeePercent",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getJoinedUsers()": "ae959e71",
							"getLaunchpadInfo()": "27b12bb2",
							"getOwnerZoneInfo(address)": "26009dca",
							"initialize((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint256),(bool,address,address,uint256,uint256,uint256),(uint256,uint256),(address,address,address,address),(string,string,string,string,string,string,string,string,string,string),uint256,uint256)": "57801e6f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getJoinedUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLaunchpadInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whitelistPool\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"logoURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"websiteURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"facebookURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitterURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"githubURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegramURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"instagramURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discordURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"redditURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"icoToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstReleasePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpLockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"presaleRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSoldTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"manualListing\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchpadStructs.LaunchpadReturnInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getOwnerZoneInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOwner\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"whitelistPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canFinalize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canCancel\",\"type\":\"bool\"}],\"internalType\":\"struct LaunchpadStructs.OwnerZoneInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"icoToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"presaleRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whitelistPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolType\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.LaunchpadInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"firstReleasePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriodEachCycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenReleaseEachCycle\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.ClaimInfo\",\"name\":\"userClaimInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"manualListing\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpLockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.DexInfo\",\"name\":\"dexInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"raisedFeePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedTokenFeePercent\",\"type\":\"uint256\"}],\"internalType\":\"struct LaunchpadStructs.FeeSystem\",\"name\":\"feeInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"superAccount\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"fundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"virtualLock\",\"type\":\"address\"}],\"internalType\":\"struct LaunchpadStructs.SettingAccount\",\"name\":\"settingAccount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"logoURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"websiteURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"facebookURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"twitterURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"githubURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telegramURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"instagramURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"discordURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"redditURL\",\"type\":\"string\"}],\"internalType\":\"struct LaunchpadStructs.SocialLinks\",\"name\":\"socialLinks\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_maxLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penaltyFeePercent\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ILaunchpad.sol\":\"ILaunchpad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ILaunchpad.sol\":{\"keccak256\":\"0xbcb55be0cda83f53ed135b0ee43ba04e85eef3b81b0d2cd6bd09104ddf5b1e25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d82f12a58d021725c137b353c5b15b3a0e21099e7cee55fd0a3597e0f335dfa9\",\"dweb:/ipfs/QmUfBMn3wE7VZGUybT942oX3MrdNeb5samzH6i2ooCSQe3\"]},\"structs/LaunchpadStructs.sol\":{\"keccak256\":\"0x048fc9070ffad4f4c9bdd83de5ee96893ec786a3fb5a31815d58160f94e20412\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d91d72d605cf6107d371a880a94501bb75065076fb54676c2d6b8c6cc5509a\",\"dweb:/ipfs/QmYzYkcJxWpyJidJraJSbRWL5zmSCDyN6PavvWqMQHm7P8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IVirtualERC20.sol": {
				"IVirtualERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IVirtualERC20.sol\":\"IVirtualERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"interfaces/IVirtualERC20.sol\":{\"keccak256\":\"0x30dce8de6983ddc4d507121740c18fba2cf54cd48db8a7ec664120905ca43d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8976b148f83794fddd5e32f3d7b4a9728a988330a702d6e8230678537b0f5ace\",\"dweb:/ipfs/QmZ7o9bWJRDJ6BsHym3GfsRT8fkGHZ4Ww6iNfYN2Qdk74m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"structs/LaunchpadStructs.sol": {
				"LaunchpadStructs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"structs/LaunchpadStructs.sol\":60:7830  library LaunchpadStructs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"structs/LaunchpadStructs.sol\":60:7830  library LaunchpadStructs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b80459b0681d7c578461808e4ebc3816f4cc91c5772eb5df00db54ff0d96e95564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b80459b0681d7c578461808e4ebc3816f4cc91c5772eb5df00db54ff0d96e95564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 DIV MSIZE 0xB0 PUSH9 0x1D7C578461808E4EBC CODESIZE AND DELEGATECALL 0xCC SWAP2 0xC5 PUSH24 0x2EB5DF00DB54FF0D96E95564736F6C634300081200330000 ",
							"sourceMap": "60:7770:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;60:7770:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b80459b0681d7c578461808e4ebc3816f4cc91c5772eb5df00db54ff0d96e95564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 DIV MSIZE 0xB0 PUSH9 0x1D7C578461808E4EBC CODESIZE AND DELEGATECALL 0xCC SWAP2 0xC5 PUSH24 0x2EB5DF00DB54FF0D96E95564736F6C634300081200330000 ",
							"sourceMap": "60:7770:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 60,
									"end": 7830,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b80459b0681d7c578461808e4ebc3816f4cc91c5772eb5df00db54ff0d96e95564736f6c63430008120033",
									".code": [
										{
											"begin": 60,
											"end": 7830,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 60,
											"end": 7830,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"LaunchpadFactory/Clones.sol",
								"LaunchpadFactory/LaunchpadFactory.sol",
								"interfaces/ILaunchpad.sol",
								"interfaces/IVirtualERC20.sol",
								"structs/LaunchpadStructs.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"structs/LaunchpadStructs.sol\":\"LaunchpadStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"structs/LaunchpadStructs.sol\":{\"keccak256\":\"0x048fc9070ffad4f4c9bdd83de5ee96893ec786a3fb5a31815d58160f94e20412\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d91d72d605cf6107d371a880a94501bb75065076fb54676c2d6b8c6cc5509a\",\"dweb:/ipfs/QmYzYkcJxWpyJidJraJSbRWL5zmSCDyN6PavvWqMQHm7P8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							542
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 543,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								542
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 190,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							520
						]
					},
					"id": 521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1478:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 201,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1702:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 200,
												"id": 206,
												"nodeType": "Return",
												"src": "1695:30:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1432:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1472:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:2"
									},
									"scope": 520,
									"src": "1412:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2718:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2761:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:2"
											},
											{
												"assignments": [
													228,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2813:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 227,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 235,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 229,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "2831:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 231,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2853:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "2882:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:2"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2666:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2693:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:2"
									},
									"scope": 520,
									"src": "2647:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3790:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3829:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 252,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "3807:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 251,
												"id": 258,
												"nodeType": "Return",
												"src": "3800:79:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3723:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3739:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:2"
									},
									"scope": 520,
									"src": "3701:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "4255:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4294:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4311:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 272,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "4272:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 271,
												"id": 278,
												"nodeType": "Return",
												"src": "4265:59:2"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4139:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4163:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4190:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4241:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:2"
									},
									"scope": 520,
									"src": "4108:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "4806:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4859:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 292,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "4823:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 298,
												"nodeType": "Return",
												"src": "4816:94:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4724:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4740:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4759:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4792:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:2"
									},
									"scope": 520,
									"src": "4693:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "5344:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 317,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		],
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 315,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5387:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:2"
											},
											{
												"assignments": [
													326,
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "5446:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 325,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "5460:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 327,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"arguments": [
														{
															"id": 333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5513:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 329,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5487:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 331,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5506:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5562:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5570:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 339,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5579:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 340,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5591:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 336,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "5535:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 342,
												"nodeType": "Return",
												"src": "5528:76:2"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5205:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5229:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5256:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5279:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5330:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:2"
									},
									"scope": 520,
									"src": "5165:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5888:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5924:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5932:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 354,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															390
														],
														"referencedDeclaration": 390,
														"src": "5905:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "5898:80:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5816:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5832:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5874:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:2"
									},
									"scope": 520,
									"src": "5788:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "6327:168:2",
										"statements": [
											{
												"assignments": [
													374,
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6338:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 373,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6352:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"arguments": [
														{
															"id": 379,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6397:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6379:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6446:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 385,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6463:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6475:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "6419:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 388,
												"nodeType": "Return",
												"src": "6412:76:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6206:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6230:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6257:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6313:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:2"
									},
									"scope": 520,
									"src": "6169:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "6771:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "6809:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6817:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 400,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															407,
															436
														],
														"referencedDeclaration": 436,
														"src": "6788:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "6781:84:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6704:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6720:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6757:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:2"
									},
									"scope": 520,
									"src": "6674:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "7213:170:2",
										"statements": [
											{
												"assignments": [
													420,
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7224:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 419,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7238:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 421,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [
														{
															"id": 425,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 423,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7265:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:2",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7334:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7342:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 431,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7351:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7363:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "7307:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 418,
												"id": 434,
												"nodeType": "Return",
												"src": "7300:76:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7097:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7121:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7148:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7199:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:2"
									},
									"scope": 520,
									"src": "7058:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "7865:434:2",
										"statements": [
											{
												"condition": {
													"id": 450,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "7879:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "8235:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 468,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "8257:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 469,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "8269:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 467,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:2"
														}
													]
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "7875:418:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "7888:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 451,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "7906:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 463,
															"nodeType": "IfStatement",
															"src": "7902:286:2",
															"trueBody": {
																"id": 462,
																"nodeType": "Block",
																"src": "7930:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 457,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 439,
																							"src": "8132:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 456,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 208,
																						"src": "8121:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 455,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 461,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "8208:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 449,
															"id": 465,
															"nodeType": "Return",
															"src": "8201:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7716:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7740:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7762:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7795:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:2"
									},
									"scope": 520,
									"src": "7671:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "8680:135:2",
										"statements": [
											{
												"condition": {
													"id": 487,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 496,
													"nodeType": "Block",
													"src": "8751:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 492,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "8773:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 493,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "8785:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 491,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8765:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:2"
														}
													]
												},
												"id": 497,
												"nodeType": "IfStatement",
												"src": "8690:119:2",
												"trueBody": {
													"id": 490,
													"nodeType": "Block",
													"src": "8703:42:2",
													"statements": [
														{
															"expression": {
																"id": 488,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8724:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 486,
															"id": 489,
															"nodeType": "Return",
															"src": "8717:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8555:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8666:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:2"
									},
									"scope": 520,
									"src": "8520:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "8904:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 506,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "8980:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "9310:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 513,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "9331:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 512,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:2"
														}
													]
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "8976:379:2",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "9003:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 501,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 501,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:2",
																	"valueSize": 1
																}
															],
															"id": 510,
															"nodeType": "InlineAssembly",
															"src": "9152:142:2"
														}
													]
												}
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "8838:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "8863:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:2"
									},
									"scope": 520,
									"src": "8821:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 521,
							"src": "194:9169:2",
							"usedErrors": []
						}
					],
					"src": "101:9263:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 523,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 527,
												"id": 530,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 542,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 537,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 536,
												"id": 539,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 542,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 543,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							854
						]
					},
					"id": 855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 545,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															558
														],
														"declarations": [
															{
																"constant": false,
																"id": 558,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 575,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 557,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 562,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 560,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 563,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 564,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 568,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 556,
															"id": 569,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 572,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 573,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 556,
														"id": 574,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 854,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 603,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 590,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 588,
															"id": 595,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 598,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 599,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 601,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 588,
														"id": 602,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 854,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 645,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 624,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 616,
															"id": 623,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															626
														],
														"declarations": [
															{
																"constant": false,
																"id": 626,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 645,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 630,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 627,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 631,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 632,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 634,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 640,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 616,
															"id": 639,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 642,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 616,
														"id": 644,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 854,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 673,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 666,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 658,
															"id": 665,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 668,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 669,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 671,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 658,
														"id": 672,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 854,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 701,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 694,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 686,
															"id": 693,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 696,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 697,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 699,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 686,
														"id": 700,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 854,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 713,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 714,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 716,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 854,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 728,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 729,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 731,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 854,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 742,
												"id": 746,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 854,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 759,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 761,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 854,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 776,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 854,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5054:106:4",
										"statements": [
											{
												"id": 801,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 791,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "5096:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 792,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "5101:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 794,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "5104:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 790,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 796,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "5138:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "5142:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 789,
														"id": 800,
														"nodeType": "Return",
														"src": "5131:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4972:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4994:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5045:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:4"
									},
									"scope": 854,
									"src": "4959:201:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "5739:105:4",
										"statements": [
											{
												"id": 826,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "5781:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 819,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5788:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 815,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 821,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "5822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 823,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "5826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 814,
														"id": 825,
														"nodeType": "Return",
														"src": "5815:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5679:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:4"
									},
									"scope": 854,
									"src": "5644:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "6585:105:4",
										"statements": [
											{
												"id": 851,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "6627:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 844,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "6634:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 840,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 847,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "6668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 848,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "6672:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 839,
														"id": 850,
														"nodeType": "Return",
														"src": "6661:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6503:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6514:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6525:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:4"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:4"
									},
									"scope": 854,
									"src": "6490:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 855,
							"src": "482:6210:4",
							"usedErrors": []
						}
					],
					"src": "107:6586:4"
				},
				"id": 4
			},
			"LaunchpadFactory/Clones.sol": {
				"ast": {
					"absolutePath": "LaunchpadFactory/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							934
						]
					},
					"id": 935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 857,
								"nodeType": "StructuredDocumentation",
								"src": "130:641:5",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 934,
							"linearizedBaseContracts": [
								934
							],
							"name": "Clones",
							"nameLocation": "781:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "1072:695:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1136:556:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1357:4:5",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1367:4:5",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "1373:14:5"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1363:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1363:25:5"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:36:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1391:48:5",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1350:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:90:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:104:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:104:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1577:4:5",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "1583:14:5"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1573:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1573:25:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1600:32:5",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1570:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1570:63:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:77:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1557:77:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1648:33:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:4:5",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1676:4:5",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:21:5"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1648:8:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": false,
														"src": "1373:14:5",
														"valueSize": 1
													},
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:14:5",
														"valueSize": 1
													},
													{
														"declaration": 863,
														"isOffset": false,
														"isSlot": false,
														"src": "1648:8:5",
														"valueSize": 1
													}
												],
												"id": 865,
												"nodeType": "InlineAssembly",
												"src": "1127:565:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "1710:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1730:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 868,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1722:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1710:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1734:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1702:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1702:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "1702:57:5"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "795:196:5",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1006:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1020:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "1012:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:24:5"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1062:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "1054:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:18:5"
									},
									"scope": 934,
									"src": "997:770:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "2253:703:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2317:563:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2525:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2538:4:5",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2548:4:5",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "2554:14:5"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2544:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2544:25:5"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2534:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2534:36:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2572:48:5",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2531:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2531:90:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:104:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2518:104:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2758:4:5",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "2764:14:5"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2754:25:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2781:32:5",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:63:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2738:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:77:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2738:77:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2829:40:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:5",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2858:4:5",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2864:4:5"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2841:7:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:28:5"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2829:8:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "2554:14:5",
														"valueSize": 1
													},
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "2764:14:5",
														"valueSize": 1
													},
													{
														"declaration": 885,
														"isOffset": false,
														"isSlot": false,
														"src": "2829:8:5",
														"valueSize": 1
													},
													{
														"declaration": 882,
														"isOffset": false,
														"isSlot": false,
														"src": "2864:4:5",
														"valueSize": 1
													}
												],
												"id": 887,
												"nodeType": "InlineAssembly",
												"src": "2308:572:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "2898:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2918:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2910:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2910:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2910:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2898:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2922:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2890:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2890:58:5"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "1775:370:5",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2160:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2187:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2179:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2211:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2203:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:38:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2243:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2235:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:18:5"
									},
									"scope": 934,
									"src": "2151:805:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "3240:527:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3304:456:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3319:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3330:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:11:5"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "3323:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3366:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3371:4:5",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3362:14:5"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3378:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3355:32:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3412:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3417:4:5",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:34:5",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3484:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3489:4:5",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3480:14:5"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "3496:14:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3473:38:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3532:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3537:42:5",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3525:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3525:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3605:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:4:5",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3601:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3601:14:5"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3617:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3594:28:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3647:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3652:4:5",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3673:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3678:4:5",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3669:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3669:14:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:4:5",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3659:9:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3659:31:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3636:55:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3705:44:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3732:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3737:4:5",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3728:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3728:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3744:4:5",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:31:5"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3705:9:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 906,
														"isOffset": false,
														"isSlot": false,
														"src": "3378:8:5",
														"valueSize": 1
													},
													{
														"declaration": 902,
														"isOffset": false,
														"isSlot": false,
														"src": "3496:14:5",
														"valueSize": 1
													},
													{
														"declaration": 909,
														"isOffset": false,
														"isSlot": false,
														"src": "3705:9:5",
														"valueSize": 1
													},
													{
														"declaration": 904,
														"isOffset": false,
														"isSlot": false,
														"src": "3617:4:5",
														"valueSize": 1
													}
												],
												"id": 911,
												"nodeType": "InlineAssembly",
												"src": "3295:465:5"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "2964:101:5",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3080:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3126:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3118:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3159:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3151:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 903,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3182:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3174:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:90:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3229:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3221:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:19:5"
									},
									"scope": 934,
									"src": "3071:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "4024:90:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4070:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "4086:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 928,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4100:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$934",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$934",
																		"typeString": "library Clones"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4092:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4092:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4092:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 923,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															913,
															933
														],
														"referencedDeclaration": 913,
														"src": "4042:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 922,
												"id": 931,
												"nodeType": "Return",
												"src": "4035:71:5"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "3775:101:5",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3891:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3937:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3929:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3970:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "3962:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 917,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:63:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4013:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4005:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:19:5"
									},
									"scope": 934,
									"src": "3882:232:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 935,
							"src": "773:3344:5",
							"usedErrors": []
						}
					],
					"src": "103:4014:5"
				},
				"id": 5
			},
			"LaunchpadFactory/LaunchpadFactory.sol": {
				"ast": {
					"absolutePath": "LaunchpadFactory/LaunchpadFactory.sol",
					"exportedSymbols": {
						"Address": [
							520
						],
						"Clones": [
							934
						],
						"Context": [
							542
						],
						"IERC20": [
							190
						],
						"ILaunchpad": [
							1574
						],
						"IVirtualERC20": [
							1585
						],
						"LaunchpadFactory": [
							1525
						],
						"LaunchpadStructs": [
							1753
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							854
						]
					},
					"id": 1526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 936,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 113,
							"src": "61:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 521,
							"src": "115:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 855,
							"src": "168:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 191,
							"src": "227:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "LaunchpadFactory/Clones.sol",
							"file": "./Clones.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 935,
							"src": "285:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "structs/LaunchpadStructs.sol",
							"file": "../structs/LaunchpadStructs.sol",
							"id": 942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 1754,
							"src": "309:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ILaunchpad.sol",
							"file": "../interfaces/ILaunchpad.sol",
							"id": 943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 1575,
							"src": "352:38:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IVirtualERC20.sol",
							"file": "../interfaces/IVirtualERC20.sol",
							"id": 944,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 1586,
							"src": "392:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 945,
										"name": "Ownable",
										"nameLocations": [
											"466:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "466:7:6"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "466:7:6"
								}
							],
							"canonicalName": "LaunchpadFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1525,
							"linearizedBaseContracts": [
								1525,
								112,
								542
							],
							"name": "LaunchpadFactory",
							"nameLocation": "446:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 949,
									"libraryName": {
										"id": 947,
										"name": "SafeMath",
										"nameLocations": [
											"487:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 854,
										"src": "487:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "481:27:6",
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "500:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 952,
									"libraryName": {
										"id": 950,
										"name": "Address",
										"nameLocations": [
											"520:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "520:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "514:34:6",
									"typeName": {
										"id": 951,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "532:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "58e5bc88",
									"id": 955,
									"mutability": "constant",
									"name": "ZOOM",
									"nameLocation": "578:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "554:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "554:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "585:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d9eb5947",
									"id": 957,
									"mutability": "mutable",
									"name": "flatFee",
									"nameLocation": "614:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "599:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a9b66cc",
									"id": 960,
									"mutability": "mutable",
									"name": "penaltyFeePercent",
									"nameLocation": "701:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "686:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "686:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "721:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6b7913e",
									"id": 962,
									"mutability": "mutable",
									"name": "superAccount",
									"nameLocation": "878:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "863:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 961,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "863:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "640f82f3",
									"id": 964,
									"mutability": "mutable",
									"name": "virtualLock",
									"nameLocation": "912:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "897:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e82bef29",
									"id": 966,
									"mutability": "mutable",
									"name": "fundAddress",
									"nameLocation": "953:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "930:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 965,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "930:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 968,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "1037:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "1022:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 967,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1022:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53aca078",
									"id": 972,
									"mutability": "mutable",
									"name": "allLaunchpads",
									"nameLocation": "1157:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "1137:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage",
										"typeString": "contract ILaunchpad[]"
									},
									"typeName": {
										"baseType": {
											"id": 970,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 969,
												"name": "ILaunchpad",
												"nameLocations": [
													"1137:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1574,
												"src": "1137:10:6"
											},
											"referencedDeclaration": 1574,
											"src": "1137:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ILaunchpad_$1574",
												"typeString": "contract ILaunchpad"
											}
										},
										"id": 971,
										"nodeType": "ArrayTypeName",
										"src": "1137:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr",
											"typeString": "contract ILaunchpad[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 978,
									"mutability": "mutable",
									"name": "allLaunchpadsOf",
									"nameLocation": "1272:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1525,
									"src": "1230:57:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_$",
										"typeString": "mapping(address => contract ILaunchpad[])"
									},
									"typeName": {
										"id": 977,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1239:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1230:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_$",
											"typeString": "mapping(address => contract ILaunchpad[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 975,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 974,
													"name": "ILaunchpad",
													"nameLocations": [
														"1250:10:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1574,
													"src": "1250:10:6"
												},
												"referencedDeclaration": 1574,
												"src": "1250:10:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILaunchpad_$1574",
													"typeString": "contract ILaunchpad"
												}
											},
											"id": 976,
											"nodeType": "ArrayTypeName",
											"src": "1250:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr",
												"typeString": "contract ILaunchpad[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "da2d0d8f4060e08dd20f6fb6ad959f9920958220cc60733db44068db43a02601",
									"id": 982,
									"name": "NewLaunchpad",
									"nameLocation": "1358:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "launchpad",
												"nameLocation": "1387:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1371:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:27:6"
									},
									"src": "1352:46:6"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1590:723:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 994,
																	"name": "_virtualLock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "1705:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1729:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1721:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 995,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1721:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1721:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1705:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1000,
																	"name": "_virtualLock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "1735:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1003,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1759:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																				"typeString": "contract LaunchpadFactory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																				"typeString": "contract LaunchpadFactory"
																			}
																		],
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1751:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1001,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1751:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1751:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1735:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1705:59:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c61756368706164466163746f72793a207669727475616c4c6f636b",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1779:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_147beb0e1eb50330f094fb5a2cf2dea65f905b53a95e86b923bda11e09d02ee9",
																"typeString": "literal_string \"LauchpadFactory: virtualLock\""
															},
															"value": "LauchpadFactory: virtualLock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_147beb0e1eb50330f094fb5a2cf2dea65f905b53a95e86b923bda11e09d02ee9",
																"typeString": "literal_string \"LauchpadFactory: virtualLock\""
															}
														],
														"id": 993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1683:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1683:137:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1683:137:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "_superAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "1853:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1878:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1870:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1012,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1870:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1870:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1853:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1017,
																	"name": "_superAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "1884:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1020,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1909:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																				"typeString": "contract LaunchpadFactory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																				"typeString": "contract LaunchpadFactory"
																			}
																		],
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1018,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1901:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1901:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1884:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1853:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c61756368706164466163746f72793a2073757065724163636f756e74",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1929:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f9a2507c7b147ab3d45e436d0f2c46e29f97c8ef7e74b4746c9b5be7a1e306b",
																"typeString": "literal_string \"LauchpadFactory: superAccount\""
															},
															"value": "LauchpadFactory: superAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f9a2507c7b147ab3d45e436d0f2c46e29f97c8ef7e74b4746c9b5be7a1e306b",
																"typeString": "literal_string \"LauchpadFactory: superAccount\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1831:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1831:140:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1831:140:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1028,
																	"name": "_fundAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "2004:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2028:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2020:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1029,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2020:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2020:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2004:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1034,
																	"name": "_fundAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "2034:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1037,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2058:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																				"typeString": "contract LaunchpadFactory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																				"typeString": "contract LaunchpadFactory"
																			}
																		],
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2050:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1035,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2050:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2050:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2034:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2004:59:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c61756368706164466163746f72793a2066756e6441646472657373",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2078:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a2f1e506d49101456fbd9676a9d516df204d5534e23ef6bb7b68e682ea6cb86",
																"typeString": "literal_string \"LauchpadFactory: fundAddress\""
															},
															"value": "LauchpadFactory: fundAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a2f1e506d49101456fbd9676a9d516df204d5534e23ef6bb7b68e682ea6cb86",
																"typeString": "literal_string \"LauchpadFactory: fundAddress\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1982:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:137:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1982:137:6"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "superAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2160:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1045,
														"name": "_superAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2175:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2160:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "2160:28:6"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1048,
														"name": "fundAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2199:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "_fundAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2213:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2199:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2199:26:6"
											},
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "virtualLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2236:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "_virtualLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2250:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2236:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "2236:26:6"
											},
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1056,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2273:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1057,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2290:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2273:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "2273:32:6"
											}
										]
									},
									"id": 1061,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_superAccount",
												"nameLocation": "1465:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1457:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "_virtualLock",
												"nameLocation": "1497:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1489:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "_fundAddress",
												"nameLocation": "1536:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1520:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1520:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "1567:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1559:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:172:6"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1590:0:6"
									},
									"scope": 1525,
									"src": "1406:907:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "2493:47:6",
										"statements": [
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "superAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2504:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "_superAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "2519:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2504:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "2504:28:6"
											}
										]
									},
									"functionSelector": "892f78fa",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1065,
												"name": "onlyOwner",
												"nameLocations": [
													"2483:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2483:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2483:9:6"
										}
									],
									"name": "setSuperAccount",
									"nameLocation": "2437:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "_superAccount",
												"nameLocation": "2461:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2453:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:23:6"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:6"
									},
									"scope": 1525,
									"src": "2428:112:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2611:45:6",
										"statements": [
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1080,
														"name": "virtualLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2622:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1081,
														"name": "_virtualLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "2636:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2622:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2622:26:6"
											}
										]
									},
									"functionSelector": "5a416a36",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1077,
												"name": "onlyOwner",
												"nameLocations": [
													"2601:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2601:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2601:9:6"
										}
									],
									"name": "setVirtualLock",
									"nameLocation": "2557:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "_virtualLock",
												"nameLocation": "2580:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2572:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:22:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:0:6"
									},
									"scope": 1525,
									"src": "2548:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "2735:45:6",
										"statements": [
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1092,
														"name": "fundAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2746:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1093,
														"name": "_fundAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2760:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2746:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "2746:26:6"
											}
										]
									},
									"functionSelector": "85dc3004",
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "onlyOwner",
												"nameLocations": [
													"2725:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2725:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2725:9:6"
										}
									],
									"name": "setFundAddress",
									"nameLocation": "2673:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_fundAddress",
												"nameLocation": "2704:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2688:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2687:30:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:0:6"
									},
									"scope": 1525,
									"src": "2664:116:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "2843:37:6",
										"statements": [
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "flatFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "2854:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1105,
														"name": "_flatFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2864:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2854:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2854:18:6"
											}
										]
									},
									"functionSelector": "23fa495a",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1101,
												"name": "onlyOwner",
												"nameLocations": [
													"2833:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2833:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2833:9:6"
										}
									],
									"name": "setFlatFee",
									"nameLocation": "2797:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "_flatFee",
												"nameLocation": "2816:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2808:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:18:6"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2843:0:6"
									},
									"scope": 1525,
									"src": "2788:92:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "2962:89:6",
										"statements": [
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "penaltyFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2973:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"id": 1117,
																	"name": "_penaltyFeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "2994:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1118,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2993:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2993:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2973:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "2973:46:6"
											}
										]
									},
									"functionSelector": "51ae878f",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "onlyOwner",
												"nameLocations": [
													"2952:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2952:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2952:9:6"
										}
									],
									"name": "setPenalyFeePercent",
									"nameLocation": "2897:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "_penaltyFeePercent",
												"nameLocation": "2925:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2917:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:28:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2962:0:6"
									},
									"scope": 1525,
									"src": "2888:163:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "3129:51:6",
										"statements": [
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "3140:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1132,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "3157:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3140:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "3140:32:6"
											}
										]
									},
									"functionSelector": "9352dace",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1129,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1128,
												"name": "onlyOwner",
												"nameLocations": [
													"3119:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3119:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3119:9:6"
										}
									],
									"name": "setImplementations",
									"nameLocation": "3068:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "3095:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "3087:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3087:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3086:25:6"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3129:0:6"
									},
									"scope": 1525,
									"src": "3059:121:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "3780:889:6",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "feeTokenDecimals",
														"nameLocation": "3799:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "3791:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"hexValue": "3138",
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3818:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3791:29:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1150,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "3835:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3841:8:6",
														"memberName": "feeToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1718,
														"src": "3835:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3861:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1152,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3853:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3853:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3835:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "3831:120:6",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "3865:86:6",
													"statements": [
														{
															"expression": {
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1157,
																	"name": "feeTokenDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "3880:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1159,
																						"name": "input",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1139,
																						"src": "3913:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																							"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																						}
																					},
																					"id": 1160,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3919:8:6",
																					"memberName": "feeToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1718,
																					"src": "3913:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1158,
																				"name": "IVirtualERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "3899:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IVirtualERC20_$1585_$",
																					"typeString": "type(contract IVirtualERC20)"
																				}
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3899:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IVirtualERC20_$1585",
																				"typeString": "contract IVirtualERC20"
																			}
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3929:8:6",
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1584,
																		"src": "3899:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3899:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3880:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "3880:59:6"
														}
													]
												}
											},
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "totalPresaleTokens",
														"nameLocation": "3971:18:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "3963:26:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3963:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4037:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 1180,
																"name": "feeTokenDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "4043:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4037:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"components": [
																				{
																					"expression": {
																						"id": 1173,
																						"name": "input",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1139,
																						"src": "4016:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																							"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																						}
																					},
																					"id": 1174,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4022:7:6",
																					"memberName": "hardCap",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1722,
																					"src": "4016:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1175,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4015:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1170,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "3993:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																					"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																				}
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3999:11:6",
																			"memberName": "presaleRate",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1720,
																			"src": "3993:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4011:3:6",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 748,
																		"src": "3993:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3993:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3992:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4033:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "3992:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3963:97:6"
											},
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "totalFeeTokens",
														"nameLocation": "4081:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "4073:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4073:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"arguments": [
														{
															"id": 1193,
															"name": "ZOOM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4156:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1188,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "4122:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																					"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4128:21:6",
																			"memberName": "raisedTokenFeePercent",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1724,
																			"src": "4122:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1186,
																			"name": "totalPresaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "4099:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4118:3:6",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 748,
																		"src": "4099:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4099:51:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1191,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4098:53:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4152:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "4098:57:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4098:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4073:88:6"
											},
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "totalRaisedFee",
														"nameLocation": "4182:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "4174:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4174:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"arguments": [
														{
															"id": 1206,
															"name": "ZOOM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4247:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1201,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "4218:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																					"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																				}
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4224:16:6",
																			"memberName": "raisedFeePercent",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1726,
																			"src": "4218:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1198,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "4200:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																					"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																				}
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4206:7:6",
																			"memberName": "hardCap",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1722,
																			"src": "4200:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4214:3:6",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 748,
																		"src": "4200:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4200:41:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1204,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4199:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4243:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "4199:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4199:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4174:78:6"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "netCap",
														"nameLocation": "4271:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "4263:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4263:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"arguments": [
														{
															"id": 1214,
															"name": "totalRaisedFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "4298:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1211,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "4280:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																	"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4286:7:6",
															"memberName": "hardCap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "4280:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4294:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "4280:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4280:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4263:50:6"
											},
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "totalFeeTokensToAddLP",
														"nameLocation": "4332:21:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "4324:29:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4324:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1228,
												"initialValue": {
													"arguments": [
														{
															"id": 1226,
															"name": "ZOOM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4395:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1221,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "4368:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																					"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																				}
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4374:14:6",
																			"memberName": "listingPercent",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1728,
																			"src": "4368:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1219,
																			"name": "netCap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "4357:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4364:3:6",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 748,
																		"src": "4357:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4357:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1224,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4356:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4391:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "4356:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4356:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4324:76:6"
											},
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "totalLiquidityTokens",
														"nameLocation": "4421:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "4413:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4413:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4496:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"id": 1239,
																"name": "feeTokenDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "4502:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4496:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1233,
																				"name": "input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "4471:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																					"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																				}
																			},
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4477:12:6",
																			"memberName": "listingPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1730,
																			"src": "4471:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1231,
																			"name": "totalFeeTokensToAddLP",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "4445:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4467:3:6",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 748,
																		"src": "4445:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4445:45:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4444:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4492:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "4444:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4444:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4413:106:6"
											},
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4540:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "4532:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"arguments": [
														{
															"id": 1250,
															"name": "totalLiquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4592:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1247,
																	"name": "totalFeeTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "4572:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1245,
																	"name": "totalPresaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "4549:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4568:3:6",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 718,
																"src": "4549:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4549:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4588:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "4549:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4549:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:81:6"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1253,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "4632:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1254,
															"name": "totalLiquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4640:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1255,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4631:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1256,
												"nodeType": "Return",
												"src": "4624:37:6"
											}
										]
									},
									"functionSelector": "a96df743",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokens",
									"nameLocation": "3658:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "3728:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "3684:49:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
													"typeString": "struct LaunchpadStructs.CalculateTokenInput"
												},
												"typeName": {
													"id": 1138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1137,
														"name": "LaunchpadStructs.CalculateTokenInput",
														"nameLocations": [
															"3684:16:6",
															"3701:19:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1731,
														"src": "3684:36:6"
													},
													"referencedDeclaration": 1731,
													"src": "3684:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_storage_ptr",
														"typeString": "struct LaunchpadStructs.CalculateTokenInput"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3673:67:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "3762:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "3771:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:18:6"
									},
									"scope": 1525,
									"src": "3649:1020:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "5167:3043:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1277,
																	"name": "superAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "5244:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5268:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5260:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1278,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5260:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5260:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5244:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "fundAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "5291:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5314:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5306:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5306:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5306:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5291:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5244:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c61756368706164466163746f72793a2043616e206e6f7420637265617465206c61756e6368706164206e6f7721",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5331:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b91dc6979b3010cccd811b0aab4381cf4a75f22b4396ee3e49079bff0b514fb7",
																"typeString": "literal_string \"LauchpadFactory: Can not create launchpad now!\""
															},
															"value": "LauchpadFactory: Can not create launchpad now!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b91dc6979b3010cccd811b0aab4381cf4a75f22b4396ee3e49079bff0b514fb7",
																"typeString": "literal_string \"LauchpadFactory: Can not create launchpad now!\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5178:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5178:212:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "5178:212:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1294,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5409:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5413:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5409:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1296,
																"name": "flatFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "5422:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5409:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c61756368706164466163746f72793a204e6f7420656e6f7567682066656521",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5431:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c36b3e31db1859d356e014d0458bf608b52a4d51c5d7a20c308eb171769be412",
																"typeString": "literal_string \"LauchpadFactory: Not enough fee!\""
															},
															"value": "LauchpadFactory: Not enough fee!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c36b3e31db1859d356e014d0458bf608b52a4d51c5d7a20c308eb171769be412",
																"typeString": "literal_string \"LauchpadFactory: Not enough fee!\""
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5401:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5401:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "5401:65:6"
											},
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "settingAccount",
														"nameLocation": "5659:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "5620:53:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SettingAccount_$1716_memory_ptr",
															"typeString": "struct LaunchpadStructs.SettingAccount"
														},
														"typeName": {
															"id": 1304,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1303,
																"name": "LaunchpadStructs.SettingAccount",
																"nameLocations": [
																	"5620:16:6",
																	"5637:14:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1716,
																"src": "5620:31:6"
															},
															"referencedDeclaration": 1716,
															"src": "5620:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SettingAccount_$1716_storage_ptr",
																"typeString": "struct LaunchpadStructs.SettingAccount"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1308,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5740:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5740:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "superAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "5799:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1313,
																	"name": "fundAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "5838:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5830:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1311,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5830:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1315,
															"name": "virtualLock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "5869:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1306,
															"name": "LaunchpadStructs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "5676:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LaunchpadStructs_$1753_$",
																"typeString": "type(library LaunchpadStructs)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5707:14:6",
														"memberName": "SettingAccount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1716,
														"src": "5676:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SettingAccount_$1716_storage_ptr_$",
															"typeString": "type(struct LaunchpadStructs.SettingAccount storage pointer)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5676:219:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SettingAccount_$1716_memory_ptr",
														"typeString": "struct LaunchpadStructs.SettingAccount memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5620:275:6"
											},
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "icoToken",
														"nameLocation": "5922:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "5908:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVirtualERC20_$1585",
															"typeString": "contract IVirtualERC20"
														},
														"typeName": {
															"id": 1319,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1318,
																"name": "IVirtualERC20",
																"nameLocations": [
																	"5908:13:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1585,
																"src": "5908:13:6"
															},
															"referencedDeclaration": 1585,
															"src": "5908:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVirtualERC20_$1585",
																"typeString": "contract IVirtualERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1322,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "5947:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																	"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5952:8:6",
															"memberName": "icoToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1589,
															"src": "5947:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1321,
														"name": "IVirtualERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "5933:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IVirtualERC20_$1585_$",
															"typeString": "type(contract IVirtualERC20)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5933:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVirtualERC20_$1585",
														"typeString": "contract IVirtualERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5908:53:6"
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "feeTokenDecimals",
														"nameLocation": "5980:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "5972:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5972:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"hexValue": "3138",
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5999:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5972:29:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1330,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6016:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6021:8:6",
														"memberName": "feeToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1591,
														"src": "6016:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6041:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6033:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1332,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6033:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6033:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6016:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"nodeType": "IfStatement",
												"src": "6012:118:6",
												"trueBody": {
													"id": 1346,
													"nodeType": "Block",
													"src": "6045:85:6",
													"statements": [
														{
															"expression": {
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1337,
																	"name": "feeTokenDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "6060:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1339,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1261,
																						"src": "6093:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																							"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
																						}
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6098:8:6",
																					"memberName": "feeToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1591,
																					"src": "6093:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1338,
																				"name": "IVirtualERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "6079:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IVirtualERC20_$1585_$",
																					"typeString": "type(contract IVirtualERC20)"
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6079:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IVirtualERC20_$1585",
																				"typeString": "contract IVirtualERC20"
																			}
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6108:8:6",
																		"memberName": "decimals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1584,
																		"src": "6079:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																			"typeString": "function () view external returns (uint8)"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6079:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6060:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1345,
															"nodeType": "ExpressionStatement",
															"src": "6060:58:6"
														}
													]
												}
											},
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "input",
														"nameLocation": "6186:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "6142:49:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
															"typeString": "struct LaunchpadStructs.CalculateTokenInput"
														},
														"typeName": {
															"id": 1351,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1350,
																"name": "LaunchpadStructs.CalculateTokenInput",
																"nameLocations": [
																	"6142:16:6",
																	"6159:19:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1731,
																"src": "6142:36:6"
															},
															"referencedDeclaration": 1731,
															"src": "6142:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_storage_ptr",
																"typeString": "struct LaunchpadStructs.CalculateTokenInput"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1355,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "6263:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																	"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6268:8:6",
															"memberName": "feeToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1591,
															"src": "6263:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1357,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "6295:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																	"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6300:11:6",
															"memberName": "presaleRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1597,
															"src": "6295:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1359,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "6330:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																	"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6335:7:6",
															"memberName": "hardCap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1595,
															"src": "6330:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1361,
																"name": "feeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "6361:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeSystem_$1707_memory_ptr",
																	"typeString": "struct LaunchpadStructs.FeeSystem memory"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6369:21:6",
															"memberName": "raisedTokenFeePercent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1706,
															"src": "6361:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1363,
																"name": "feeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "6409:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeSystem_$1707_memory_ptr",
																	"typeString": "struct LaunchpadStructs.FeeSystem memory"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6417:16:6",
															"memberName": "raisedFeePercent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1704,
															"src": "6409:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1365,
																"name": "dexInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "6452:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DexInfo_$1630_memory_ptr",
																	"typeString": "struct LaunchpadStructs.DexInfo memory"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6460:14:6",
															"memberName": "listingPercent",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1627,
															"src": "6452:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1367,
																"name": "dexInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "6493:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DexInfo_$1630_memory_ptr",
																	"typeString": "struct LaunchpadStructs.DexInfo memory"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6501:12:6",
															"memberName": "listingPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1625,
															"src": "6493:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1353,
															"name": "LaunchpadStructs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "6194:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LaunchpadStructs_$1753_$",
																"typeString": "type(library LaunchpadStructs)"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6225:19:6",
														"memberName": "CalculateTokenInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1731,
														"src": "6194:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_CalculateTokenInput_$1731_storage_ptr_$",
															"typeString": "type(struct LaunchpadStructs.CalculateTokenInput storage pointer)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6194:334:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
														"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6142:386:6"
											},
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "6549:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "6541:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6541:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"nodeType": "VariableDeclarationStatement",
												"src": "6541:19:6"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "maxLP",
														"nameLocation": "6579:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "6571:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6571:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"nodeType": "VariableDeclarationStatement",
												"src": "6571:13:6"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1377,
																"name": "totalTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "6598:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1378,
																"name": "maxLP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "6611:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6597:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1381,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "6636:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																	"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_CalculateTokenInput_$1731_memory_ptr",
																	"typeString": "struct LaunchpadStructs.CalculateTokenInput memory"
																}
															],
															"id": 1380,
															"name": "calculateTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "6620:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_CalculateTokenInput_$1731_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct LaunchpadStructs.CalculateTokenInput memory) view returns (uint256,uint256)"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6620:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "6597:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "6597:45:6"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "launchpad",
														"nameLocation": "6696:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "6688:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1385,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6688:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"arguments": [
														{
															"id": 1389,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "6721:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1387,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "6708:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$934_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6715:5:6",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 877,
														"src": "6708:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6708:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6688:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1396,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6843:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
															}
														},
														{
															"id": 1397,
															"name": "claimInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "6862:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimInfo_$1617_memory_ptr",
																"typeString": "struct LaunchpadStructs.ClaimInfo memory"
															}
														},
														{
															"id": 1398,
															"name": "dexInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "6919:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DexInfo_$1630_memory_ptr",
																"typeString": "struct LaunchpadStructs.DexInfo memory"
															}
														},
														{
															"id": 1399,
															"name": "feeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "6941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeSystem_$1707_memory_ptr",
																"typeString": "struct LaunchpadStructs.FeeSystem memory"
															}
														},
														{
															"id": 1400,
															"name": "settingAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "6963:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SettingAccount_$1716_memory_ptr",
																"typeString": "struct LaunchpadStructs.SettingAccount memory"
															}
														},
														{
															"id": 1401,
															"name": "socialLinks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "6992:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SocialLinks_$1752_memory_ptr",
																"typeString": "struct LaunchpadStructs.SocialLinks memory"
															}
														},
														{
															"id": 1402,
															"name": "maxLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "7018:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1403,
															"name": "penaltyFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "7038:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
															},
															{
																"typeIdentifier": "t_struct$_ClaimInfo_$1617_memory_ptr",
																"typeString": "struct LaunchpadStructs.ClaimInfo memory"
															},
															{
																"typeIdentifier": "t_struct$_DexInfo_$1630_memory_ptr",
																"typeString": "struct LaunchpadStructs.DexInfo memory"
															},
															{
																"typeIdentifier": "t_struct$_FeeSystem_$1707_memory_ptr",
																"typeString": "struct LaunchpadStructs.FeeSystem memory"
															},
															{
																"typeIdentifier": "t_struct$_SettingAccount_$1716_memory_ptr",
																"typeString": "struct LaunchpadStructs.SettingAccount memory"
															},
															{
																"typeIdentifier": "t_struct$_SocialLinks_$1752_memory_ptr",
																"typeString": "struct LaunchpadStructs.SocialLinks memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1393,
																	"name": "launchpad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "6807:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1392,
																"name": "ILaunchpad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "6796:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILaunchpad_$1574_$",
																	"typeString": "type(contract ILaunchpad)"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6796:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILaunchpad_$1574",
																"typeString": "contract ILaunchpad"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6818:10:6",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1553,
														"src": "6796:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_struct$_LaunchpadInfo_$1610_memory_ptr_$_t_struct$_ClaimInfo_$1617_memory_ptr_$_t_struct$_DexInfo_$1630_memory_ptr_$_t_struct$_FeeSystem_$1707_memory_ptr_$_t_struct$_SettingAccount_$1716_memory_ptr_$_t_struct$_SocialLinks_$1752_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (struct LaunchpadStructs.LaunchpadInfo memory,struct LaunchpadStructs.ClaimInfo memory,struct LaunchpadStructs.DexInfo memory,struct LaunchpadStructs.FeeSystem memory,struct LaunchpadStructs.SettingAccount memory,struct LaunchpadStructs.SocialLinks memory,uint256,uint256) external"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:270:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "6796:270:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1406,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7211:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7215:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "7211:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7223:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7211:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "IfStatement",
												"src": "7207:86:6",
												"trueBody": {
													"id": 1419,
													"nodeType": "Block",
													"src": "7226:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1415,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7271:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7275:5:6",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "7271:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1412,
																				"name": "fundAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "7249:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7241:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1410,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7241:8:6",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7241:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7262:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7241:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7241:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "7241:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1421,
														"name": "totalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "7309:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7323:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7309:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "7305:725:6",
												"trueBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "7326:704:6",
													"statements": [
														{
															"assignments": [
																1426
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1426,
																	"mutability": "mutable",
																	"name": "icoTokenErc20",
																	"nameLocation": "7348:13:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1472,
																	"src": "7341:20:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	"typeName": {
																		"id": 1425,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1424,
																			"name": "IERC20",
																			"nameLocations": [
																				"7341:6:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 190,
																			"src": "7341:6:6"
																		},
																		"referencedDeclaration": 190,
																		"src": "7341:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1431,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1428,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "7371:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
																				"typeString": "struct LaunchpadStructs.LaunchpadInfo memory"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7376:8:6",
																		"memberName": "icoToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1589,
																		"src": "7371:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1427,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "7364:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7364:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7341:44:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1435,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "7452:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7452:12:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1433,
																					"name": "icoTokenErc20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "7428:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7442:9:6",
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 147,
																				"src": "7428:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7428:37:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1438,
																			"name": "totalTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "7469:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7428:52:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a20496e73756666696369656e742042616c616e6365",
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7499:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f69acb569616da6a789bd9bf5ffc92e7dfaef4243921209176d9c5eff3536fc6",
																			"typeString": "literal_string \"LauchpadFactory: Insufficient Balance\""
																		},
																		"value": "LauchpadFactory: Insufficient Balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f69acb569616da6a789bd9bf5ffc92e7dfaef4243921209176d9c5eff3536fc6",
																			"typeString": "literal_string \"LauchpadFactory: Insufficient Balance\""
																		}
																	],
																	"id": 1432,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7402:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7402:151:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1442,
															"nodeType": "ExpressionStatement",
															"src": "7402:151:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1446,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "7618:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 1447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7618:12:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1450,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7640:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																								"typeString": "contract LaunchpadFactory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LaunchpadFactory_$1525",
																								"typeString": "contract LaunchpadFactory"
																							}
																						],
																						"id": 1449,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7632:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1448,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7632:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7632:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1444,
																					"name": "icoTokenErc20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "7594:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7608:9:6",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "7594:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7594:52:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1453,
																			"name": "totalTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "7671:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7594:88:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a20496e73756666696369656e7420416c6c6f77616e6365",
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7701:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc10b7abfe5bd4c3d2a563f64bae28c5c94da496067cf76ac1be5c0a5b6be5bf",
																			"typeString": "literal_string \"LauchpadFactory: Insufficient Allowance\""
																		},
																		"value": "LauchpadFactory: Insufficient Allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cc10b7abfe5bd4c3d2a563f64bae28c5c94da496067cf76ac1be5c0a5b6be5bf",
																			"typeString": "literal_string \"LauchpadFactory: Insufficient Allowance\""
																		}
																	],
																	"id": 1443,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7568:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7568:189:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "7568:189:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1461,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7844:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7844:12:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 1465,
																						"name": "launchpad",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1386,
																						"src": "7887:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7879:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1463,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "7879:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7879:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1467,
																				"name": "totalTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1372,
																				"src": "7920:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1459,
																				"name": "icoToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "7800:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IVirtualERC20_$1585",
																					"typeString": "contract IVirtualERC20"
																				}
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7809:12:6",
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 189,
																			"src": "7800:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7800:150:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c61756368706164466163746f72793a207472616e73666572206661696c6564",
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7969:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2321a2763116fb3d328da05a5143f1d4741d74e66a2a13095e1604e8648a8c08",
																			"typeString": "literal_string \"LauchpadFactory: transfer failed\""
																		},
																		"value": "LauchpadFactory: transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2321a2763116fb3d328da05a5143f1d4741d74e66a2a13095e1604e8648a8c08",
																			"typeString": "literal_string \"LauchpadFactory: transfer failed\""
																		}
																	],
																	"id": 1458,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7774:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7774:244:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "7774:244:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1478,
																	"name": "launchpad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "8072:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1477,
																"name": "ILaunchpad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "8061:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILaunchpad_$1574_$",
																	"typeString": "type(contract ILaunchpad)"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8061:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILaunchpad_$1574",
																"typeString": "contract ILaunchpad"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ILaunchpad_$1574",
																"typeString": "contract ILaunchpad"
															}
														],
														"expression": {
															"id": 1474,
															"name": "allLaunchpads",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "8042:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage",
																"typeString": "contract ILaunchpad[] storage ref"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8056:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8042:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr_$_t_contract$_ILaunchpad_$1574_$returns$__$attached_to$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr_$",
															"typeString": "function (contract ILaunchpad[] storage pointer,contract ILaunchpad)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8042:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "8042:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1488,
																	"name": "launchpad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "8139:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1487,
																"name": "ILaunchpad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "8128:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILaunchpad_$1574_$",
																	"typeString": "type(contract ILaunchpad)"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8128:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILaunchpad_$1574",
																"typeString": "contract ILaunchpad"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ILaunchpad_$1574",
																"typeString": "contract ILaunchpad"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1482,
																"name": "allLaunchpadsOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "8095:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_$",
																	"typeString": "mapping(address => contract ILaunchpad[] storage ref)"
																}
															},
															"id": 1485,
															"indexExpression": {
																"expression": {
																	"id": 1483,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8111:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8115:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8111:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8095:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage",
																"typeString": "contract ILaunchpad[] storage ref"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8123:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8095:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr_$_t_contract$_ILaunchpad_$1574_$returns$__$attached_to$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr_$",
															"typeString": "function (contract ILaunchpad[] storage pointer,contract ILaunchpad)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8095:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "8095:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1495,
																	"name": "launchpad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "8191:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8183:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8183:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8183:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1492,
														"name": "NewLaunchpad",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "8170:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8170:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "EmitStatement",
												"src": "8165:37:6"
											}
										]
									},
									"functionSelector": "49a1f14b",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deployLaunchpad",
									"nameLocation": "4791:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "4855:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "4817:42:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
													"typeString": "struct LaunchpadStructs.LaunchpadInfo"
												},
												"typeName": {
													"id": 1260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1259,
														"name": "LaunchpadStructs.LaunchpadInfo",
														"nameLocations": [
															"4817:16:6",
															"4834:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1610,
														"src": "4817:30:6"
													},
													"referencedDeclaration": 1610,
													"src": "4817:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_storage_ptr",
														"typeString": "struct LaunchpadStructs.LaunchpadInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "claimInfo",
												"nameLocation": "4904:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "4870:43:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ClaimInfo_$1617_memory_ptr",
													"typeString": "struct LaunchpadStructs.ClaimInfo"
												},
												"typeName": {
													"id": 1263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1262,
														"name": "LaunchpadStructs.ClaimInfo",
														"nameLocations": [
															"4870:16:6",
															"4887:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1617,
														"src": "4870:26:6"
													},
													"referencedDeclaration": 1617,
													"src": "4870:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimInfo_$1617_storage_ptr",
														"typeString": "struct LaunchpadStructs.ClaimInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "dexInfo",
												"nameLocation": "5025:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "4993:39:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DexInfo_$1630_memory_ptr",
													"typeString": "struct LaunchpadStructs.DexInfo"
												},
												"typeName": {
													"id": 1266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1265,
														"name": "LaunchpadStructs.DexInfo",
														"nameLocations": [
															"4993:16:6",
															"5010:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "4993:24:6"
													},
													"referencedDeclaration": 1630,
													"src": "4993:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DexInfo_$1630_storage_ptr",
														"typeString": "struct LaunchpadStructs.DexInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "feeInfo",
												"nameLocation": "5077:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "5043:41:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeSystem_$1707_memory_ptr",
													"typeString": "struct LaunchpadStructs.FeeSystem"
												},
												"typeName": {
													"id": 1269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1268,
														"name": "LaunchpadStructs.FeeSystem",
														"nameLocations": [
															"5043:16:6",
															"5060:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1707,
														"src": "5043:26:6"
													},
													"referencedDeclaration": 1707,
													"src": "5043:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeSystem_$1707_storage_ptr",
														"typeString": "struct LaunchpadStructs.FeeSystem"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "socialLinks",
												"nameLocation": "5131:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "5095:47:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SocialLinks_$1752_memory_ptr",
													"typeString": "struct LaunchpadStructs.SocialLinks"
												},
												"typeName": {
													"id": 1272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1271,
														"name": "LaunchpadStructs.SocialLinks",
														"nameLocations": [
															"5095:16:6",
															"5112:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1752,
														"src": "5095:28:6"
													},
													"referencedDeclaration": 1752,
													"src": "5095:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialLinks_$1752_storage_ptr",
														"typeString": "struct LaunchpadStructs.SocialLinks"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4806:343:6"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:0:6"
									},
									"scope": 1525,
									"src": "4782:3428:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "8352:39:6",
										"statements": [
											{
												"expression": {
													"id": 1507,
													"name": "allLaunchpads",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 972,
													"src": "8370:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage",
														"typeString": "contract ILaunchpad[] storage ref"
													}
												},
												"functionReturnParameters": 1506,
												"id": 1508,
												"nodeType": "Return",
												"src": "8363:20:6"
											}
										]
									},
									"functionSelector": "c06ca1dd",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalLaunchpads",
									"nameLocation": "8280:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8295:2:6"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "launchpads",
												"nameLocation": "8341:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "8321:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_memory_ptr",
													"typeString": "contract ILaunchpad[]"
												},
												"typeName": {
													"baseType": {
														"id": 1503,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1502,
															"name": "ILaunchpad",
															"nameLocations": [
																"8321:10:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1574,
															"src": "8321:10:6"
														},
														"referencedDeclaration": 1574,
														"src": "8321:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILaunchpad_$1574",
															"typeString": "contract ILaunchpad"
														}
													},
													"id": 1504,
													"nodeType": "ArrayTypeName",
													"src": "8321:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr",
														"typeString": "contract ILaunchpad[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8320:32:6"
									},
									"scope": 1525,
									"src": "8271:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "8584:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1519,
														"name": "allLaunchpadsOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "8602:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_$",
															"typeString": "mapping(address => contract ILaunchpad[] storage ref)"
														}
													},
													"id": 1521,
													"indexExpression": {
														"id": 1520,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "8618:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8602:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage",
														"typeString": "contract ILaunchpad[] storage ref"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1522,
												"nodeType": "Return",
												"src": "8595:29:6"
											}
										]
									},
									"functionSelector": "6de944dc",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalLaunchpadsByUser",
									"nameLocation": "8487:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "8517:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "8509:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8508:15:6"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "launchpadsByUser",
												"nameLocation": "8567:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "8547:36:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_memory_ptr",
													"typeString": "contract ILaunchpad[]"
												},
												"typeName": {
													"baseType": {
														"id": 1515,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1514,
															"name": "ILaunchpad",
															"nameLocations": [
																"8547:10:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1574,
															"src": "8547:10:6"
														},
														"referencedDeclaration": 1574,
														"src": "8547:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILaunchpad_$1574",
															"typeString": "contract ILaunchpad"
														}
													},
													"id": 1516,
													"nodeType": "ArrayTypeName",
													"src": "8547:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_ILaunchpad_$1574_$dyn_storage_ptr",
														"typeString": "contract ILaunchpad[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8546:38:6"
									},
									"scope": 1525,
									"src": "8478:154:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1526,
							"src": "437:8200:6",
							"usedErrors": []
						}
					],
					"src": "33:8606:6"
				},
				"id": 6
			},
			"interfaces/ILaunchpad.sol": {
				"ast": {
					"absolutePath": "interfaces/ILaunchpad.sol",
					"exportedSymbols": {
						"ILaunchpad": [
							1574
						],
						"LaunchpadStructs": [
							1753
						]
					},
					"id": 1575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1527,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "structs/LaunchpadStructs.sol",
							"file": "../structs/LaunchpadStructs.sol",
							"id": 1528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 1754,
							"src": "60:41:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILaunchpad",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1574,
							"linearizedBaseContracts": [
								1574
							],
							"name": "ILaunchpad",
							"nameLocation": "115:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "57801e6f",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "142:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "201:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "163:42:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_memory_ptr",
													"typeString": "struct LaunchpadStructs.LaunchpadInfo"
												},
												"typeName": {
													"id": 1530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1529,
														"name": "LaunchpadStructs.LaunchpadInfo",
														"nameLocations": [
															"163:16:7",
															"180:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1610,
														"src": "163:30:7"
													},
													"referencedDeclaration": 1610,
													"src": "163:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LaunchpadInfo_$1610_storage_ptr",
														"typeString": "struct LaunchpadStructs.LaunchpadInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "userClaimInfo",
												"nameLocation": "250:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "216:47:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ClaimInfo_$1617_memory_ptr",
													"typeString": "struct LaunchpadStructs.ClaimInfo"
												},
												"typeName": {
													"id": 1533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1532,
														"name": "LaunchpadStructs.ClaimInfo",
														"nameLocations": [
															"216:16:7",
															"233:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1617,
														"src": "216:26:7"
													},
													"referencedDeclaration": 1617,
													"src": "216:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimInfo_$1617_storage_ptr",
														"typeString": "struct LaunchpadStructs.ClaimInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "dexInfo",
												"nameLocation": "375:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "343:39:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DexInfo_$1630_memory_ptr",
													"typeString": "struct LaunchpadStructs.DexInfo"
												},
												"typeName": {
													"id": 1536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1535,
														"name": "LaunchpadStructs.DexInfo",
														"nameLocations": [
															"343:16:7",
															"360:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "343:24:7"
													},
													"referencedDeclaration": 1630,
													"src": "343:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DexInfo_$1630_storage_ptr",
														"typeString": "struct LaunchpadStructs.DexInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "feeInfo",
												"nameLocation": "427:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "393:41:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeSystem_$1707_memory_ptr",
													"typeString": "struct LaunchpadStructs.FeeSystem"
												},
												"typeName": {
													"id": 1539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1538,
														"name": "LaunchpadStructs.FeeSystem",
														"nameLocations": [
															"393:16:7",
															"410:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1707,
														"src": "393:26:7"
													},
													"referencedDeclaration": 1707,
													"src": "393:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeSystem_$1707_storage_ptr",
														"typeString": "struct LaunchpadStructs.FeeSystem"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "settingAccount",
												"nameLocation": "484:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "445:53:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SettingAccount_$1716_memory_ptr",
													"typeString": "struct LaunchpadStructs.SettingAccount"
												},
												"typeName": {
													"id": 1542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1541,
														"name": "LaunchpadStructs.SettingAccount",
														"nameLocations": [
															"445:16:7",
															"462:14:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "445:31:7"
													},
													"referencedDeclaration": 1716,
													"src": "445:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SettingAccount_$1716_storage_ptr",
														"typeString": "struct LaunchpadStructs.SettingAccount"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "socialLinks",
												"nameLocation": "545:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "509:47:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SocialLinks_$1752_memory_ptr",
													"typeString": "struct LaunchpadStructs.SocialLinks"
												},
												"typeName": {
													"id": 1545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1544,
														"name": "LaunchpadStructs.SocialLinks",
														"nameLocations": [
															"509:16:7",
															"526:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1752,
														"src": "509:28:7"
													},
													"referencedDeclaration": 1752,
													"src": "509:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialLinks_$1752_storage_ptr",
														"typeString": "struct LaunchpadStructs.SocialLinks"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_maxLP",
												"nameLocation": "575:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "567:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_penaltyFeePercent",
												"nameLocation": "600:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "592:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:473:7"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:0:7"
									},
									"scope": 1574,
									"src": "133:502:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27b12bb2",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLaunchpadInfo",
									"nameLocation": "652:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:7"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "721:43:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LaunchpadReturnInfo_$1693_memory_ptr",
													"typeString": "struct LaunchpadStructs.LaunchpadReturnInfo"
												},
												"typeName": {
													"id": 1556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1555,
														"name": "LaunchpadStructs.LaunchpadReturnInfo",
														"nameLocations": [
															"721:16:7",
															"738:19:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1693,
														"src": "721:36:7"
													},
													"referencedDeclaration": 1693,
													"src": "721:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LaunchpadReturnInfo_$1693_storage_ptr",
														"typeString": "struct LaunchpadStructs.LaunchpadReturnInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:45:7"
									},
									"scope": 1574,
									"src": "643:123:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "26009dca",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerZoneInfo",
									"nameLocation": "783:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "818:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "810:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:31:7"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "854:37:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnerZoneInfo_$1702_memory_ptr",
													"typeString": "struct LaunchpadStructs.OwnerZoneInfo"
												},
												"typeName": {
													"id": 1564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1563,
														"name": "LaunchpadStructs.OwnerZoneInfo",
														"nameLocations": [
															"854:16:7",
															"871:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1702,
														"src": "854:30:7"
													},
													"referencedDeclaration": 1702,
													"src": "854:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnerZoneInfo_$1702_storage_ptr",
														"typeString": "struct LaunchpadStructs.OwnerZoneInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:39:7"
									},
									"scope": 1574,
									"src": "774:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae959e71",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getJoinedUsers",
									"nameLocation": "910:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:7"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "965:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1569,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "965:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1570,
													"nodeType": "ArrayTypeName",
													"src": "965:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:18:7"
									},
									"scope": 1574,
									"src": "901:82:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1575,
							"src": "105:881:7",
							"usedErrors": []
						}
					],
					"src": "33:955:7"
				},
				"id": 7
			},
			"interfaces/IVirtualERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IVirtualERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						],
						"IVirtualERC20": [
							1585
						]
					},
					"id": 1586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 191,
							"src": "33:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 1577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1578,
										"name": "IERC20",
										"nameLocations": [
											"147:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "147:6:8"
									},
									"id": 1579,
									"nodeType": "InheritanceSpecifier",
									"src": "147:6:8"
								}
							],
							"canonicalName": "IVirtualERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1585,
							"linearizedBaseContracts": [
								1585,
								190
							],
							"name": "IVirtualERC20",
							"nameLocation": "130:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "169:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:2:8"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "203:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1581,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "203:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:7:8"
									},
									"scope": 1585,
									"src": "160:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1586,
							"src": "120:93:8",
							"usedErrors": []
						}
					],
					"src": "33:180:8"
				},
				"id": 8
			},
			"structs/LaunchpadStructs.sol": {
				"ast": {
					"absolutePath": "structs/LaunchpadStructs.sol",
					"exportedSymbols": {
						"LaunchpadStructs": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LaunchpadStructs",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1753,
							"linearizedBaseContracts": [
								1753
							],
							"name": "LaunchpadStructs",
							"nameLocation": "68:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LaunchpadStructs.LaunchpadInfo",
									"id": 1610,
									"members": [
										{
											"constant": false,
											"id": 1589,
											"mutability": "mutable",
											"name": "icoToken",
											"nameLocation": "132:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "124:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1588,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "124:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1591,
											"mutability": "mutable",
											"name": "feeToken",
											"nameLocation": "205:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "197:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1590,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "197:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1593,
											"mutability": "mutable",
											"name": "softCap",
											"nameLocation": "293:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "285:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1592,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1595,
											"mutability": "mutable",
											"name": "hardCap",
											"nameLocation": "363:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "355:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1594,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "355:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1597,
											"mutability": "mutable",
											"name": "presaleRate",
											"nameLocation": "433:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "425:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1596,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1599,
											"mutability": "mutable",
											"name": "minInvest",
											"nameLocation": "506:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "498:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1598,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1601,
											"mutability": "mutable",
											"name": "maxInvest",
											"nameLocation": "572:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "564:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1600,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "564:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1603,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "655:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "647:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1602,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "647:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1605,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "724:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "716:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1604,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "716:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1607,
											"mutability": "mutable",
											"name": "whitelistPool",
											"nameLocation": "787:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "779:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1606,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "779:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1609,
											"mutability": "mutable",
											"name": "poolType",
											"nameLocation": "1080:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1610,
											"src": "1072:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1608,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1072:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LaunchpadInfo",
									"nameLocation": "99:13:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "92:1023:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.ClaimInfo",
									"id": 1617,
									"members": [
										{
											"constant": false,
											"id": 1612,
											"mutability": "mutable",
											"name": "firstReleasePercent",
											"nameLocation": "1323:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 1617,
											"src": "1315:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1611,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1315:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1614,
											"mutability": "mutable",
											"name": "vestingPeriodEachCycle",
											"nameLocation": "1409:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 1617,
											"src": "1401:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1613,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1401:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1616,
											"mutability": "mutable",
											"name": "tokenReleaseEachCycle",
											"nameLocation": "1492:21:9",
											"nodeType": "VariableDeclaration",
											"scope": 1617,
											"src": "1484:29:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1615,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1484:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ClaimInfo",
									"nameLocation": "1130:9:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "1123:466:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.DexInfo",
									"id": 1630,
									"members": [
										{
											"constant": false,
											"id": 1619,
											"mutability": "mutable",
											"name": "manualListing",
											"nameLocation": "1630:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "1625:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1618,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1625:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1621,
											"mutability": "mutable",
											"name": "routerAddress",
											"nameLocation": "1942:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "1934:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1620,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1934:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1623,
											"mutability": "mutable",
											"name": "factoryAddress",
											"nameLocation": "2023:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "2015:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1622,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2015:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1625,
											"mutability": "mutable",
											"name": "listingPrice",
											"nameLocation": "2099:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "2091:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1624,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2091:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1627,
											"mutability": "mutable",
											"name": "listingPercent",
											"nameLocation": "2222:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "2214:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1626,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2214:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1629,
											"mutability": "mutable",
											"name": "lpLockTime",
											"nameLocation": "2361:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "2353:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1628,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2353:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DexInfo",
									"nameLocation": "1606:7:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "1599:863:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.LaunchpadReturnInfo",
									"id": 1693,
									"members": [
										{
											"constant": false,
											"id": 1632,
											"mutability": "mutable",
											"name": "softCap",
											"nameLocation": "2518:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2510:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1631,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2510:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1634,
											"mutability": "mutable",
											"name": "hardCap",
											"nameLocation": "2545:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2537:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1633,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2537:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1636,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "2571:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2563:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1635,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2563:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1638,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "2599:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2591:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1637,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2591:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1640,
											"mutability": "mutable",
											"name": "state",
											"nameLocation": "2625:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2617:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1639,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2617:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1642,
											"mutability": "mutable",
											"name": "raisedAmount",
											"nameLocation": "2743:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2735:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1641,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2735:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1644,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2802:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2794:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1643,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2794:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1646,
											"mutability": "mutable",
											"name": "feeToken",
											"nameLocation": "2894:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2886:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1645,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2886:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1648,
											"mutability": "mutable",
											"name": "listingTime",
											"nameLocation": "2922:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "2914:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1647,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2914:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1650,
											"mutability": "mutable",
											"name": "whitelistPool",
											"nameLocation": "3028:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3020:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1649,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3020:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1652,
											"mutability": "mutable",
											"name": "logoURL",
											"nameLocation": "3513:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3506:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1651,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3506:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1654,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "3538:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3531:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1653,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3531:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1656,
											"mutability": "mutable",
											"name": "websiteURL",
											"nameLocation": "3567:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3560:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1655,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3560:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1658,
											"mutability": "mutable",
											"name": "facebookURL",
											"nameLocation": "3595:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3588:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1657,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3588:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1660,
											"mutability": "mutable",
											"name": "twitterURL",
											"nameLocation": "3624:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3617:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1659,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3617:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1662,
											"mutability": "mutable",
											"name": "githubURL",
											"nameLocation": "3652:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3645:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1661,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3645:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1664,
											"mutability": "mutable",
											"name": "telegramURL",
											"nameLocation": "3679:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3672:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1663,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3672:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1666,
											"mutability": "mutable",
											"name": "instagramURL",
											"nameLocation": "3708:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3701:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1665,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3701:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1668,
											"mutability": "mutable",
											"name": "discordURL",
											"nameLocation": "3738:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3731:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1667,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3731:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1670,
											"mutability": "mutable",
											"name": "redditURL",
											"nameLocation": "3766:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3759:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1669,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3759:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1672,
											"mutability": "mutable",
											"name": "icoToken",
											"nameLocation": "3796:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3788:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1671,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3788:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1674,
											"mutability": "mutable",
											"name": "firstReleasePercent",
											"nameLocation": "3823:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3815:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1673,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3815:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1676,
											"mutability": "mutable",
											"name": "listingPercent",
											"nameLocation": "3861:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3853:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1675,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3853:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1678,
											"mutability": "mutable",
											"name": "listingPrice",
											"nameLocation": "3894:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3886:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1677,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3886:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1680,
											"mutability": "mutable",
											"name": "lpLockTime",
											"nameLocation": "3925:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3917:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1679,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3917:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1682,
											"mutability": "mutable",
											"name": "maxInvest",
											"nameLocation": "3954:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3946:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1681,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3946:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1684,
											"mutability": "mutable",
											"name": "minInvest",
											"nameLocation": "3982:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "3974:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1683,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3974:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1686,
											"mutability": "mutable",
											"name": "maxLiquidity",
											"nameLocation": "4010:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "4002:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1685,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4002:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1688,
											"mutability": "mutable",
											"name": "presaleRate",
											"nameLocation": "4041:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "4033:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1687,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4033:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1690,
											"mutability": "mutable",
											"name": "totalSoldTokens",
											"nameLocation": "4071:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "4063:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4063:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1692,
											"mutability": "mutable",
											"name": "manualListing",
											"nameLocation": "4102:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1693,
											"src": "4097:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1691,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4097:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LaunchpadReturnInfo",
									"nameLocation": "2479:19:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "2472:1651:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.OwnerZoneInfo",
									"id": 1702,
									"members": [
										{
											"constant": false,
											"id": 1695,
											"mutability": "mutable",
											"name": "isOwner",
											"nameLocation": "4227:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "4222:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1694,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4222:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1697,
											"mutability": "mutable",
											"name": "whitelistPool",
											"nameLocation": "4279:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "4271:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1696,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4271:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1699,
											"mutability": "mutable",
											"name": "canFinalize",
											"nameLocation": "4384:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "4379:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1698,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4379:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1701,
											"mutability": "mutable",
											"name": "canCancel",
											"nameLocation": "4470:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "4465:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1700,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4465:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnerZoneInfo",
									"nameLocation": "4138:13:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "4131:532:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.FeeSystem",
									"id": 1707,
									"members": [
										{
											"constant": false,
											"id": 1704,
											"mutability": "mutable",
											"name": "raisedFeePercent",
											"nameLocation": "4975:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 1707,
											"src": "4967:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1703,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4967:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1706,
											"mutability": "mutable",
											"name": "raisedTokenFeePercent",
											"nameLocation": "5132:21:9",
											"nodeType": "VariableDeclaration",
											"scope": 1707,
											"src": "5124:29:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1705,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5124:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeSystem",
									"nameLocation": "4678:9:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "4671:752:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.SettingAccount",
									"id": 1716,
									"members": [
										{
											"constant": false,
											"id": 1709,
											"mutability": "mutable",
											"name": "deployer",
											"nameLocation": "5472:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1716,
											"src": "5464:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1708,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5464:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1711,
											"mutability": "mutable",
											"name": "superAccount",
											"nameLocation": "5618:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1716,
											"src": "5610:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1710,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5610:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1713,
											"mutability": "mutable",
											"name": "fundAddress",
											"nameLocation": "5754:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1716,
											"src": "5738:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1712,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5738:15:9",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1715,
											"mutability": "mutable",
											"name": "virtualLock",
											"nameLocation": "5851:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1716,
											"src": "5843:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1714,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5843:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SettingAccount",
									"nameLocation": "5438:14:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "5431:487:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.CalculateTokenInput",
									"id": 1731,
									"members": [
										{
											"constant": false,
											"id": 1718,
											"mutability": "mutable",
											"name": "feeToken",
											"nameLocation": "6512:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "6504:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1717,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6504:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1720,
											"mutability": "mutable",
											"name": "presaleRate",
											"nameLocation": "6633:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "6625:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1719,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6625:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1722,
											"mutability": "mutable",
											"name": "hardCap",
											"nameLocation": "6742:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "6734:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1721,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6734:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1724,
											"mutability": "mutable",
											"name": "raisedTokenFeePercent",
											"nameLocation": "6828:21:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "6820:29:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1723,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6820:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1726,
											"mutability": "mutable",
											"name": "raisedFeePercent",
											"nameLocation": "6992:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "6984:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1725,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6984:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1728,
											"mutability": "mutable",
											"name": "listingPercent",
											"nameLocation": "7148:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "7140:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1727,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7140:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1730,
											"mutability": "mutable",
											"name": "listingPrice",
											"nameLocation": "7270:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "7262:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1729,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7262:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateTokenInput",
									"nameLocation": "6473:19:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "6466:1044:9",
									"visibility": "public"
								},
								{
									"canonicalName": "LaunchpadStructs.SocialLinks",
									"id": 1752,
									"members": [
										{
											"constant": false,
											"id": 1733,
											"mutability": "mutable",
											"name": "logoURL",
											"nameLocation": "7557:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7550:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1732,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7550:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1735,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "7582:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7575:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1734,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7575:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1737,
											"mutability": "mutable",
											"name": "websiteURL",
											"nameLocation": "7611:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7604:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1736,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7604:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1739,
											"mutability": "mutable",
											"name": "facebookURL",
											"nameLocation": "7639:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7632:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1738,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7632:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1741,
											"mutability": "mutable",
											"name": "twitterURL",
											"nameLocation": "7668:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7661:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1740,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7661:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1743,
											"mutability": "mutable",
											"name": "githubURL",
											"nameLocation": "7696:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7689:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1742,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7689:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1745,
											"mutability": "mutable",
											"name": "telegramURL",
											"nameLocation": "7723:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7716:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1744,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7716:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1747,
											"mutability": "mutable",
											"name": "instagramURL",
											"nameLocation": "7752:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7745:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1746,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7745:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1749,
											"mutability": "mutable",
											"name": "discordURL",
											"nameLocation": "7782:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7775:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1748,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7775:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1751,
											"mutability": "mutable",
											"name": "redditURL",
											"nameLocation": "7810:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1752,
											"src": "7803:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1750,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "7803:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SocialLinks",
									"nameLocation": "7527:11:9",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "7520:307:9",
									"visibility": "public"
								}
							],
							"scope": 1754,
							"src": "60:7770:9",
							"usedErrors": []
						}
					],
					"src": "33:7805:9"
				},
				"id": 9
			}
		}
	}
}